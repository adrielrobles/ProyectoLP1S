
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALIAS AND ARRAY ASIGNACION BACKS BREAK CADENA CASE CHOMP CLASS COMA CORCHETE_D CORCHETE_I DEF DEFINED DELETE DICCIONARIO DIV DIVISION_IGUAL DO DOBLE_IGUAL EACH ELSE ELSEIF END ENSURE ENTERO EXPONENCIAL_IGUAL FALSE FILE FLOAT FLOTANTE FLUSH FOR GETS IF IGUAL IN INTEGER INTERVALO LINE LLAVE_D LLAVE_I MAS MAS_IGUAL MAYOR_IGUAL MAYOR_QUE MENOR_IGUAL MENOR_QUE MENOS MODULE MODULO MODULO_IGUAL MULTIPLICACION MULTIPLICACION_IGUAL NEW NEXT NIL NOMBRE_CLASE NOMBRE_FUNCION NOMBRE_VARIABLE NOT NO_IGUAL OPEN OR PAR_D PAR_I PIPE POTENCIA PRINT PUNTO PUSH PUTS READ REDO RESCUE RESTA_IGUAL RETRY RETURN SELF SPLIT STDOUT STRING SUPER THEN TOFLOAT TOINTEGER TOSTRING TRUE UNDEF UNLEES UNTIL VAL VFILE WHEN WHILE WRITE YIELDsentencias : NOMBRE_VARIABLE\n                '
    
_lr_action_items = {'NOMBRE_VARIABLE':([0,],[2,]),'$end':([1,2,],[0,-1,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sentencias':([0,],[1,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sentencias","S'",1,None,None,None),
  ('sentencias -> NOMBRE_VARIABLE','sentencias',1,'p_sentencias','Sintactico.py',8),
]
