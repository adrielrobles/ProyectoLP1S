
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALIAS AND ARRAY ASIGNACION BACKS BREAK CADENA CASE CHOMP CLASS CLEAR COMA CORCHETE_D CORCHETE_I DEF DEFAULT DEFINED DELETE DICCIONARIO DIV DIVISION_IGUAL DO DOBLE_IGUAL EACH ELSE ELSEIF EMPTY END ENSURE ENTERO EXPONENCIAL_IGUAL FALSE FILE FLOAT FLOTANTE FLUSH FOR GETS HASH HAS_KEY HAS_VALUE IF IGUAL IN INSERT INTEGER INTERROGACION INTERVALO KEY KEYS LENGTH LINE LLAVE_D LLAVE_I MAS MAS_IGUAL MAYOR_IGUAL MAYOR_QUE MENOR_IGUAL MENOR_QUE MENOS MODULE MODULO MODULO_IGUAL MULTIPLICACION MULTIPLICACION_IGUAL NEW NEXT NIL NOMBRE_CLASE NOMBRE_FUNCION NOMBRE_VARIABLE NOT NO_IGUAL OPEN OR PAR_D PAR_I PIPE POTENCIA PRINT PUNTO PUSH PUTS READ READLINES REDO RESCUE RESTA_IGUAL RETRY RETURN SELF SIZE SPLIT STDOUT STRING SUPER THEN TOFLOAT TOINTEGER TOSTRING TRUE UNDEF UNLEES UNTIL VAL VALUES VARIABLE_CLASE VARIABLE_GLOBAL VARIABLE_INSTANCIA VFILE WHEN WHILE WRITE YIELDinstrucciones : variablesTotales\n                   | estructuraAsignacion\n                   | estructuraComparacion\n                   | estructurasControl\n                   | estructuraArray\n                   | funcionesArreglo\n                   | funcionesString\n                   | estructuraHash\n                   | estructuraFunciones\n                   | operacion\n                   | estructuraSalida\n                   | estructuraCasting\n                   | limpiarDatos\n                   | estructuraEscribirArchivo\n                   | estructuraClase\n                   | estructuraRecorrerArchivo\n                   | metodosHash\n                cuerpo : variablesTotales\n              | estructuraAsignacion\n              | estructuraComparacion\n              | estructurasControl\n              | estructuraArray\n              | funcionesArreglo\n              | funcionesString\n              | estructuraHash\n              | estructuraFunciones\n              | llamadoFunciones\n              | operacion\n              | estructuraSalida\n              | estructuraCasting\n              | limpiarDatos\n              | estructuraEscribirArchivo\n              | estructuraRecorrerArchivo\n    variablesTotales : variables \n                        | boleanos\n    variables : CADENA\n               | numericos\n               | TiposNomVariables\n  TiposNomVariables : NOMBRE_VARIABLE\n                       | VARIABLE_GLOBAL\n                       | VARIABLE_INSTANCIA\n                       | VARIABLE_CLASE boleanos : TRUE \n                | FALSE\n    numericos : ENTERO \n                 | FLOTANTE\n    estructuraClase : CLASS NOMBRE_CLASEvalorTodos : variablesTotales\n                | estructuraHash\n                | estructuraArray\n  estructuraAsignacion : TiposNomVariables tipoAsignacion variables\n                          | TiposNomVariables IGUAL variablesTotales\n                          | TiposNomVariables IGUAL operacion\n                          | TiposNomVariables IGUAL estructuraComparacion\n                          | TiposNomVariables IGUAL estructuraArray\n                          | TiposNomVariables IGUAL estructuraHash\n                          | TiposNomVariables IGUAL llamadoFunciones\n                          | TiposNomVariables IGUAL estructuraCasting\n                          | TiposNomVariables IGUAL estructuraEntrada\n                          | TiposNomVariables IGUAL estructuraLeerArchivo\n                          | TiposNomVariables IGUAL estructuraLeerArchivoLinea\n                          | TiposNomVariables IGUAL estructuraAbrirArchivo\n                          | TiposNomVariables IGUAL estructuraSplit\n  tipoAsignacion : MAS_IGUAL\n                    | RESTA_IGUAL\n                    | MULTIPLICACION_IGUAL\n                    | DIVISION_IGUAL\n                    | MODULO_IGUAL\n                    | EXPONENCIAL_IGUAL\n                 operacion : variablesoperacion operador variablesoperacion\n                | PAR_I variablesoperacion operador variablesoperacion PAR_D\n                | variablesoperacion operador variablesoperacion operador operacion\n                | PAR_I variablesoperacion operador variablesoperacion PAR_D operador operacion\n   variablesoperacion : numericos\n                         | TiposNomVariables\n  operador : MAS\n              | MENOS\n              | MULTIPLICACION\n              | POTENCIA\n              | DIV\n              | MODULO\n  estructuraComparacion : variablesTotales comparador variablesTotales\n                           | NOT variablesTotales comparador variablesTotales\n                           | NOT variables\n                           | NOT boleanos\n                           | variablesTotales comparador variablesTotales operadoresComparacion estructuraComparacion\n                           comparador : MENOR_QUE\n                | MAYOR_QUE\n                | MAYOR_IGUAL\n                | DOBLE_IGUAL\n                | MENOR_IGUAL\n                | NO_IGUAL\n  operadoresComparacion : AND\n                           | OR\n  estructurasControl : estructuraIf\n                        | estructuraUntil\n                        | estructuraCase\n   estructuraIf : IF PAR_I estructuraComparacion PAR_D cuerpo END\n                  | IF estructuraComparacion cuerpo END\n                  | IF PAR_I estructuraComparacion PAR_D cuerpo estructuraElse END\n                  | IF estructuraComparacion cuerpo estructuraElse END\n  estructuraUntil : UNTIL PAR_I estructuraComparacion PAR_D cuerpo END\n                     | UNTIL estructuraComparacion cuerpo END\n  estructuraElse : ELSE cuerpoestructuraCase : CASE NOMBRE_VARIABLE estructuraWhenI ENDestructuraWhenI : estructuraWhen estructuraElseestructuraWhen : WHEN sentenciaWhen cuerpo\n                    | estructuraWhen WHEN sentenciaWhen cuerpo\n   sentenciaWhen : estructuraComparacion\n                    | intervaloW\n  intervaloW : ENTERO INTERVALO ENTERO estructuraArray : CORCHETE_I CORCHETE_D\n                     | ARRAY PUNTO NEW\n                     | CORCHETE_I parametrosA CORCHETE_D\n                parametrosA : variablesTotales\n                 | variablesTotales COMA parametrosA\n  funcionesArreglo : TiposNomVariables PUNTO nombreFuncionesA\n                      | estructuraArray PUNTO nombreFuncionesA\n  nombreFuncionesA : PUSH PAR_I variablesTotales PAR_D\n                      | DELETE PAR_I ENTERO PAR_D\n  funcionesString : TiposNomVariables PUNTO nombreFuncionesS\n                     | CADENA PUNTO nombreFuncionesS\n  nombreFuncionesS : INSERT PAR_I ENTERO COMA CADENA PAR_D\n                      | INSERT PAR_I ENTERO COMA TiposNomVariables PAR_D\n                      | INSERT PAR_I TiposNomVariables COMA CADENA PAR_D\n                      | INSERT PAR_I TiposNomVariables COMA TiposNomVariables PAR_D\n                      | SIZE PAR_I  PAR_D\n                      | SIZE\n  estructuraHash : LLAVE_I cuerpoH LLAVE_DcuerpoH : CADENA ASIGNACION valorTodos\n             | cuerpoH COMA CADENA ASIGNACION valorTodos\n  metodosHash : TiposNomVariables PUNTO HAS_VALUE INTERROGACION PAR_I valorTodos PAR_D\n                         | TiposNomVariables PUNTO HAS_KEY INTERROGACION PAR_I CADENA PAR_D\n                         | TiposNomVariables PUNTO EMPTY INTERROGACION\n                         | TiposNomVariables PUNTO CLEAR\n                         | TiposNomVariables PUNTO KEYS\n                         | TiposNomVariables PUNTO LENGTH\n                         | TiposNomVariables PUNTO VALUES\n                         | TiposNomVariables PUNTO KEY PAR_I valorTodos PAR_D\n                         | TiposNomVariables PUNTO DELETE PAR_I CADENA PAR_D\n                         | TiposNomVariables PUNTO DEFAULT IGUAL valorF\n\n  estructuraFunciones : definicionF END definicionF : DEF funcionSinAtributos\n                  | DEF funcionConAtributos\n                  | DEF funcionConDefectos\n  funcionSinAtributos : NOMBRE_FUNCION PAR_I PAR_D cuerpo\n  funcionConAtributos : NOMBRE_FUNCION PAR_I parametrosFunciones PAR_D cuerpo\n  parametrosFunciones : NOMBRE_VARIABLE\n                         | NOMBRE_VARIABLE COMA parametrosFunciones\n  llamadoFunciones : NOMBRE_FUNCION PAR_I PAR_D \n                      | NOMBRE_FUNCION PAR_I parametrosA PAR_D\n  funcionConDefectos : NOMBRE_FUNCION PAR_I parametrosFuncionesDefecto PAR_D cuerpoparametrosFuncionesDefecto : NOMBRE_VARIABLE IGUAL valorF\n                                | NOMBRE_VARIABLE IGUAL valorF COMA parametrosFuncionesDefecto \n                                \n  valorF : ENTERO\n            | FLOTANTE\n            | CADENA\n            | TRUE\n            | FALSE\n  estructuraSalida : operadoresSalidas cuerpoSalida\n                      | operadoresSalidas PAR_I cuerpoSalida PAR_D\n                operadoresSalidas : PUTS\n                       | PRINT \n                cuerpoSalida : variablesTotales\n                  | CADENA MAS TiposNomVariables\n                  | operacion\n  estructuraEntrada : GETS PUNTO CHOMP\n                limpiarDatos : STDOUT PUNTO FLUSH\n                 estructuraCasting : castingString\n                        | castingInteger\n                        | castingFloat\n   castingString : ENTERO PUNTO TOSTRING\n                    | FLOTANTE PUNTO TOSTRING\n                    | STRING PAR_I ENTERO PAR_D\n                    | STRING PAR_I FLOTANTE PAR_D\n   castingInteger : CADENA PUNTO TOINTEGER\n                    | FLOTANTE PUNTO TOINTEGER\n                    | INTEGER PAR_I CADENA PAR_D\n                    | INTEGER PAR_I FLOTANTE PAR_D\n   castingFloat : ENTERO PUNTO TOFLOAT\n                    | CADENA PUNTO TOFLOAT\n                    | FLOAT PAR_I ENTERO PAR_D\n                    | FLOAT PAR_I CADENA PAR_D\n  estructuraLeerArchivo : FILE PUNTO READ PAR_I TiposNomVariables PAR_D\n                             | FILE PUNTO READ PAR_I CADENA PAR_D\n    estructuraLeerArchivoLinea : FILE PUNTO READLINES PAR_I TiposNomVariables PAR_D\n                                  | FILE PUNTO READLINES PAR_I CADENA PAR_D\n    estructuraAbrirArchivo : FILE PUNTO OPEN PAR_I TiposNomVariables COMA CADENA PAR_D\n                              | FILE PUNTO OPEN PAR_I CADENA COMA CADENA PAR_D\n  estructuraRecorrerArchivo : variablesRecorrer PUNTO EACH DO PIPE NOMBRE_VARIABLE PIPE cuerpo END\n                                 | TiposNomVariables PUNTO EACH DO PIPE NOMBRE_VARIABLE PIPE cuerpo END\n                                 | estructuraAbrirArchivo DO PIPE NOMBRE_VARIABLE PIPE cuerpo END\n    estructuraSplit : TiposNomVariables PUNTO SPLIT PAR_I CADENA PAR_D\n                       | estructuraLeerArchivo PUNTO SPLIT PAR_I CADENA PAR_DvariablesRecorrer : estructuraLeerArchivoLinea\n                         | estructuraSplit\n    estructuraEscribirArchivo : FILE PUNTO WRITE PAR_I TiposNomVariables COMA TiposNomVariables PAR_D\n                                 | FILE PUNTO WRITE PAR_I TiposNomVariables COMA CADENA PAR_D\n                                 | FILE PUNTO WRITE PAR_I CADENA COMA CADENA PAR_D\n                                 | FILE PUNTO WRITE PAR_I CADENA COMA TiposNomVariables PAR_D\n                                 | TiposNomVariables PUNTO WRITE PAR_I CADENA PAR_D\n    '
    
_lr_action_items = {'NOT':([0,19,20,45,47,48,49,50,51,52,53,72,83,84,85,86,87,88,89,118,119,121,122,133,220,232,233,234,255,272,275,277,281,282,283,284,286,296,319,337,341,342,374,380,395,],[26,-34,-35,-39,-43,-44,-40,-41,-42,26,26,26,-84,-85,-36,-37,-38,-45,-46,26,26,26,26,-82,26,26,-93,-94,-83,26,26,26,26,26,-109,-110,26,-86,26,26,26,26,-111,26,26,]),'CORCHETE_I':([0,19,20,45,47,48,49,50,51,72,83,84,85,86,87,88,89,119,122,133,183,247,255,272,275,277,282,283,284,286,296,304,319,320,337,341,342,374,380,395,],[30,-34,-35,-39,-43,-44,-40,-41,-42,30,-84,-85,-36,-37,-38,-45,-46,30,30,-82,30,30,-83,30,30,30,30,-109,-110,30,-86,30,30,30,30,30,30,-111,30,30,]),'ARRAY':([0,19,20,45,47,48,49,50,51,72,83,84,85,86,87,88,89,119,122,133,183,247,255,272,275,277,282,283,284,286,296,304,319,320,337,341,342,374,380,395,],[31,-34,-35,-39,-43,-44,-40,-41,-42,31,-84,-85,-36,-37,-38,-45,-46,31,31,-82,31,31,-83,31,31,31,31,-109,-110,31,-86,31,31,31,31,31,31,-111,31,31,]),'CADENA':([0,19,20,26,30,33,37,45,47,48,49,50,51,52,53,56,57,63,64,65,66,67,68,69,71,72,74,75,76,77,78,79,83,84,85,86,87,88,89,109,118,119,121,122,131,132,133,174,176,182,183,220,232,233,234,235,238,242,247,248,249,250,253,255,267,268,269,270,272,275,277,281,282,283,284,286,296,304,305,319,320,337,341,342,344,355,356,361,362,363,364,374,380,395,],[32,-34,-35,85,85,96,111,-39,-43,-44,-40,-41,-42,85,85,-162,-163,85,-87,-88,-89,-90,-91,-92,85,154,-64,-65,-66,-67,-68,-69,-84,-85,-36,-37,-38,-45,-46,111,85,32,85,32,228,231,-82,85,85,257,85,85,85,-93,-94,85,85,302,85,307,311,314,318,-83,325,327,329,331,32,32,32,85,32,-109,-110,32,-86,85,351,32,85,32,32,32,311,383,386,390,391,393,394,-111,32,32,]),'LLAVE_I':([0,19,20,45,47,48,49,50,51,72,83,84,85,86,87,88,89,119,122,133,183,247,255,272,275,277,282,283,284,286,296,304,319,320,337,341,342,374,380,395,],[33,-34,-35,-39,-43,-44,-40,-41,-42,33,-84,-85,-36,-37,-38,-45,-46,33,33,-82,33,33,-83,33,33,33,33,-109,-110,33,-86,33,33,33,33,33,33,-111,33,33,]),'PAR_I':([0,19,20,37,45,47,48,49,50,51,52,53,56,57,60,61,62,72,83,84,85,86,87,88,89,99,100,101,102,103,104,109,119,122,127,133,135,136,151,157,166,167,169,170,171,172,192,193,194,195,244,245,255,262,272,275,277,282,283,284,286,296,319,337,341,342,360,374,380,395,],[36,-34,-35,109,-39,-43,-44,-40,-41,-42,118,121,-162,-163,130,131,132,36,-84,-85,-36,-37,-38,-45,-46,-76,-77,-78,-79,-80,-81,36,36,36,221,-82,235,236,238,242,247,248,250,251,252,253,267,268,269,270,304,305,-83,36,36,36,36,36,-109,-110,36,-86,36,36,36,36,36,-111,36,36,]),'STDOUT':([0,19,20,45,47,48,49,50,51,83,84,85,86,87,88,89,119,122,133,255,272,275,277,282,283,284,286,296,319,337,341,342,374,380,395,],[41,-34,-35,-39,-43,-44,-40,-41,-42,-84,-85,-36,-37,-38,-45,-46,41,41,-82,-83,41,41,41,41,-109,-110,41,-86,41,41,41,41,-111,41,41,]),'FILE':([0,19,20,45,47,48,49,50,51,72,83,84,85,86,87,88,89,119,122,133,255,272,275,277,282,283,284,286,296,319,337,341,342,374,380,395,],[42,-34,-35,-39,-43,-44,-40,-41,-42,153,-84,-85,-36,-37,-38,-45,-46,42,42,-82,-83,42,42,42,42,-109,-110,42,-86,42,42,42,42,-111,42,42,]),'CLASS':([0,],[43,]),'TRUE':([0,19,20,26,30,37,45,47,48,49,50,51,52,53,56,57,63,64,65,66,67,68,69,72,83,84,85,86,87,88,89,109,118,119,121,122,133,174,176,183,220,232,233,234,235,238,247,249,255,272,275,277,281,282,283,284,286,296,304,319,320,337,341,342,344,374,380,395,],[47,-34,-35,47,47,47,-39,-43,-44,-40,-41,-42,47,47,-162,-163,47,-87,-88,-89,-90,-91,-92,47,-84,-85,-36,-37,-38,-45,-46,47,47,47,47,47,-82,47,47,47,47,47,-93,-94,47,47,47,312,-83,47,47,47,47,47,-109,-110,47,-86,47,47,47,47,47,47,312,-111,47,47,]),'FALSE':([0,19,20,26,30,37,45,47,48,49,50,51,52,53,56,57,63,64,65,66,67,68,69,72,83,84,85,86,87,88,89,109,118,119,121,122,133,174,176,183,220,232,233,234,235,238,247,249,255,272,275,277,281,282,283,284,286,296,304,319,320,337,341,342,344,374,380,395,],[48,-34,-35,48,48,48,-39,-43,-44,-40,-41,-42,48,48,-162,-163,48,-87,-88,-89,-90,-91,-92,48,-84,-85,-36,-37,-38,-45,-46,48,48,48,48,48,-82,48,48,48,48,48,-93,-94,48,48,48,313,-83,48,48,48,48,48,-109,-110,48,-86,48,48,48,48,48,48,313,-111,48,48,]),'NOMBRE_VARIABLE':([0,19,20,26,30,36,37,45,47,48,49,50,51,52,53,54,56,57,63,64,65,66,67,68,69,71,72,74,75,76,77,78,79,83,84,85,86,87,88,89,98,99,100,101,102,103,104,109,118,119,121,122,133,173,174,176,183,185,190,220,221,232,233,234,235,238,247,251,255,262,265,267,268,269,270,272,275,277,281,282,283,284,286,296,303,304,319,320,332,337,341,342,343,355,356,360,361,362,374,380,395,397,],[45,-34,-35,45,45,45,45,-39,-43,-44,-40,-41,-42,45,45,123,-162,-163,45,-87,-88,-89,-90,-91,-92,45,45,-64,-65,-66,-67,-68,-69,-84,-85,-36,-37,-38,-45,-46,45,-76,-77,-78,-79,-80,-81,45,45,45,45,45,-82,254,45,45,45,45,45,45,289,45,-93,-94,45,45,45,45,-83,45,45,45,45,45,45,45,45,45,45,45,-109,-110,45,-86,349,45,45,45,369,45,45,45,377,45,45,45,45,45,-111,45,45,410,]),'VARIABLE_GLOBAL':([0,19,20,26,30,36,37,45,47,48,49,50,51,52,53,56,57,63,64,65,66,67,68,69,71,72,74,75,76,77,78,79,83,84,85,86,87,88,89,98,99,100,101,102,103,104,109,118,119,121,122,133,174,176,183,185,190,220,232,233,234,235,238,247,251,255,262,265,267,268,269,270,272,275,277,281,282,283,284,286,296,304,319,320,337,341,342,355,356,360,361,362,374,380,395,],[49,-34,-35,49,49,49,49,-39,-43,-44,-40,-41,-42,49,49,-162,-163,49,-87,-88,-89,-90,-91,-92,49,49,-64,-65,-66,-67,-68,-69,-84,-85,-36,-37,-38,-45,-46,49,-76,-77,-78,-79,-80,-81,49,49,49,49,49,-82,49,49,49,49,49,49,49,-93,-94,49,49,49,49,-83,49,49,49,49,49,49,49,49,49,49,49,-109,-110,49,-86,49,49,49,49,49,49,49,49,49,49,49,-111,49,49,]),'VARIABLE_INSTANCIA':([0,19,20,26,30,36,37,45,47,48,49,50,51,52,53,56,57,63,64,65,66,67,68,69,71,72,74,75,76,77,78,79,83,84,85,86,87,88,89,98,99,100,101,102,103,104,109,118,119,121,122,133,174,176,183,185,190,220,232,233,234,235,238,247,251,255,262,265,267,268,269,270,272,275,277,281,282,283,284,286,296,304,319,320,337,341,342,355,356,360,361,362,374,380,395,],[50,-34,-35,50,50,50,50,-39,-43,-44,-40,-41,-42,50,50,-162,-163,50,-87,-88,-89,-90,-91,-92,50,50,-64,-65,-66,-67,-68,-69,-84,-85,-36,-37,-38,-45,-46,50,-76,-77,-78,-79,-80,-81,50,50,50,50,50,-82,50,50,50,50,50,50,50,-93,-94,50,50,50,50,-83,50,50,50,50,50,50,50,50,50,50,50,-109,-110,50,-86,50,50,50,50,50,50,50,50,50,50,50,-111,50,50,]),'VARIABLE_CLASE':([0,19,20,26,30,36,37,45,47,48,49,50,51,52,53,56,57,63,64,65,66,67,68,69,71,72,74,75,76,77,78,79,83,84,85,86,87,88,89,98,99,100,101,102,103,104,109,118,119,121,122,133,174,176,183,185,190,220,232,233,234,235,238,247,251,255,262,265,267,268,269,270,272,275,277,281,282,283,284,286,296,304,319,320,337,341,342,355,356,360,361,362,374,380,395,],[51,-34,-35,51,51,51,51,-39,-43,-44,-40,-41,-42,51,51,-162,-163,51,-87,-88,-89,-90,-91,-92,51,51,-64,-65,-66,-67,-68,-69,-84,-85,-36,-37,-38,-45,-46,51,-76,-77,-78,-79,-80,-81,51,51,51,51,51,-82,51,51,51,51,51,51,51,-93,-94,51,51,51,51,-83,51,51,51,51,51,51,51,51,51,51,51,-109,-110,51,-86,51,51,51,51,51,51,51,51,51,51,51,-111,51,51,]),'IF':([0,19,20,45,47,48,49,50,51,83,84,85,86,87,88,89,119,122,133,255,272,275,277,282,283,284,286,296,319,337,341,342,374,380,395,],[52,-34,-35,-39,-43,-44,-40,-41,-42,-84,-85,-36,-37,-38,-45,-46,52,52,-82,-83,52,52,52,52,-109,-110,52,-86,52,52,52,52,-111,52,52,]),'UNTIL':([0,19,20,45,47,48,49,50,51,83,84,85,86,87,88,89,119,122,133,255,272,275,277,282,283,284,286,296,319,337,341,342,374,380,395,],[53,-34,-35,-39,-43,-44,-40,-41,-42,-84,-85,-36,-37,-38,-45,-46,53,53,-82,-83,53,53,53,53,-109,-110,53,-86,53,53,53,53,-111,53,53,]),'CASE':([0,19,20,45,47,48,49,50,51,83,84,85,86,87,88,89,119,122,133,255,272,275,277,282,283,284,286,296,319,337,341,342,374,380,395,],[54,-34,-35,-39,-43,-44,-40,-41,-42,-84,-85,-36,-37,-38,-45,-46,54,54,-82,-83,54,54,54,54,-109,-110,54,-86,54,54,54,54,-111,54,54,]),'DEF':([0,19,20,45,47,48,49,50,51,83,84,85,86,87,88,89,119,122,133,255,272,275,277,282,283,284,286,296,319,337,341,342,374,380,395,],[55,-34,-35,-39,-43,-44,-40,-41,-42,-84,-85,-36,-37,-38,-45,-46,55,55,-82,-83,55,55,55,55,-109,-110,55,-86,55,55,55,55,-111,55,55,]),'PUTS':([0,19,20,45,47,48,49,50,51,83,84,85,86,87,88,89,119,122,133,255,272,275,277,282,283,284,286,296,319,337,341,342,374,380,395,],[56,-34,-35,-39,-43,-44,-40,-41,-42,-84,-85,-36,-37,-38,-45,-46,56,56,-82,-83,56,56,56,56,-109,-110,56,-86,56,56,56,56,-111,56,56,]),'PRINT':([0,19,20,45,47,48,49,50,51,83,84,85,86,87,88,89,119,122,133,255,272,275,277,282,283,284,286,296,319,337,341,342,374,380,395,],[57,-34,-35,-39,-43,-44,-40,-41,-42,-84,-85,-36,-37,-38,-45,-46,57,57,-82,-83,57,57,57,57,-109,-110,57,-86,57,57,57,57,-111,57,57,]),'ENTERO':([0,19,20,26,30,36,37,45,47,48,49,50,51,52,53,56,57,63,64,65,66,67,68,69,71,72,74,75,76,77,78,79,83,84,85,86,87,88,89,98,99,100,101,102,103,104,109,118,119,121,122,130,132,133,174,176,183,185,220,232,233,234,235,236,238,247,248,249,251,255,262,265,272,275,277,281,282,283,284,286,296,304,319,320,337,339,341,342,344,360,374,380,395,],[58,-34,-35,88,88,88,88,-39,-43,-44,-40,-41,-42,88,88,-162,-163,88,-87,-88,-89,-90,-91,-92,88,58,-64,-65,-66,-67,-68,-69,-84,-85,-36,-37,-38,-45,-46,88,-76,-77,-78,-79,-80,-81,88,88,58,88,58,226,230,-82,88,88,88,88,285,88,-93,-94,88,298,88,88,298,309,315,-83,88,88,58,58,58,285,58,-109,-110,58,-86,88,58,88,58,374,58,58,309,88,-111,58,58,]),'FLOTANTE':([0,19,20,26,30,36,37,45,47,48,49,50,51,52,53,56,57,63,64,65,66,67,68,69,71,72,74,75,76,77,78,79,83,84,85,86,87,88,89,98,99,100,101,102,103,104,109,118,119,121,122,130,131,133,174,176,183,185,220,232,233,234,235,238,247,249,255,262,265,272,275,277,281,282,283,284,286,296,304,319,320,337,341,342,344,360,374,380,395,],[59,-34,-35,89,89,89,89,-39,-43,-44,-40,-41,-42,89,89,-162,-163,89,-87,-88,-89,-90,-91,-92,89,59,-64,-65,-66,-67,-68,-69,-84,-85,-36,-37,-38,-45,-46,89,-76,-77,-78,-79,-80,-81,89,89,59,89,59,227,229,-82,89,89,89,89,89,89,-93,-94,89,89,89,310,-83,89,89,59,59,59,89,59,-109,-110,59,-86,89,59,89,59,59,59,310,89,-111,59,59,]),'STRING':([0,19,20,45,47,48,49,50,51,72,83,84,85,86,87,88,89,119,122,133,255,272,275,277,282,283,284,286,296,319,337,341,342,374,380,395,],[60,-34,-35,-39,-43,-44,-40,-41,-42,60,-84,-85,-36,-37,-38,-45,-46,60,60,-82,-83,60,60,60,60,-109,-110,60,-86,60,60,60,60,-111,60,60,]),'INTEGER':([0,19,20,45,47,48,49,50,51,72,83,84,85,86,87,88,89,119,122,133,255,272,275,277,282,283,284,286,296,319,337,341,342,374,380,395,],[61,-34,-35,-39,-43,-44,-40,-41,-42,61,-84,-85,-36,-37,-38,-45,-46,61,61,-82,-83,61,61,61,61,-109,-110,61,-86,61,61,61,61,-111,61,61,]),'FLOAT':([0,19,20,45,47,48,49,50,51,72,83,84,85,86,87,88,89,119,122,133,255,272,275,277,282,283,284,286,296,319,337,341,342,374,380,395,],[62,-34,-35,-39,-43,-44,-40,-41,-42,62,-84,-85,-36,-37,-38,-45,-46,62,62,-82,-83,62,62,62,62,-109,-110,62,-86,62,62,62,62,-111,62,62,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,27,28,29,32,38,39,40,45,46,47,48,49,50,51,58,59,83,84,85,86,87,88,89,90,97,106,107,108,110,111,112,113,116,133,134,137,138,139,140,141,142,143,144,145,146,147,148,149,150,154,155,156,162,163,164,165,171,175,177,178,179,180,181,184,191,222,223,224,225,246,255,264,266,273,278,279,290,291,292,293,294,295,296,299,301,308,309,310,311,312,313,317,321,322,334,345,346,347,348,352,353,354,357,365,366,367,368,370,372,381,382,387,388,396,399,400,401,402,403,404,405,406,407,408,412,413,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-34,-35,-38,-95,-96,-97,-36,-169,-170,-171,-39,-37,-43,-44,-40,-41,-42,-45,-46,-84,-85,-36,-37,-38,-45,-46,-112,-142,-74,-75,-160,-164,-36,-38,-166,-47,-82,-118,-51,-38,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-36,-117,-121,-135,-136,-137,-138,-128,-114,-113,-122,-176,-181,-129,-70,-168,-172,-180,-173,-177,-134,-83,-161,-165,-99,-103,-105,-174,-175,-178,-179,-182,-183,-86,-150,-167,-141,-155,-156,-157,-158,-159,-127,-72,-71,-101,-119,-120,-151,-201,-139,-140,-193,-194,-186,-187,-184,-185,-98,-102,-132,-133,-192,-73,-100,-123,-124,-126,-125,-197,-198,-199,-200,-188,-189,-191,-190,]),'MENOR_QUE':([2,19,20,21,32,45,46,47,48,49,50,51,58,59,82,83,84,85,86,87,88,89,120,138,139,154,200,215,285,],[64,-34,-35,-38,-36,-39,-37,-43,-44,-40,-41,-42,-45,-46,64,-34,-35,-36,-37,-38,-45,-46,64,-38,64,-36,64,-38,-45,]),'MAYOR_QUE':([2,19,20,21,32,45,46,47,48,49,50,51,58,59,82,83,84,85,86,87,88,89,120,138,139,154,200,215,285,],[65,-34,-35,-38,-36,-39,-37,-43,-44,-40,-41,-42,-45,-46,65,-34,-35,-36,-37,-38,-45,-46,65,-38,65,-36,65,-38,-45,]),'MAYOR_IGUAL':([2,19,20,21,32,45,46,47,48,49,50,51,58,59,82,83,84,85,86,87,88,89,120,138,139,154,200,215,285,],[66,-34,-35,-38,-36,-39,-37,-43,-44,-40,-41,-42,-45,-46,66,-34,-35,-36,-37,-38,-45,-46,66,-38,66,-36,66,-38,-45,]),'DOBLE_IGUAL':([2,19,20,21,32,45,46,47,48,49,50,51,58,59,82,83,84,85,86,87,88,89,120,138,139,154,200,215,285,],[67,-34,-35,-38,-36,-39,-37,-43,-44,-40,-41,-42,-45,-46,67,-34,-35,-36,-37,-38,-45,-46,67,-38,67,-36,67,-38,-45,]),'MENOR_IGUAL':([2,19,20,21,32,45,46,47,48,49,50,51,58,59,82,83,84,85,86,87,88,89,120,138,139,154,200,215,285,],[68,-34,-35,-38,-36,-39,-37,-43,-44,-40,-41,-42,-45,-46,68,-34,-35,-36,-37,-38,-45,-46,68,-38,68,-36,68,-38,-45,]),'NO_IGUAL':([2,19,20,21,32,45,46,47,48,49,50,51,58,59,82,83,84,85,86,87,88,89,120,138,139,154,200,215,285,],[69,-34,-35,-38,-36,-39,-37,-43,-44,-40,-41,-42,-45,-46,69,-34,-35,-36,-37,-38,-45,-46,69,-38,69,-36,69,-38,-45,]),'PUNTO':([6,21,22,23,25,31,32,41,42,44,45,49,50,51,58,59,90,138,147,152,153,154,175,177,203,215,354,357,365,366,367,368,],[70,73,80,-195,-196,93,94,114,115,117,-39,-40,-41,-42,128,129,-112,237,80,239,240,241,-114,-113,70,276,-193,-194,-186,-187,-184,-185,]),'COMA':([19,20,45,47,48,49,50,51,85,86,87,88,89,90,92,95,175,177,181,258,259,260,261,289,309,310,311,312,313,315,316,324,325,326,327,359,377,379,],[-34,-35,-39,-43,-44,-40,-41,-42,-36,-37,-38,-45,-46,-112,176,182,-114,-113,-129,-130,-48,-49,-50,343,-155,-156,-157,-158,-159,355,356,361,362,363,364,-131,343,397,]),'CORCHETE_D':([19,20,30,45,47,48,49,50,51,85,86,87,88,89,91,92,256,],[-34,-35,90,-39,-43,-44,-40,-41,-42,-36,-37,-38,-45,-46,175,-115,-116,]),'END':([19,20,27,28,29,32,34,38,39,40,45,46,47,48,49,50,51,58,59,83,84,85,86,87,88,89,90,97,106,107,108,110,111,112,113,124,125,126,133,134,137,138,139,140,141,142,143,144,145,146,147,148,149,150,154,155,156,171,175,177,178,179,180,181,184,191,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,217,218,222,223,224,225,255,264,266,273,274,278,279,280,290,291,292,293,294,295,296,299,301,317,321,322,333,334,335,336,340,345,346,347,348,354,357,358,365,366,367,368,370,371,372,375,376,387,388,396,398,399,400,401,402,403,404,405,406,407,408,409,412,413,],[-34,-35,-95,-96,-97,-36,97,-169,-170,-171,-39,-37,-43,-44,-40,-41,-42,-45,-46,-84,-85,-36,-37,-38,-45,-46,-112,-142,-74,-75,-160,-164,-36,-38,-166,-143,-144,-145,-82,-118,-51,-38,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-36,-117,-121,-128,-114,-113,-122,-176,-181,-129,-70,-168,-20,273,-18,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-38,278,279,-172,-180,-173,-177,-83,-161,-165,-99,334,-103,-105,-106,-174,-175,-178,-179,-182,-183,-86,-150,-167,-127,-72,-71,370,-101,-104,372,-146,-119,-120,-151,-201,-193,-194,387,-186,-187,-184,-185,-98,396,-102,-147,-152,-192,-73,-100,412,-123,-124,-126,-125,-197,-198,-199,-200,-188,-189,413,-191,-190,]),'ELSE':([19,20,27,28,29,32,38,39,40,45,46,47,48,49,50,51,58,59,83,84,85,86,87,88,89,90,97,106,107,108,110,111,112,113,133,134,137,138,139,140,141,142,143,144,145,146,147,148,149,150,154,155,156,171,175,177,178,179,180,181,184,191,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,219,222,223,224,225,255,264,266,273,278,279,290,291,292,293,294,295,296,299,301,317,321,322,333,334,338,345,346,347,348,354,357,365,366,367,368,370,372,373,387,388,396,399,400,401,402,403,404,405,406,407,408,412,413,],[-34,-35,-95,-96,-97,-36,-169,-170,-171,-39,-37,-43,-44,-40,-41,-42,-45,-46,-84,-85,-36,-37,-38,-45,-46,-112,-142,-74,-75,-160,-164,-36,-38,-166,-82,-118,-51,-38,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-36,-117,-121,-128,-114,-113,-122,-176,-181,-129,-70,-168,-20,275,-18,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-38,275,-172,-180,-173,-177,-83,-161,-165,-99,-103,-105,-174,-175,-178,-179,-182,-183,-86,-150,-167,-127,-72,-71,275,-101,-107,-119,-120,-151,-201,-193,-194,-186,-187,-184,-185,-98,-102,-108,-192,-73,-100,-123,-124,-126,-125,-197,-198,-199,-200,-188,-189,-191,-190,]),'WHEN':([19,20,27,28,29,32,38,39,40,45,46,47,48,49,50,51,58,59,83,84,85,86,87,88,89,90,97,106,107,108,110,111,112,113,123,133,134,137,138,139,140,141,142,143,144,145,146,147,148,149,150,154,155,156,171,175,177,178,179,180,181,184,191,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,219,222,223,224,225,255,264,266,273,278,279,290,291,292,293,294,295,296,299,301,317,321,322,334,338,345,346,347,348,354,357,365,366,367,368,370,372,373,387,388,396,399,400,401,402,403,404,405,406,407,408,412,413,],[-34,-35,-95,-96,-97,-36,-169,-170,-171,-39,-37,-43,-44,-40,-41,-42,-45,-46,-84,-85,-36,-37,-38,-45,-46,-112,-142,-74,-75,-160,-164,-36,-38,-166,220,-82,-118,-51,-38,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-36,-117,-121,-128,-114,-113,-122,-176,-181,-129,-70,-168,-20,-18,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-38,281,-172,-180,-173,-177,-83,-161,-165,-99,-103,-105,-174,-175,-178,-179,-182,-183,-86,-150,-167,-127,-72,-71,-101,-107,-119,-120,-151,-201,-193,-194,-186,-187,-184,-185,-98,-102,-108,-192,-73,-100,-123,-124,-126,-125,-197,-198,-199,-200,-188,-189,-191,-190,]),'AND':([19,20,45,47,48,49,50,51,85,86,87,88,89,133,],[-34,-35,-39,-43,-44,-40,-41,-42,-36,-37,-38,-45,-46,233,]),'OR':([19,20,45,47,48,49,50,51,85,86,87,88,89,133,],[-34,-35,-39,-43,-44,-40,-41,-42,-36,-37,-38,-45,-46,234,]),'NOMBRE_FUNCION':([19,20,45,47,48,49,50,51,55,72,83,84,85,86,87,88,89,119,122,133,255,272,275,277,282,283,284,286,296,319,337,341,342,374,380,395,],[-34,-35,-39,-43,-44,-40,-41,-42,127,151,-84,-85,-36,-37,-38,-45,-46,151,151,-82,-83,151,151,151,151,-109,-110,151,-86,151,151,151,151,-111,151,151,]),'PAR_D':([19,20,45,47,48,49,50,51,83,84,85,86,87,88,89,90,92,106,107,110,111,113,133,175,177,181,184,186,188,189,197,216,221,226,227,228,229,230,231,238,252,255,256,259,260,261,263,266,287,288,289,296,297,298,300,302,306,307,309,310,311,312,313,314,318,321,322,323,328,329,330,331,350,351,377,378,379,383,384,385,386,388,389,390,391,392,393,394,411,],[-34,-35,-39,-43,-44,-40,-41,-42,-84,-85,-36,-37,-38,-45,-46,-112,-115,-74,-75,-164,-36,-166,-82,-114,-113,-129,-70,264,-38,-37,272,277,286,290,291,292,293,294,295,299,317,-83,-116,-48,-49,-50,322,-165,341,342,-148,-86,345,346,347,348,352,353,-155,-156,-157,-158,-159,354,357,-72,-71,322,365,366,367,368,381,382,-148,-149,-153,399,400,401,402,-73,403,404,405,406,407,408,-154,]),'LLAVE_D':([19,20,45,47,48,49,50,51,85,86,87,88,89,90,95,175,177,181,258,259,260,261,359,],[-34,-35,-39,-43,-44,-40,-41,-42,-36,-37,-38,-45,-46,-112,181,-114,-113,-129,-130,-48,-49,-50,-131,]),'IGUAL':([21,45,49,50,51,168,215,289,410,],[72,-39,-40,-41,-42,249,72,344,344,]),'MAS':([21,35,45,46,49,50,51,58,59,88,89,105,106,107,111,112,138,184,187,188,189,215,322,323,],[-75,99,-39,-74,-40,-41,-42,-45,-46,-45,-46,99,-74,-75,190,-75,-75,99,99,-75,-74,-75,99,99,]),'MENOS':([21,35,45,46,49,50,51,58,59,88,89,105,106,107,112,138,184,187,188,189,215,322,323,],[-75,100,-39,-74,-40,-41,-42,-45,-46,-45,-46,100,-74,-75,-75,-75,100,100,-75,-74,-75,100,100,]),'MULTIPLICACION':([21,35,45,46,49,50,51,58,59,88,89,105,106,107,112,138,184,187,188,189,215,322,323,],[-75,101,-39,-74,-40,-41,-42,-45,-46,-45,-46,101,-74,-75,-75,-75,101,101,-75,-74,-75,101,101,]),'POTENCIA':([21,35,45,46,49,50,51,58,59,88,89,105,106,107,112,138,184,187,188,189,215,322,323,],[-75,102,-39,-74,-40,-41,-42,-45,-46,-45,-46,102,-74,-75,-75,-75,102,102,-75,-74,-75,102,102,]),'DIV':([21,35,45,46,49,50,51,58,59,88,89,105,106,107,112,138,184,187,188,189,215,322,323,],[-75,103,-39,-74,-40,-41,-42,-45,-46,-45,-46,103,-74,-75,-75,-75,103,103,-75,-74,-75,103,103,]),'MODULO':([21,35,45,46,49,50,51,58,59,88,89,105,106,107,112,138,184,187,188,189,215,322,323,],[-75,104,-39,-74,-40,-41,-42,-45,-46,-45,-46,104,-74,-75,-75,-75,104,104,-75,-74,-75,104,104,]),'MAS_IGUAL':([21,45,49,50,51,215,],[74,-39,-40,-41,-42,74,]),'RESTA_IGUAL':([21,45,49,50,51,215,],[75,-39,-40,-41,-42,75,]),'MULTIPLICACION_IGUAL':([21,45,49,50,51,215,],[76,-39,-40,-41,-42,76,]),'DIVISION_IGUAL':([21,45,49,50,51,215,],[77,-39,-40,-41,-42,77,]),'MODULO_IGUAL':([21,45,49,50,51,215,],[78,-39,-40,-41,-42,78,]),'EXPONENCIAL_IGUAL':([21,45,49,50,51,215,],[79,-39,-40,-41,-42,79,]),'DO':([24,158,196,407,408,],[81,243,271,-188,-189,]),'NOMBRE_CLASE':([43,],[116,]),'PUSH':([70,73,276,],[135,135,135,]),'DELETE':([70,73,276,],[136,167,136,]),'GETS':([72,],[152,]),'WRITE':([73,115,276,],[157,192,157,]),'EACH':([73,117,276,],[158,196,158,]),'HAS_VALUE':([73,],[159,]),'HAS_KEY':([73,],[160,]),'EMPTY':([73,],[161,]),'CLEAR':([73,],[162,]),'KEYS':([73,],[163,]),'LENGTH':([73,],[164,]),'VALUES':([73,],[165,]),'KEY':([73,],[166,]),'DEFAULT':([73,],[168,]),'SPLIT':([73,80,237,276,],[169,172,169,169,]),'INSERT':([73,94,276,],[170,170,170,]),'SIZE':([73,94,276,],[171,171,171,]),'PIPE':([81,243,254,271,349,369,],[173,303,319,332,380,395,]),'NEW':([93,],[177,]),'TOINTEGER':([94,129,241,],[179,225,179,]),'TOFLOAT':([94,128,241,],[180,223,180,]),'ASIGNACION':([96,257,],[183,320,]),'FLUSH':([114,],[191,]),'OPEN':([115,240,],[193,193,]),'READLINES':([115,240,],[194,194,]),'READ':([115,240,],[195,195,]),'TOSTRING':([128,129,],[222,224,]),'INTERROGACION':([159,160,161,],[244,245,246,]),'CHOMP':([239,],[301,]),'INTERVALO':([285,],[339,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,],[1,]),'variablesTotales':([0,26,30,37,52,53,63,72,109,118,119,121,122,174,176,183,220,232,235,238,247,272,275,277,281,282,286,304,319,320,337,341,342,380,395,],[2,82,92,110,120,120,133,139,110,120,200,120,200,255,92,259,120,120,297,92,259,200,200,200,120,200,200,259,200,259,200,200,200,200,200,]),'estructuraAsignacion':([0,119,122,272,275,277,282,286,319,337,341,342,380,395,],[3,201,201,201,201,201,201,201,201,201,201,201,201,201,]),'estructuraComparacion':([0,52,53,72,118,119,121,122,220,232,272,275,277,281,282,286,319,337,341,342,380,395,],[4,119,122,141,197,198,216,198,283,296,198,198,198,283,198,198,198,198,198,198,198,198,]),'estructurasControl':([0,119,122,272,275,277,282,286,319,337,341,342,380,395,],[5,202,202,202,202,202,202,202,202,202,202,202,202,202,]),'estructuraArray':([0,72,119,122,183,247,272,275,277,282,286,304,319,320,337,341,342,380,395,],[6,142,203,203,261,261,203,203,203,203,203,261,203,261,203,203,203,203,203,]),'funcionesArreglo':([0,119,122,272,275,277,282,286,319,337,341,342,380,395,],[7,204,204,204,204,204,204,204,204,204,204,204,204,204,]),'funcionesString':([0,119,122,272,275,277,282,286,319,337,341,342,380,395,],[8,205,205,205,205,205,205,205,205,205,205,205,205,205,]),'estructuraHash':([0,72,119,122,183,247,272,275,277,282,286,304,319,320,337,341,342,380,395,],[9,143,206,206,260,260,206,206,206,206,206,260,206,260,206,206,206,206,206,]),'estructuraFunciones':([0,119,122,272,275,277,282,286,319,337,341,342,380,395,],[10,207,207,207,207,207,207,207,207,207,207,207,207,207,]),'operacion':([0,37,72,109,119,122,262,272,275,277,282,286,319,337,341,342,360,380,395,],[11,113,140,113,209,209,321,209,209,209,209,209,209,209,209,209,388,209,209,]),'estructuraSalida':([0,119,122,272,275,277,282,286,319,337,341,342,380,395,],[12,210,210,210,210,210,210,210,210,210,210,210,210,210,]),'estructuraCasting':([0,72,119,122,272,275,277,282,286,319,337,341,342,380,395,],[13,145,211,211,211,211,211,211,211,211,211,211,211,211,211,]),'limpiarDatos':([0,119,122,272,275,277,282,286,319,337,341,342,380,395,],[14,212,212,212,212,212,212,212,212,212,212,212,212,212,]),'estructuraEscribirArchivo':([0,119,122,272,275,277,282,286,319,337,341,342,380,395,],[15,213,213,213,213,213,213,213,213,213,213,213,213,213,]),'estructuraClase':([0,],[16,]),'estructuraRecorrerArchivo':([0,119,122,272,275,277,282,286,319,337,341,342,380,395,],[17,214,214,214,214,214,214,214,214,214,214,214,214,214,]),'metodosHash':([0,],[18,]),'variables':([0,26,30,37,52,53,63,71,72,109,118,119,121,122,174,176,183,220,232,235,238,247,272,275,277,281,282,286,304,319,320,337,341,342,380,395,],[19,83,19,19,19,19,19,137,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'boleanos':([0,26,30,37,52,53,63,72,109,118,119,121,122,174,176,183,220,232,235,238,247,272,275,277,281,282,286,304,319,320,337,341,342,380,395,],[20,84,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'TiposNomVariables':([0,26,30,36,37,52,53,63,71,72,98,109,118,119,121,122,174,176,183,185,190,220,232,235,238,247,251,262,265,267,268,269,270,272,275,277,281,282,286,304,319,320,337,341,342,355,356,360,361,362,380,395,],[21,87,87,107,112,87,87,87,87,138,107,188,87,215,87,215,87,87,87,107,266,87,87,87,87,87,316,107,107,324,326,328,330,215,215,215,87,215,215,87,215,87,215,215,215,384,385,107,389,392,215,215,]),'estructuraLeerArchivo':([0,72,119,122,272,275,277,282,286,319,337,341,342,380,395,],[22,147,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'estructuraLeerArchivoLinea':([0,72,119,122,272,275,277,282,286,319,337,341,342,380,395,],[23,148,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'estructuraAbrirArchivo':([0,72,119,122,272,275,277,282,286,319,337,341,342,380,395,],[24,149,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'estructuraSplit':([0,72,119,122,272,275,277,282,286,319,337,341,342,380,395,],[25,150,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'estructuraIf':([0,119,122,272,275,277,282,286,319,337,341,342,380,395,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'estructuraUntil':([0,119,122,272,275,277,282,286,319,337,341,342,380,395,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'estructuraCase':([0,119,122,272,275,277,282,286,319,337,341,342,380,395,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'definicionF':([0,119,122,272,275,277,282,286,319,337,341,342,380,395,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'variablesoperacion':([0,36,37,72,98,109,119,122,185,262,265,272,275,277,282,286,319,337,341,342,360,380,395,],[35,105,35,35,184,187,35,35,263,35,323,35,35,35,35,35,35,35,35,35,35,35,35,]),'operadoresSalidas':([0,119,122,272,275,277,282,286,319,337,341,342,380,395,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'castingString':([0,72,119,122,272,275,277,282,286,319,337,341,342,380,395,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'castingInteger':([0,72,119,122,272,275,277,282,286,319,337,341,342,380,395,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'castingFloat':([0,72,119,122,272,275,277,282,286,319,337,341,342,380,395,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'variablesRecorrer':([0,119,122,272,275,277,282,286,319,337,341,342,380,395,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'numericos':([0,26,30,36,37,52,53,63,71,72,98,109,118,119,121,122,174,176,183,185,220,232,235,238,247,262,265,272,275,277,281,282,286,304,319,320,337,341,342,360,380,395,],[46,86,86,106,46,86,86,86,86,46,106,189,86,46,86,46,86,86,86,106,86,86,86,86,86,106,106,46,46,46,86,46,46,86,46,86,46,46,46,106,46,46,]),'comparador':([2,82,120,139,200,],[63,174,63,63,63,]),'tipoAsignacion':([21,215,],[71,71,]),'parametrosA':([30,176,238,],[91,256,300,]),'cuerpoH':([33,],[95,]),'operador':([35,105,184,187,322,323,],[98,185,262,265,360,262,]),'cuerpoSalida':([37,109,],[108,186,]),'funcionSinAtributos':([55,],[124,]),'funcionConAtributos':([55,],[125,]),'funcionConDefectos':([55,],[126,]),'nombreFuncionesA':([70,73,276,],[134,155,155,]),'llamadoFunciones':([72,119,122,272,275,277,282,286,319,337,341,342,380,395,],[144,208,208,208,208,208,208,208,208,208,208,208,208,208,]),'estructuraEntrada':([72,],[146,]),'nombreFuncionesS':([73,94,276,],[156,178,156,]),'cuerpo':([119,122,272,275,277,282,286,319,337,341,342,380,395,],[199,217,333,335,336,338,340,358,373,375,376,398,409,]),'estructuraWhenI':([123,],[218,]),'estructuraWhen':([123,],[219,]),'operadoresComparacion':([133,],[232,]),'valorTodos':([183,247,304,320,],[258,306,350,359,]),'estructuraElse':([199,219,333,],[274,280,371,]),'sentenciaWhen':([220,281,],[282,337,]),'intervaloW':([220,281,],[284,284,]),'parametrosFunciones':([221,343,],[287,378,]),'parametrosFuncionesDefecto':([221,397,],[288,411,]),'valorF':([249,344,],[308,379,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> variablesTotales','instrucciones',1,'p_instrucciones','Sintactico.py',11),
  ('instrucciones -> estructuraAsignacion','instrucciones',1,'p_instrucciones','Sintactico.py',12),
  ('instrucciones -> estructuraComparacion','instrucciones',1,'p_instrucciones','Sintactico.py',13),
  ('instrucciones -> estructurasControl','instrucciones',1,'p_instrucciones','Sintactico.py',14),
  ('instrucciones -> estructuraArray','instrucciones',1,'p_instrucciones','Sintactico.py',15),
  ('instrucciones -> funcionesArreglo','instrucciones',1,'p_instrucciones','Sintactico.py',16),
  ('instrucciones -> funcionesString','instrucciones',1,'p_instrucciones','Sintactico.py',17),
  ('instrucciones -> estructuraHash','instrucciones',1,'p_instrucciones','Sintactico.py',18),
  ('instrucciones -> estructuraFunciones','instrucciones',1,'p_instrucciones','Sintactico.py',19),
  ('instrucciones -> operacion','instrucciones',1,'p_instrucciones','Sintactico.py',20),
  ('instrucciones -> estructuraSalida','instrucciones',1,'p_instrucciones','Sintactico.py',21),
  ('instrucciones -> estructuraCasting','instrucciones',1,'p_instrucciones','Sintactico.py',22),
  ('instrucciones -> limpiarDatos','instrucciones',1,'p_instrucciones','Sintactico.py',23),
  ('instrucciones -> estructuraEscribirArchivo','instrucciones',1,'p_instrucciones','Sintactico.py',24),
  ('instrucciones -> estructuraClase','instrucciones',1,'p_instrucciones','Sintactico.py',25),
  ('instrucciones -> estructuraRecorrerArchivo','instrucciones',1,'p_instrucciones','Sintactico.py',26),
  ('instrucciones -> metodosHash','instrucciones',1,'p_instrucciones','Sintactico.py',27),
  ('cuerpo -> variablesTotales','cuerpo',1,'p_cuerpo','Sintactico.py',31),
  ('cuerpo -> estructuraAsignacion','cuerpo',1,'p_cuerpo','Sintactico.py',32),
  ('cuerpo -> estructuraComparacion','cuerpo',1,'p_cuerpo','Sintactico.py',33),
  ('cuerpo -> estructurasControl','cuerpo',1,'p_cuerpo','Sintactico.py',34),
  ('cuerpo -> estructuraArray','cuerpo',1,'p_cuerpo','Sintactico.py',35),
  ('cuerpo -> funcionesArreglo','cuerpo',1,'p_cuerpo','Sintactico.py',36),
  ('cuerpo -> funcionesString','cuerpo',1,'p_cuerpo','Sintactico.py',37),
  ('cuerpo -> estructuraHash','cuerpo',1,'p_cuerpo','Sintactico.py',38),
  ('cuerpo -> estructuraFunciones','cuerpo',1,'p_cuerpo','Sintactico.py',39),
  ('cuerpo -> llamadoFunciones','cuerpo',1,'p_cuerpo','Sintactico.py',40),
  ('cuerpo -> operacion','cuerpo',1,'p_cuerpo','Sintactico.py',41),
  ('cuerpo -> estructuraSalida','cuerpo',1,'p_cuerpo','Sintactico.py',42),
  ('cuerpo -> estructuraCasting','cuerpo',1,'p_cuerpo','Sintactico.py',43),
  ('cuerpo -> limpiarDatos','cuerpo',1,'p_cuerpo','Sintactico.py',44),
  ('cuerpo -> estructuraEscribirArchivo','cuerpo',1,'p_cuerpo','Sintactico.py',45),
  ('cuerpo -> estructuraRecorrerArchivo','cuerpo',1,'p_cuerpo','Sintactico.py',46),
  ('variablesTotales -> variables','variablesTotales',1,'p_variablesTotales','Sintactico.py',51),
  ('variablesTotales -> boleanos','variablesTotales',1,'p_variablesTotales','Sintactico.py',52),
  ('variables -> CADENA','variables',1,'p_variables','Sintactico.py',56),
  ('variables -> numericos','variables',1,'p_variables','Sintactico.py',57),
  ('variables -> TiposNomVariables','variables',1,'p_variables','Sintactico.py',58),
  ('TiposNomVariables -> NOMBRE_VARIABLE','TiposNomVariables',1,'p_TiposNomVariables','Sintactico.py',63),
  ('TiposNomVariables -> VARIABLE_GLOBAL','TiposNomVariables',1,'p_TiposNomVariables','Sintactico.py',64),
  ('TiposNomVariables -> VARIABLE_INSTANCIA','TiposNomVariables',1,'p_TiposNomVariables','Sintactico.py',65),
  ('TiposNomVariables -> VARIABLE_CLASE','TiposNomVariables',1,'p_TiposNomVariables','Sintactico.py',66),
  ('boleanos -> TRUE','boleanos',1,'p_boleanos','Sintactico.py',69),
  ('boleanos -> FALSE','boleanos',1,'p_boleanos','Sintactico.py',70),
  ('numericos -> ENTERO','numericos',1,'p_numericos','Sintactico.py',74),
  ('numericos -> FLOTANTE','numericos',1,'p_numericos','Sintactico.py',75),
  ('estructuraClase -> CLASS NOMBRE_CLASE','estructuraClase',2,'p_estructuraClase','Sintactico.py',79),
  ('valorTodos -> variablesTotales','valorTodos',1,'p_valorTodos','Sintactico.py',83),
  ('valorTodos -> estructuraHash','valorTodos',1,'p_valorTodos','Sintactico.py',84),
  ('valorTodos -> estructuraArray','valorTodos',1,'p_valorTodos','Sintactico.py',85),
  ('estructuraAsignacion -> TiposNomVariables tipoAsignacion variables','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',90),
  ('estructuraAsignacion -> TiposNomVariables IGUAL variablesTotales','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',91),
  ('estructuraAsignacion -> TiposNomVariables IGUAL operacion','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',92),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraComparacion','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',93),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraArray','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',94),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraHash','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',95),
  ('estructuraAsignacion -> TiposNomVariables IGUAL llamadoFunciones','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',96),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraCasting','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',97),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraEntrada','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',98),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraLeerArchivo','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',99),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraLeerArchivoLinea','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',100),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraAbrirArchivo','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',101),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraSplit','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',102),
  ('tipoAsignacion -> MAS_IGUAL','tipoAsignacion',1,'p_tipoAsignacion','Sintactico.py',108),
  ('tipoAsignacion -> RESTA_IGUAL','tipoAsignacion',1,'p_tipoAsignacion','Sintactico.py',109),
  ('tipoAsignacion -> MULTIPLICACION_IGUAL','tipoAsignacion',1,'p_tipoAsignacion','Sintactico.py',110),
  ('tipoAsignacion -> DIVISION_IGUAL','tipoAsignacion',1,'p_tipoAsignacion','Sintactico.py',111),
  ('tipoAsignacion -> MODULO_IGUAL','tipoAsignacion',1,'p_tipoAsignacion','Sintactico.py',112),
  ('tipoAsignacion -> EXPONENCIAL_IGUAL','tipoAsignacion',1,'p_tipoAsignacion','Sintactico.py',113),
  ('operacion -> variablesoperacion operador variablesoperacion','operacion',3,'p_operacion','Sintactico.py',119),
  ('operacion -> PAR_I variablesoperacion operador variablesoperacion PAR_D','operacion',5,'p_operacion','Sintactico.py',120),
  ('operacion -> variablesoperacion operador variablesoperacion operador operacion','operacion',5,'p_operacion','Sintactico.py',121),
  ('operacion -> PAR_I variablesoperacion operador variablesoperacion PAR_D operador operacion','operacion',7,'p_operacion','Sintactico.py',122),
  ('variablesoperacion -> numericos','variablesoperacion',1,'p_variablesoperacion','Sintactico.py',128),
  ('variablesoperacion -> TiposNomVariables','variablesoperacion',1,'p_variablesoperacion','Sintactico.py',129),
  ('operador -> MAS','operador',1,'p_operador','Sintactico.py',133),
  ('operador -> MENOS','operador',1,'p_operador','Sintactico.py',134),
  ('operador -> MULTIPLICACION','operador',1,'p_operador','Sintactico.py',135),
  ('operador -> POTENCIA','operador',1,'p_operador','Sintactico.py',136),
  ('operador -> DIV','operador',1,'p_operador','Sintactico.py',137),
  ('operador -> MODULO','operador',1,'p_operador','Sintactico.py',138),
  ('estructuraComparacion -> variablesTotales comparador variablesTotales','estructuraComparacion',3,'p_estructuraComparacion','Sintactico.py',142),
  ('estructuraComparacion -> NOT variablesTotales comparador variablesTotales','estructuraComparacion',4,'p_estructuraComparacion','Sintactico.py',143),
  ('estructuraComparacion -> NOT variables','estructuraComparacion',2,'p_estructuraComparacion','Sintactico.py',144),
  ('estructuraComparacion -> NOT boleanos','estructuraComparacion',2,'p_estructuraComparacion','Sintactico.py',145),
  ('estructuraComparacion -> variablesTotales comparador variablesTotales operadoresComparacion estructuraComparacion','estructuraComparacion',5,'p_estructuraComparacion','Sintactico.py',146),
  ('comparador -> MENOR_QUE','comparador',1,'p_comparador','Sintactico.py',152),
  ('comparador -> MAYOR_QUE','comparador',1,'p_comparador','Sintactico.py',153),
  ('comparador -> MAYOR_IGUAL','comparador',1,'p_comparador','Sintactico.py',154),
  ('comparador -> DOBLE_IGUAL','comparador',1,'p_comparador','Sintactico.py',155),
  ('comparador -> MENOR_IGUAL','comparador',1,'p_comparador','Sintactico.py',156),
  ('comparador -> NO_IGUAL','comparador',1,'p_comparador','Sintactico.py',157),
  ('operadoresComparacion -> AND','operadoresComparacion',1,'p_operadoresComparacion','Sintactico.py',161),
  ('operadoresComparacion -> OR','operadoresComparacion',1,'p_operadoresComparacion','Sintactico.py',162),
  ('estructurasControl -> estructuraIf','estructurasControl',1,'p_estructurasControl','Sintactico.py',167),
  ('estructurasControl -> estructuraUntil','estructurasControl',1,'p_estructurasControl','Sintactico.py',168),
  ('estructurasControl -> estructuraCase','estructurasControl',1,'p_estructurasControl','Sintactico.py',169),
  ('estructuraIf -> IF PAR_I estructuraComparacion PAR_D cuerpo END','estructuraIf',6,'p_estructuraIf','Sintactico.py',176),
  ('estructuraIf -> IF estructuraComparacion cuerpo END','estructuraIf',4,'p_estructuraIf','Sintactico.py',177),
  ('estructuraIf -> IF PAR_I estructuraComparacion PAR_D cuerpo estructuraElse END','estructuraIf',7,'p_estructuraIf','Sintactico.py',178),
  ('estructuraIf -> IF estructuraComparacion cuerpo estructuraElse END','estructuraIf',5,'p_estructuraIf','Sintactico.py',179),
  ('estructuraUntil -> UNTIL PAR_I estructuraComparacion PAR_D cuerpo END','estructuraUntil',6,'p_estructuraUntil','Sintactico.py',184),
  ('estructuraUntil -> UNTIL estructuraComparacion cuerpo END','estructuraUntil',4,'p_estructuraUntil','Sintactico.py',185),
  ('estructuraElse -> ELSE cuerpo','estructuraElse',2,'p_estructuraElse','Sintactico.py',191),
  ('estructuraCase -> CASE NOMBRE_VARIABLE estructuraWhenI END','estructuraCase',4,'p_estructuraCase','Sintactico.py',196),
  ('estructuraWhenI -> estructuraWhen estructuraElse','estructuraWhenI',2,'p_estructuraWhenI','Sintactico.py',200),
  ('estructuraWhen -> WHEN sentenciaWhen cuerpo','estructuraWhen',3,'p_estructuraWhen','Sintactico.py',205),
  ('estructuraWhen -> estructuraWhen WHEN sentenciaWhen cuerpo','estructuraWhen',4,'p_estructuraWhen','Sintactico.py',206),
  ('sentenciaWhen -> estructuraComparacion','sentenciaWhen',1,'p_sentenciaWhen','Sintactico.py',211),
  ('sentenciaWhen -> intervaloW','sentenciaWhen',1,'p_sentenciaWhen','Sintactico.py',212),
  ('intervaloW -> ENTERO INTERVALO ENTERO','intervaloW',3,'p_intervaloW','Sintactico.py',217),
  ('estructuraArray -> CORCHETE_I CORCHETE_D','estructuraArray',2,'p_estructuraArray','Sintactico.py',227),
  ('estructuraArray -> ARRAY PUNTO NEW','estructuraArray',3,'p_estructuraArray','Sintactico.py',228),
  ('estructuraArray -> CORCHETE_I parametrosA CORCHETE_D','estructuraArray',3,'p_estructuraArray','Sintactico.py',229),
  ('parametrosA -> variablesTotales','parametrosA',1,'p_parametrosA','Sintactico.py',235),
  ('parametrosA -> variablesTotales COMA parametrosA','parametrosA',3,'p_parametrosA','Sintactico.py',236),
  ('funcionesArreglo -> TiposNomVariables PUNTO nombreFuncionesA','funcionesArreglo',3,'p_funcionesArreglo','Sintactico.py',241),
  ('funcionesArreglo -> estructuraArray PUNTO nombreFuncionesA','funcionesArreglo',3,'p_funcionesArreglo','Sintactico.py',242),
  ('nombreFuncionesA -> PUSH PAR_I variablesTotales PAR_D','nombreFuncionesA',4,'p_nombreFuncionesA','Sintactico.py',247),
  ('nombreFuncionesA -> DELETE PAR_I ENTERO PAR_D','nombreFuncionesA',4,'p_nombreFuncionesA','Sintactico.py',248),
  ('funcionesString -> TiposNomVariables PUNTO nombreFuncionesS','funcionesString',3,'p_funcionesString','Sintactico.py',253),
  ('funcionesString -> CADENA PUNTO nombreFuncionesS','funcionesString',3,'p_funcionesString','Sintactico.py',254),
  ('nombreFuncionesS -> INSERT PAR_I ENTERO COMA CADENA PAR_D','nombreFuncionesS',6,'p_nombreFuncionesS','Sintactico.py',260),
  ('nombreFuncionesS -> INSERT PAR_I ENTERO COMA TiposNomVariables PAR_D','nombreFuncionesS',6,'p_nombreFuncionesS','Sintactico.py',261),
  ('nombreFuncionesS -> INSERT PAR_I TiposNomVariables COMA CADENA PAR_D','nombreFuncionesS',6,'p_nombreFuncionesS','Sintactico.py',262),
  ('nombreFuncionesS -> INSERT PAR_I TiposNomVariables COMA TiposNomVariables PAR_D','nombreFuncionesS',6,'p_nombreFuncionesS','Sintactico.py',263),
  ('nombreFuncionesS -> SIZE PAR_I PAR_D','nombreFuncionesS',3,'p_nombreFuncionesS','Sintactico.py',264),
  ('nombreFuncionesS -> SIZE','nombreFuncionesS',1,'p_nombreFuncionesS','Sintactico.py',265),
  ('estructuraHash -> LLAVE_I cuerpoH LLAVE_D','estructuraHash',3,'p_estructuraHash','Sintactico.py',271),
  ('cuerpoH -> CADENA ASIGNACION valorTodos','cuerpoH',3,'p_cuerpoH','Sintactico.py',275),
  ('cuerpoH -> cuerpoH COMA CADENA ASIGNACION valorTodos','cuerpoH',5,'p_cuerpoH','Sintactico.py',276),
  ('metodosHash -> TiposNomVariables PUNTO HAS_VALUE INTERROGACION PAR_I valorTodos PAR_D','metodosHash',7,'p_metodosHash','Sintactico.py',283),
  ('metodosHash -> TiposNomVariables PUNTO HAS_KEY INTERROGACION PAR_I CADENA PAR_D','metodosHash',7,'p_metodosHash','Sintactico.py',284),
  ('metodosHash -> TiposNomVariables PUNTO EMPTY INTERROGACION','metodosHash',4,'p_metodosHash','Sintactico.py',285),
  ('metodosHash -> TiposNomVariables PUNTO CLEAR','metodosHash',3,'p_metodosHash','Sintactico.py',286),
  ('metodosHash -> TiposNomVariables PUNTO KEYS','metodosHash',3,'p_metodosHash','Sintactico.py',287),
  ('metodosHash -> TiposNomVariables PUNTO LENGTH','metodosHash',3,'p_metodosHash','Sintactico.py',288),
  ('metodosHash -> TiposNomVariables PUNTO VALUES','metodosHash',3,'p_metodosHash','Sintactico.py',289),
  ('metodosHash -> TiposNomVariables PUNTO KEY PAR_I valorTodos PAR_D','metodosHash',6,'p_metodosHash','Sintactico.py',290),
  ('metodosHash -> TiposNomVariables PUNTO DELETE PAR_I CADENA PAR_D','metodosHash',6,'p_metodosHash','Sintactico.py',291),
  ('metodosHash -> TiposNomVariables PUNTO DEFAULT IGUAL valorF','metodosHash',5,'p_metodosHash','Sintactico.py',292),
  ('estructuraFunciones -> definicionF END','estructuraFunciones',2,'p_estructuraFunciones','Sintactico.py',299),
  ('definicionF -> DEF funcionSinAtributos','definicionF',2,'p_definicionF','Sintactico.py',303),
  ('definicionF -> DEF funcionConAtributos','definicionF',2,'p_definicionF','Sintactico.py',304),
  ('definicionF -> DEF funcionConDefectos','definicionF',2,'p_definicionF','Sintactico.py',305),
  ('funcionSinAtributos -> NOMBRE_FUNCION PAR_I PAR_D cuerpo','funcionSinAtributos',4,'p_funcionSinAtributos','Sintactico.py',310),
  ('funcionConAtributos -> NOMBRE_FUNCION PAR_I parametrosFunciones PAR_D cuerpo','funcionConAtributos',5,'p_funcionConAtributos','Sintactico.py',315),
  ('parametrosFunciones -> NOMBRE_VARIABLE','parametrosFunciones',1,'p_parametrosFunciones','Sintactico.py',320),
  ('parametrosFunciones -> NOMBRE_VARIABLE COMA parametrosFunciones','parametrosFunciones',3,'p_parametrosFunciones','Sintactico.py',321),
  ('llamadoFunciones -> NOMBRE_FUNCION PAR_I PAR_D','llamadoFunciones',3,'p_llamadoFunciones','Sintactico.py',326),
  ('llamadoFunciones -> NOMBRE_FUNCION PAR_I parametrosA PAR_D','llamadoFunciones',4,'p_llamadoFunciones','Sintactico.py',327),
  ('funcionConDefectos -> NOMBRE_FUNCION PAR_I parametrosFuncionesDefecto PAR_D cuerpo','funcionConDefectos',5,'p_funcionConDefectos','Sintactico.py',334),
  ('parametrosFuncionesDefecto -> NOMBRE_VARIABLE IGUAL valorF','parametrosFuncionesDefecto',3,'p_parametrosFuncionesDefecto','Sintactico.py',338),
  ('parametrosFuncionesDefecto -> NOMBRE_VARIABLE IGUAL valorF COMA parametrosFuncionesDefecto','parametrosFuncionesDefecto',5,'p_parametrosFuncionesDefecto','Sintactico.py',339),
  ('valorF -> ENTERO','valorF',1,'p_valorF','Sintactico.py',345),
  ('valorF -> FLOTANTE','valorF',1,'p_valorF','Sintactico.py',346),
  ('valorF -> CADENA','valorF',1,'p_valorF','Sintactico.py',347),
  ('valorF -> TRUE','valorF',1,'p_valorF','Sintactico.py',348),
  ('valorF -> FALSE','valorF',1,'p_valorF','Sintactico.py',349),
  ('estructuraSalida -> operadoresSalidas cuerpoSalida','estructuraSalida',2,'p_estructuraSalida','Sintactico.py',354),
  ('estructuraSalida -> operadoresSalidas PAR_I cuerpoSalida PAR_D','estructuraSalida',4,'p_estructuraSalida','Sintactico.py',355),
  ('operadoresSalidas -> PUTS','operadoresSalidas',1,'p_operadoresSalidas','Sintactico.py',361),
  ('operadoresSalidas -> PRINT','operadoresSalidas',1,'p_operadoresSalidas','Sintactico.py',362),
  ('cuerpoSalida -> variablesTotales','cuerpoSalida',1,'p_cuerpoSalida','Sintactico.py',367),
  ('cuerpoSalida -> CADENA MAS TiposNomVariables','cuerpoSalida',3,'p_cuerpoSalida','Sintactico.py',368),
  ('cuerpoSalida -> operacion','cuerpoSalida',1,'p_cuerpoSalida','Sintactico.py',369),
  ('estructuraEntrada -> GETS PUNTO CHOMP','estructuraEntrada',3,'p_estructuraEntrada','Sintactico.py',374),
  ('limpiarDatos -> STDOUT PUNTO FLUSH','limpiarDatos',3,'p_limpiarDatos','Sintactico.py',379),
  ('estructuraCasting -> castingString','estructuraCasting',1,'p_estructuraCasting','Sintactico.py',384),
  ('estructuraCasting -> castingInteger','estructuraCasting',1,'p_estructuraCasting','Sintactico.py',385),
  ('estructuraCasting -> castingFloat','estructuraCasting',1,'p_estructuraCasting','Sintactico.py',386),
  ('castingString -> ENTERO PUNTO TOSTRING','castingString',3,'p_castingString','Sintactico.py',392),
  ('castingString -> FLOTANTE PUNTO TOSTRING','castingString',3,'p_castingString','Sintactico.py',393),
  ('castingString -> STRING PAR_I ENTERO PAR_D','castingString',4,'p_castingString','Sintactico.py',394),
  ('castingString -> STRING PAR_I FLOTANTE PAR_D','castingString',4,'p_castingString','Sintactico.py',395),
  ('castingInteger -> CADENA PUNTO TOINTEGER','castingInteger',3,'p_castingInteger','Sintactico.py',400),
  ('castingInteger -> FLOTANTE PUNTO TOINTEGER','castingInteger',3,'p_castingInteger','Sintactico.py',401),
  ('castingInteger -> INTEGER PAR_I CADENA PAR_D','castingInteger',4,'p_castingInteger','Sintactico.py',402),
  ('castingInteger -> INTEGER PAR_I FLOTANTE PAR_D','castingInteger',4,'p_castingInteger','Sintactico.py',403),
  ('castingFloat -> ENTERO PUNTO TOFLOAT','castingFloat',3,'p_castingFloat','Sintactico.py',408),
  ('castingFloat -> CADENA PUNTO TOFLOAT','castingFloat',3,'p_castingFloat','Sintactico.py',409),
  ('castingFloat -> FLOAT PAR_I ENTERO PAR_D','castingFloat',4,'p_castingFloat','Sintactico.py',410),
  ('castingFloat -> FLOAT PAR_I CADENA PAR_D','castingFloat',4,'p_castingFloat','Sintactico.py',411),
  ('estructuraLeerArchivo -> FILE PUNTO READ PAR_I TiposNomVariables PAR_D','estructuraLeerArchivo',6,'p_estructuraLeerArchivo','Sintactico.py',421),
  ('estructuraLeerArchivo -> FILE PUNTO READ PAR_I CADENA PAR_D','estructuraLeerArchivo',6,'p_estructuraLeerArchivo','Sintactico.py',422),
  ('estructuraLeerArchivoLinea -> FILE PUNTO READLINES PAR_I TiposNomVariables PAR_D','estructuraLeerArchivoLinea',6,'p_estructuraLeerArchivoLinea','Sintactico.py',427),
  ('estructuraLeerArchivoLinea -> FILE PUNTO READLINES PAR_I CADENA PAR_D','estructuraLeerArchivoLinea',6,'p_estructuraLeerArchivoLinea','Sintactico.py',428),
  ('estructuraAbrirArchivo -> FILE PUNTO OPEN PAR_I TiposNomVariables COMA CADENA PAR_D','estructuraAbrirArchivo',8,'p_estructuraAbrirArchivo','Sintactico.py',433),
  ('estructuraAbrirArchivo -> FILE PUNTO OPEN PAR_I CADENA COMA CADENA PAR_D','estructuraAbrirArchivo',8,'p_estructuraAbrirArchivo','Sintactico.py',434),
  ('estructuraRecorrerArchivo -> variablesRecorrer PUNTO EACH DO PIPE NOMBRE_VARIABLE PIPE cuerpo END','estructuraRecorrerArchivo',9,'p_estructuraRecorrerArchivo','Sintactico.py',440),
  ('estructuraRecorrerArchivo -> TiposNomVariables PUNTO EACH DO PIPE NOMBRE_VARIABLE PIPE cuerpo END','estructuraRecorrerArchivo',9,'p_estructuraRecorrerArchivo','Sintactico.py',441),
  ('estructuraRecorrerArchivo -> estructuraAbrirArchivo DO PIPE NOMBRE_VARIABLE PIPE cuerpo END','estructuraRecorrerArchivo',7,'p_estructuraRecorrerArchivo','Sintactico.py',442),
  ('estructuraSplit -> TiposNomVariables PUNTO SPLIT PAR_I CADENA PAR_D','estructuraSplit',6,'p_estructuraSplit','Sintactico.py',447),
  ('estructuraSplit -> estructuraLeerArchivo PUNTO SPLIT PAR_I CADENA PAR_D','estructuraSplit',6,'p_estructuraSplit','Sintactico.py',448),
  ('variablesRecorrer -> estructuraLeerArchivoLinea','variablesRecorrer',1,'p_variablesRecorrer','Sintactico.py',452),
  ('variablesRecorrer -> estructuraSplit','variablesRecorrer',1,'p_variablesRecorrer','Sintactico.py',453),
  ('estructuraEscribirArchivo -> FILE PUNTO WRITE PAR_I TiposNomVariables COMA TiposNomVariables PAR_D','estructuraEscribirArchivo',8,'p_estructuraEscribirArchivo','Sintactico.py',458),
  ('estructuraEscribirArchivo -> FILE PUNTO WRITE PAR_I TiposNomVariables COMA CADENA PAR_D','estructuraEscribirArchivo',8,'p_estructuraEscribirArchivo','Sintactico.py',459),
  ('estructuraEscribirArchivo -> FILE PUNTO WRITE PAR_I CADENA COMA CADENA PAR_D','estructuraEscribirArchivo',8,'p_estructuraEscribirArchivo','Sintactico.py',460),
  ('estructuraEscribirArchivo -> FILE PUNTO WRITE PAR_I CADENA COMA TiposNomVariables PAR_D','estructuraEscribirArchivo',8,'p_estructuraEscribirArchivo','Sintactico.py',461),
  ('estructuraEscribirArchivo -> TiposNomVariables PUNTO WRITE PAR_I CADENA PAR_D','estructuraEscribirArchivo',6,'p_estructuraEscribirArchivo','Sintactico.py',462),
]
