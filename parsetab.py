
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALIAS AND ARRAY ASIGNACION BACKS BREAK CADENA CASE CHOMP CLASS COMA CORCHETE_D CORCHETE_I DEF DEFINED DELETE DICCIONARIO DIV DIVISION_IGUAL DO DOBLE_IGUAL EACH ELSE ELSEIF END ENSURE ENTERO EXPONENCIAL_IGUAL FALSE FILE FLOAT FLOTANTE FLUSH FOR GETS IF IGUAL IN INSERT INTEGER INTERVALO LINE LLAVE_D LLAVE_I MAS MAS_IGUAL MAYOR_IGUAL MAYOR_QUE MENOR_IGUAL MENOR_QUE MENOS MODOAPERTURA MODULE MODULO MODULO_IGUAL MULTIPLICACION MULTIPLICACION_IGUAL NEW NEXT NIL NOMBRE_CLASE NOMBRE_FUNCION NOMBRE_VARIABLE NOT NO_IGUAL OPEN OR PAR_D PAR_I PIPE POTENCIA PRINT PUNTO PUSH PUTS READ READLINES REDO RESCUE RESTA_IGUAL RETRY RETURN SALTO_LINEA SELF SIZE SPLIT STDOUT STRING SUPER THEN TOFLOAT TOINTEGER TOSTRING TRUE UNDEF UNLEES UNTIL VAL VARIABLE_CLASE VARIABLE_GLOBAL VARIABLE_INSTANCIA VFILE WHEN WHILE WRITE YIELDinstrucciones : estructurasControl\n                   | estructuraFunciones\n                   | estructuraSalida\n                   | estructuraAsignacion\n                   | llamadoFunciones\n                   | estructuraArray\n                   | funcionesArreglo\n                   | funcionesString\n                   | limpiarDatos\n                   | estructuraEscribirArchivo\n                   | estructuraClase\n                cuerpo : estructurasControl\n              | estructuraSalida\n              | estructuraAsignacion\n              | llamadoFunciones\n              | estructuraArray\n              | funcionesArreglo\n              | funcionesString\n              | limpiarDatos\n              | estructuraEscribirArchivo\n    valorTodos : variablesTotales\n                | estructuraHash\n                | estructuraArray\n  estructuraAsignacion : TiposNomVariables tipoAsignacion variables\n                          | TiposNomVariables IGUAL variablesTotales\n                          | TiposNomVariables IGUAL estructuraComparacion\n                          | TiposNomVariables IGUAL estructuraArray\n                          | TiposNomVariables IGUAL estructuraLeerArchivo\n                          | TiposNomVariables IGUAL estructuraEntrada\n                          | TiposNomVariables IGUAL estructuraAbrirArchivo\n                          | TiposNomVariables IGUAL llamadoFunciones \n                          | TiposNomVariables IGUAL estructuraLeerArchivoLinea                \n                          | TiposNomVariables IGUAL estructuraHash\n                          | TiposNomVariables IGUAL operacion\n                          | TiposNomVariables IGUAL estructuraSplit                        \n                tipoAsignacion : MAS_IGUAL\n                    | RESTA_IGUAL\n                    | MULTIPLICACION_IGUAL\n                    | DIVISION_IGUAL\n                    | MODULO_IGUAL\n                    | EXPONENCIAL_IGUAL\n                 operacion : numericos operador numericos\n                | numericos operador numericos operador operacion\n  operador : MAS\n              | MENOS\n              | MULTIPLICACION\n              | POTENCIA\n              | DIV\n              | MODULO\n  estructuraComparacion : variablesTotales comparador variablesTotalescomparador : MENOR_QUE\n                | MAYOR_QUE\n                | MAYOR_IGUAL\n                | DOBLE_IGUAL\n                | MENOR_IGUAL\n                | NO_IGUAL\n  estructurasControl : estructuraIf\n                        | estructuraUntil\n                        | estructuraCase\n   estructuraIf : IF PAR_I estructuraComparacion PAR_D cuerpo END\n                  | IF PAR_I estructuraComparacion PAR_D cuerpo estructuraElse END\n                estructuraUntil : UNTIL PAR_I estructuraComparacion PAR_D cuerpo END\n                estructuraElse : ELSE cuerpo\n                estructuraCase : CASE NOMBRE_VARIABLE SALTO_LINEA estructuraWhenI ENDestructuraWhenI : estructuraWhen estructuraElse\n  estructuraWhen : WHEN sentenciaWhen SALTO_LINEA cuerpo\n                   | estructuraWhen SALTO_LINEA WHEN sentenciaWhen SALTO_LINEA cuerpo\n   sentenciaWhen : estructuraComparacion\n                    | intervaloW\n  intervaloW : ENTERO INTERVALO ENTERO estructuraArray : CORCHETE_I CORCHETE_D\n                     | ARRAY PUNTO NEW\n                     | CORCHETE_I parametrosA CORCHETE_D\n                parametrosA : variablesTotales\n                 | variablesTotales COMA parametrosA\n  funcionesArreglo : TiposNomVariables PUNTO nombreFuncionesA \n  nombreFuncionesA : PUSH PAR_I variablesTotales PAR_D\n                      | DELETE PAR_I ENTERO PAR_D\n  funcionesString : TiposNomVariables PUNTO nombreFuncionesS\n                     | CADENA PUNTO nombreFuncionesS\n  nombreFuncionesS : INSERT PAR_I ENTERO COMA CADENA PAR_D\n                      | INSERT PAR_I ENTERO COMA TiposNomVariables PAR_D\n                      | INSERT PAR_I TiposNomVariables COMA CADENA PAR_D\n                      | INSERT PAR_I TiposNomVariables COMA TiposNomVariables PAR_D\n                      | SIZE PAR_I  PAR_D\n                      | SIZE\n  estructuraHash : LLAVE_I cuerpoH LLAVE_DcuerpoH : CADENA ASIGNACION valorTodos\n             | cuerpoH COMA CADENA ASIGNACION valorTodos\n  estructuraFunciones : DEF funcionSinAtributos END\n                         | DEF funcionConAtributos END\n                         | DEF funcionConDefectos END\n  funcionSinAtributos : NOMBRE_FUNCION PAR_I PAR_D cuerpo\n  funcionConAtributos : NOMBRE_FUNCION PAR_I parametrosFunciones PAR_D cuerpo\n  parametrosFunciones : TiposNomVariables\n                         | TiposNomVariables COMA parametrosFunciones\n  llamadoFunciones : NOMBRE_FUNCION PAR_I PAR_D \n                      | NOMBRE_FUNCION PAR_I parametrosFunciones PAR_D\n  funcionConDefectos : NOMBRE_FUNCION PAR_I parametrosFuncionesDefecto PAR_D cuerpoparametrosFuncionesDefecto : NOMBRE_VARIABLE IGUAL valorF\n                                | NOMBRE_VARIABLE IGUAL valorF COMA parametrosFuncionesDefecto \n                                \n  valorF : ENTERO\n            | FLOTANTE\n            | CADENA\n            | TRUE\n            | FALSE\n  estructuraSalida : operadoresSalidas cuerpoSalida\n                      | operadoresSalidas PAR_I cuerpoSalida PAR_D\n                operadoresSalidas : PUTS\n                       | PRINT \n                cuerpoSalida : variablesTotales\n                  | CADENA MAS TiposNomVariables\n                  | operacion\n  estructuraEntrada : GETS PUNTO CHOMP\n                limpiarDatos : STDOUT PUNTO FLUSH\n                 castingString : ENTERO PUNTO TOSTRING\n                    | FLOTANTE PUNTO TOSTRING\n                    | STRING PAR_I ENTERO PAR_D\n                    | STRING PAR_I FLOTANTE PAR_D\n   castingString : CADENA PUNTO TOINTEGER\n                    | FLOTANTE PUNTO TOINTEGER\n                    | INTEGER PAR_I CADENA PAR_D\n                    | INTEGER PAR_I FLOTANTE PAR_D\n   castingString : ENTERO PUNTO TOFLOAT\n                    | CADENA PUNTO TOFLOAT\n                    | FLOAT PAR_I ENTERO PAR_D\n                    | FLOAT PAR_I CADENA PAR_D\n  estructuraLeerArchivo : FILE PUNTO READ PAR_I TiposNomVariables PAR_D\n                              | FILE PUNTO READ PAR_I CADENA PAR_D\n    estructuraLeerArchivoLinea : FILE PUNTO READLINES PAR_I TiposNomVariables PAR_D\n                                  | FILE PUNTO READLINES PAR_I CADENA PAR_D\n    estructuraAbrirArchivo : FILE PUNTO OPEN PAR_I TiposNomVariables COMA MODOAPERTURA PAR_D\n                              | FILE PUNTO OPEN PAR_I CADENA COMA MODOAPERTURA PAR_D\n    estructuraRecorrerArchivo : variablesRecorrer PUNTO EACH DO PIPE NOMBRE_VARIABLE PIPE cuerpo END\n                                 | estructuraAbrirArchivo DO PIPE NOMBRE_VARIABLE PIPE cuerpo END\n    estructuraSplit : TiposNomVariables PUNTO SPLIT PAR_I CADENA PAR_DvariablesRecorrer : TiposNomVariables\n                         | estructuraLeerArchivoLinea\n                         | estructuraSplit\n    estructuraEscribirArchivo : FILE PUNTO WRITE PAR_I TiposNomVariables COMA TiposNomVariables PAR_D\n                                 | FILE PUNTO WRITE PAR_I TiposNomVariables COMA CADENA PAR_D\n                                 | FILE PUNTO WRITE PAR_I CADENA COMA CADENA PAR_D\n                                 | FILE PUNTO WRITE PAR_I CADENA COMA TiposNomVariables PAR_D\n                                 | NOMBRE_VARIABLE PUNTO WRITE PAR_I CADENA PAR_D\n    variablesTotales : variables \n                        | boleanos\n    variables : CADENA\n               | numericos\n               | TiposNomVariables\n  TiposNomVariables : NOMBRE_VARIABLE\n                       | VARIABLE_GLOBAL\n                       | VARIABLE_INSTANCIA\n                       | VARIABLE_CLASE boleanos : TRUE \n                | FALSE\n    numericos : ENTERO \n                 | FLOTANTE\n    estructuraClase : CLASS NOMBRE_CLASE\n    '
    
_lr_action_items = {'DEF':([0,],[16,]),'NOMBRE_FUNCION':([0,16,54,126,154,155,169,170,196,232,273,],[19,38,19,19,19,19,19,19,19,19,19,]),'CORCHETE_I':([0,54,126,154,155,169,170,181,196,232,242,273,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'ARRAY':([0,54,126,154,155,169,170,181,196,232,242,273,],[21,21,21,21,21,21,21,21,21,21,21,21,]),'CADENA':([0,17,20,30,31,40,53,54,56,57,58,59,60,61,74,75,105,116,126,134,135,136,137,138,139,140,145,152,153,154,155,158,169,170,171,180,181,196,211,212,213,214,222,223,224,225,230,232,242,273,],[22,42,66,-109,-110,42,66,66,-36,-37,-38,-39,-40,-41,66,66,144,66,22,66,-51,-52,-53,-54,-55,-56,66,189,190,22,22,66,22,22,206,215,66,22,235,237,239,241,243,246,248,249,66,22,66,22,]),'STDOUT':([0,126,154,155,169,170,196,232,273,],[23,23,23,23,23,23,23,23,23,]),'FILE':([0,54,126,154,155,169,170,196,232,273,],[24,103,24,24,24,24,24,24,24,24,]),'NOMBRE_VARIABLE':([0,17,20,29,30,31,40,53,54,56,57,58,59,60,61,62,74,75,80,82,116,126,134,135,136,137,138,139,140,145,147,150,152,154,155,158,169,170,181,196,212,213,214,222,223,224,225,230,232,234,242,273,],[25,52,52,76,-109,-110,52,52,52,-36,-37,-38,-39,-40,-41,52,52,52,129,52,52,25,52,-51,-52,-53,-54,-55,-56,52,52,52,52,25,25,52,25,25,52,25,52,52,52,52,52,52,52,52,25,255,52,25,]),'CLASS':([0,],[26,]),'IF':([0,126,154,155,169,170,196,232,273,],[27,27,27,27,27,27,27,27,27,]),'UNTIL':([0,126,154,155,169,170,196,232,273,],[28,28,28,28,28,28,28,28,28,]),'CASE':([0,126,154,155,169,170,196,232,273,],[29,29,29,29,29,29,29,29,29,]),'PUTS':([0,126,154,155,169,170,196,232,273,],[30,30,30,30,30,30,30,30,30,]),'PRINT':([0,126,154,155,169,170,196,232,273,],[31,31,31,31,31,31,31,31,31,]),'VARIABLE_GLOBAL':([0,17,20,30,31,40,53,54,56,57,58,59,60,61,62,74,75,80,82,116,126,134,135,136,137,138,139,140,145,147,150,152,154,155,158,169,170,181,196,212,213,214,222,223,224,225,230,232,242,273,],[32,32,32,-109,-110,32,32,32,-36,-37,-38,-39,-40,-41,32,32,32,32,32,32,32,32,-51,-52,-53,-54,-55,-56,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'VARIABLE_INSTANCIA':([0,17,20,30,31,40,53,54,56,57,58,59,60,61,62,74,75,80,82,116,126,134,135,136,137,138,139,140,145,147,150,152,154,155,158,169,170,181,196,212,213,214,222,223,224,225,230,232,242,273,],[33,33,33,-109,-110,33,33,33,-36,-37,-38,-39,-40,-41,33,33,33,33,33,33,33,33,-51,-52,-53,-54,-55,-56,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'VARIABLE_CLASE':([0,17,20,30,31,40,53,54,56,57,58,59,60,61,62,74,75,80,82,116,126,134,135,136,137,138,139,140,145,147,150,152,154,155,158,169,170,181,196,212,213,214,222,223,224,225,230,232,242,273,],[34,34,34,-109,-110,34,34,34,-36,-37,-38,-39,-40,-41,34,34,34,34,34,34,34,34,-51,-52,-53,-54,-55,-56,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,32,33,34,39,41,42,43,44,45,46,47,48,49,50,51,52,63,66,67,73,77,78,79,90,91,92,93,94,95,96,97,98,99,100,101,102,106,107,111,112,115,117,118,119,130,131,132,149,174,178,179,186,193,210,220,221,226,227,229,251,257,258,259,262,263,265,266,267,268,269,270,271,272,277,278,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-57,-58,-59,-151,-152,-153,-107,-111,-147,-149,-113,-145,-146,-148,-154,-155,-156,-157,-150,-71,-147,-148,-158,-90,-91,-92,-24,-149,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-76,-79,-86,-97,-73,-72,-80,-115,-108,-112,-42,-98,-50,-114,-87,-85,-64,-43,-77,-78,-144,-60,-62,-61,-136,-128,-129,-130,-131,-81,-82,-84,-83,-140,-141,-142,-143,-132,-133,]),'END':([13,14,15,32,33,34,35,36,37,39,41,42,43,44,45,46,47,48,49,50,51,52,63,66,67,90,91,92,93,94,95,96,97,98,99,100,101,102,106,107,111,112,115,117,118,119,130,131,132,149,156,159,160,161,162,163,164,165,166,167,168,174,178,179,186,191,192,193,194,201,202,210,220,221,226,227,228,229,231,251,257,258,259,262,263,265,266,267,268,269,270,271,272,277,278,],[-57,-58,-59,-151,-152,-153,77,78,79,-107,-111,-147,-149,-113,-145,-146,-148,-154,-155,-156,-157,-150,-71,-147,-148,-24,-149,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-76,-79,-86,-97,-73,-72,-80,-115,-108,-112,-42,-98,193,-93,-12,-13,-14,-15,-16,-17,-18,-19,-20,-50,-114,-87,-85,227,229,-64,-65,-94,-99,-43,-77,-78,-144,-60,251,-62,-63,-61,-136,-128,-129,-130,-131,-81,-82,-84,-83,-140,-141,-142,-143,-132,-133,]),'ELSE':([13,14,15,32,33,34,39,41,42,43,44,45,46,47,48,49,50,51,52,63,66,67,90,91,92,93,94,95,96,97,98,99,100,101,102,106,107,111,112,115,117,118,119,130,131,132,149,157,160,161,162,163,164,165,166,167,168,174,178,179,186,191,193,210,220,221,226,227,229,251,253,257,258,259,262,263,265,266,267,268,269,270,271,272,276,277,278,],[-57,-58,-59,-151,-152,-153,-107,-111,-147,-149,-113,-145,-146,-148,-154,-155,-156,-157,-150,-71,-147,-148,-24,-149,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-76,-79,-86,-97,-73,-72,-80,-115,-108,-112,-42,-98,196,-12,-13,-14,-15,-16,-17,-18,-19,-20,-50,-114,-87,-85,196,-64,-43,-77,-78,-144,-60,-62,-61,-66,-136,-128,-129,-130,-131,-81,-82,-84,-83,-140,-141,-142,-143,-67,-132,-133,]),'SALTO_LINEA':([13,14,15,32,33,34,39,41,42,43,44,45,46,47,48,49,50,51,52,63,66,67,76,90,91,92,93,94,95,96,97,98,99,100,101,102,106,107,111,112,115,117,118,119,130,131,132,149,157,160,161,162,163,164,165,166,167,168,174,178,179,186,193,197,198,199,210,220,221,226,227,229,251,252,253,254,257,258,259,262,263,265,266,267,268,269,270,271,272,276,277,278,],[-57,-58,-59,-151,-152,-153,-107,-111,-147,-149,-113,-145,-146,-148,-154,-155,-156,-157,-150,-71,-147,-148,125,-24,-149,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-76,-79,-86,-97,-73,-72,-80,-115,-108,-112,-42,-98,195,-12,-13,-14,-15,-16,-17,-18,-19,-20,-50,-114,-87,-85,-64,232,-68,-69,-43,-77,-78,-144,-60,-62,-61,273,-66,-70,-136,-128,-129,-130,-131,-81,-82,-84,-83,-140,-141,-142,-143,-67,-132,-133,]),'PAR_I':([17,19,27,28,30,31,38,108,109,110,111,120,121,173,175,176,177,],[40,62,74,75,-109,-110,80,145,146,147,148,152,153,211,212,213,214,]),'TRUE':([17,20,30,31,40,54,74,75,116,134,135,136,137,138,139,140,145,158,171,181,230,242,],[48,48,-109,-110,48,48,48,48,48,48,-51,-52,-53,-54,-55,-56,48,48,207,48,48,48,]),'FALSE':([17,20,30,31,40,54,74,75,116,134,135,136,137,138,139,140,145,158,171,181,230,242,],[49,49,-109,-110,49,49,49,49,49,49,-51,-52,-53,-54,-55,-56,49,49,208,49,49,49,]),'ENTERO':([17,20,30,31,40,53,54,56,57,58,59,60,61,74,75,83,84,85,86,87,88,89,116,134,135,136,137,138,139,140,145,146,147,158,171,172,181,230,233,242,],[50,50,-109,-110,50,50,50,-36,-37,-38,-39,-40,-41,50,50,50,-44,-45,-46,-47,-48,-49,50,50,-51,-52,-53,-54,-55,-56,50,183,184,200,204,50,50,200,254,50,]),'FLOTANTE':([17,20,30,31,40,53,54,56,57,58,59,60,61,74,75,83,84,85,86,87,88,89,116,134,135,136,137,138,139,140,145,158,171,172,181,230,242,],[51,51,-109,-110,51,51,51,-36,-37,-38,-39,-40,-41,51,51,51,-44,-45,-46,-47,-48,-49,51,51,-51,-52,-53,-54,-55,-56,51,51,205,51,51,51,51,]),'IGUAL':([18,25,32,33,34,129,255,],[54,-150,-151,-152,-153,171,171,]),'PUNTO':([18,21,22,23,24,25,32,33,34,52,91,103,104,],[55,68,69,70,71,72,-151,-152,-153,-150,133,141,142,]),'MAS_IGUAL':([18,25,32,33,34,],[56,-150,-151,-152,-153,]),'RESTA_IGUAL':([18,25,32,33,34,],[57,-150,-151,-152,-153,]),'MULTIPLICACION_IGUAL':([18,25,32,33,34,],[58,-150,-151,-152,-153,]),'DIVISION_IGUAL':([18,25,32,33,34,],[59,-150,-151,-152,-153,]),'MODULO_IGUAL':([18,25,32,33,34,],[60,-150,-151,-152,-153,]),'EXPONENCIAL_IGUAL':([18,25,32,33,34,],[61,-150,-151,-152,-153,]),'CORCHETE_D':([20,32,33,34,43,45,46,48,49,50,51,52,64,65,66,67,151,],[63,-151,-152,-153,-149,-145,-146,-154,-155,-156,-157,-150,115,-74,-147,-148,-75,]),'NOMBRE_CLASE':([26,],[73,]),'COMA':([32,33,34,43,45,46,48,49,50,51,52,63,65,66,67,114,115,117,129,143,179,184,185,188,189,203,204,205,206,207,208,216,217,218,219,238,239,264,],[-151,-152,-153,-149,-145,-146,-154,-155,-156,-157,-150,-71,116,-147,-148,150,-73,-72,-150,180,-87,222,223,224,225,234,-102,-103,-104,-105,-106,-88,-21,-22,-23,260,261,-89,]),'PAR_D':([32,33,34,41,42,43,44,45,46,47,48,49,50,51,52,62,66,67,80,81,113,114,122,124,127,128,129,131,132,148,174,182,183,187,190,203,204,205,206,207,208,210,235,236,237,240,241,243,244,245,246,247,248,249,250,256,274,275,],[-151,-152,-153,-111,-147,-149,-113,-145,-146,-148,-154,-155,-156,-157,-150,112,-147,-148,126,130,149,-95,154,155,169,170,-150,-112,-42,186,-50,220,221,-96,226,-100,-102,-103,-104,-105,-106,-43,257,258,259,262,263,265,266,267,268,269,270,271,272,-101,277,278,]),'MENOR_QUE':([32,33,34,43,45,46,47,48,49,50,51,52,66,67,91,92,123,200,],[-151,-152,-153,-149,-145,-146,-148,-154,-155,-156,-157,-150,-147,-148,-149,135,135,-156,]),'MAYOR_QUE':([32,33,34,43,45,46,47,48,49,50,51,52,66,67,91,92,123,200,],[-151,-152,-153,-149,-145,-146,-148,-154,-155,-156,-157,-150,-147,-148,-149,136,136,-156,]),'MAYOR_IGUAL':([32,33,34,43,45,46,47,48,49,50,51,52,66,67,91,92,123,200,],[-151,-152,-153,-149,-145,-146,-148,-154,-155,-156,-157,-150,-147,-148,-149,137,137,-156,]),'DOBLE_IGUAL':([32,33,34,43,45,46,47,48,49,50,51,52,66,67,91,92,123,200,],[-151,-152,-153,-149,-145,-146,-148,-154,-155,-156,-157,-150,-147,-148,-149,138,138,-156,]),'MENOR_IGUAL':([32,33,34,43,45,46,47,48,49,50,51,52,66,67,91,92,123,200,],[-151,-152,-153,-149,-145,-146,-148,-154,-155,-156,-157,-150,-147,-148,-149,139,139,-156,]),'NO_IGUAL':([32,33,34,43,45,46,47,48,49,50,51,52,66,67,91,92,123,200,],[-151,-152,-153,-149,-145,-146,-148,-154,-155,-156,-157,-150,-147,-148,-149,140,140,-156,]),'LLAVE_D':([32,33,34,43,45,46,48,49,50,51,52,63,66,67,115,117,143,179,216,217,218,219,264,],[-151,-152,-153,-149,-145,-146,-154,-155,-156,-157,-150,-71,-147,-148,-73,-72,179,-87,-88,-21,-22,-23,-89,]),'MAS':([42,47,50,51,132,209,],[82,84,-156,-157,84,84,]),'MENOS':([47,50,51,132,209,],[85,-156,-157,85,85,]),'MULTIPLICACION':([47,50,51,132,209,],[86,-156,-157,86,86,]),'POTENCIA':([47,50,51,132,209,],[87,-156,-157,87,87,]),'DIV':([47,50,51,132,209,],[88,-156,-157,88,88,]),'MODULO':([47,50,51,132,209,],[89,-156,-157,89,89,]),'GETS':([54,],[104,]),'LLAVE_I':([54,181,242,],[105,105,105,]),'PUSH':([55,],[108,]),'DELETE':([55,],[109,]),'INSERT':([55,69,],[110,110,]),'SIZE':([55,69,],[111,111,]),'NEW':([68,],[117,]),'FLUSH':([70,],[119,]),'WRITE':([71,72,],[120,121,]),'WHEN':([125,195,],[158,230,]),'SPLIT':([133,],[173,]),'READ':([141,],[175,]),'OPEN':([141,],[176,]),'READLINES':([141,],[177,]),'CHOMP':([142,],[178,]),'ASIGNACION':([144,215,],[181,242,]),'INTERVALO':([200,],[233,]),'MODOAPERTURA':([260,261,],[274,275,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,],[1,]),'estructurasControl':([0,126,154,155,169,170,196,232,273,],[2,160,160,160,160,160,160,160,160,]),'estructuraFunciones':([0,],[3,]),'estructuraSalida':([0,126,154,155,169,170,196,232,273,],[4,161,161,161,161,161,161,161,161,]),'estructuraAsignacion':([0,126,154,155,169,170,196,232,273,],[5,162,162,162,162,162,162,162,162,]),'llamadoFunciones':([0,54,126,154,155,169,170,196,232,273,],[6,98,163,163,163,163,163,163,163,163,]),'estructuraArray':([0,54,126,154,155,169,170,181,196,232,242,273,],[7,94,164,164,164,164,164,219,164,164,219,164,]),'funcionesArreglo':([0,126,154,155,169,170,196,232,273,],[8,165,165,165,165,165,165,165,165,]),'funcionesString':([0,126,154,155,169,170,196,232,273,],[9,166,166,166,166,166,166,166,166,]),'limpiarDatos':([0,126,154,155,169,170,196,232,273,],[10,167,167,167,167,167,167,167,167,]),'estructuraEscribirArchivo':([0,126,154,155,169,170,196,232,273,],[11,168,168,168,168,168,168,168,168,]),'estructuraClase':([0,],[12,]),'estructuraIf':([0,126,154,155,169,170,196,232,273,],[13,13,13,13,13,13,13,13,13,]),'estructuraUntil':([0,126,154,155,169,170,196,232,273,],[14,14,14,14,14,14,14,14,14,]),'estructuraCase':([0,126,154,155,169,170,196,232,273,],[15,15,15,15,15,15,15,15,15,]),'operadoresSalidas':([0,126,154,155,169,170,196,232,273,],[17,17,17,17,17,17,17,17,17,]),'TiposNomVariables':([0,17,20,40,53,54,62,74,75,80,82,116,126,134,145,147,150,152,154,155,158,169,170,181,196,212,213,214,222,223,224,225,230,232,242,273,],[18,43,43,43,43,91,114,43,43,114,131,43,18,43,43,185,114,188,18,18,43,18,18,43,18,236,238,240,244,245,247,250,43,18,43,18,]),'funcionSinAtributos':([16,],[35,]),'funcionConAtributos':([16,],[36,]),'funcionConDefectos':([16,],[37,]),'cuerpoSalida':([17,40,],[39,81,]),'variablesTotales':([17,20,40,54,74,75,116,134,145,158,181,230,242,],[41,65,41,92,123,123,65,174,182,123,217,123,217,]),'operacion':([17,40,54,172,],[44,44,101,210,]),'variables':([17,20,40,53,54,74,75,116,134,145,158,181,230,242,],[45,45,45,90,45,45,45,45,45,45,45,45,45,45,]),'boleanos':([17,20,40,54,74,75,116,134,145,158,181,230,242,],[46,46,46,46,46,46,46,46,46,46,46,46,46,]),'numericos':([17,20,40,53,54,74,75,83,116,134,145,158,172,181,230,242,],[47,67,47,67,47,67,67,132,67,67,67,67,209,67,67,67,]),'tipoAsignacion':([18,],[53,]),'parametrosA':([20,116,],[64,151,]),'operador':([47,132,209,],[83,172,83,]),'estructuraComparacion':([54,74,75,158,230,],[93,122,124,198,198,]),'estructuraLeerArchivo':([54,],[95,]),'estructuraEntrada':([54,],[96,]),'estructuraAbrirArchivo':([54,],[97,]),'estructuraLeerArchivoLinea':([54,],[99,]),'estructuraHash':([54,181,242,],[100,218,218,]),'estructuraSplit':([54,],[102,]),'nombreFuncionesA':([55,],[106,]),'nombreFuncionesS':([55,69,],[107,118,]),'parametrosFunciones':([62,80,150,],[113,127,187,]),'parametrosFuncionesDefecto':([80,234,],[128,256,]),'comparador':([92,123,],[134,134,]),'cuerpoH':([105,],[143,]),'estructuraWhenI':([125,],[156,]),'estructuraWhen':([125,],[157,]),'cuerpo':([126,154,155,169,170,196,232,273,],[159,191,192,201,202,231,253,276,]),'estructuraElse':([157,191,],[194,228,]),'sentenciaWhen':([158,230,],[197,252,]),'intervaloW':([158,230,],[199,199,]),'valorF':([171,],[203,]),'valorTodos':([181,242,],[216,264,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> estructurasControl','instrucciones',1,'p_instrucciones','Sintactico.py',7),
  ('instrucciones -> estructuraFunciones','instrucciones',1,'p_instrucciones','Sintactico.py',8),
  ('instrucciones -> estructuraSalida','instrucciones',1,'p_instrucciones','Sintactico.py',9),
  ('instrucciones -> estructuraAsignacion','instrucciones',1,'p_instrucciones','Sintactico.py',10),
  ('instrucciones -> llamadoFunciones','instrucciones',1,'p_instrucciones','Sintactico.py',11),
  ('instrucciones -> estructuraArray','instrucciones',1,'p_instrucciones','Sintactico.py',12),
  ('instrucciones -> funcionesArreglo','instrucciones',1,'p_instrucciones','Sintactico.py',13),
  ('instrucciones -> funcionesString','instrucciones',1,'p_instrucciones','Sintactico.py',14),
  ('instrucciones -> limpiarDatos','instrucciones',1,'p_instrucciones','Sintactico.py',15),
  ('instrucciones -> estructuraEscribirArchivo','instrucciones',1,'p_instrucciones','Sintactico.py',16),
  ('instrucciones -> estructuraClase','instrucciones',1,'p_instrucciones','Sintactico.py',17),
  ('cuerpo -> estructurasControl','cuerpo',1,'p_cuerpo','Sintactico.py',20),
  ('cuerpo -> estructuraSalida','cuerpo',1,'p_cuerpo','Sintactico.py',21),
  ('cuerpo -> estructuraAsignacion','cuerpo',1,'p_cuerpo','Sintactico.py',22),
  ('cuerpo -> llamadoFunciones','cuerpo',1,'p_cuerpo','Sintactico.py',23),
  ('cuerpo -> estructuraArray','cuerpo',1,'p_cuerpo','Sintactico.py',24),
  ('cuerpo -> funcionesArreglo','cuerpo',1,'p_cuerpo','Sintactico.py',25),
  ('cuerpo -> funcionesString','cuerpo',1,'p_cuerpo','Sintactico.py',26),
  ('cuerpo -> limpiarDatos','cuerpo',1,'p_cuerpo','Sintactico.py',27),
  ('cuerpo -> estructuraEscribirArchivo','cuerpo',1,'p_cuerpo','Sintactico.py',28),
  ('valorTodos -> variablesTotales','valorTodos',1,'p_valorTodos','Sintactico.py',33),
  ('valorTodos -> estructuraHash','valorTodos',1,'p_valorTodos','Sintactico.py',34),
  ('valorTodos -> estructuraArray','valorTodos',1,'p_valorTodos','Sintactico.py',35),
  ('estructuraAsignacion -> TiposNomVariables tipoAsignacion variables','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',40),
  ('estructuraAsignacion -> TiposNomVariables IGUAL variablesTotales','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',41),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraComparacion','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',42),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraArray','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',43),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraLeerArchivo','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',44),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraEntrada','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',45),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraAbrirArchivo','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',46),
  ('estructuraAsignacion -> TiposNomVariables IGUAL llamadoFunciones','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',47),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraLeerArchivoLinea','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',48),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraHash','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',49),
  ('estructuraAsignacion -> TiposNomVariables IGUAL operacion','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',50),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraSplit','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',51),
  ('tipoAsignacion -> MAS_IGUAL','tipoAsignacion',1,'p_tipoAsignacion','Sintactico.py',55),
  ('tipoAsignacion -> RESTA_IGUAL','tipoAsignacion',1,'p_tipoAsignacion','Sintactico.py',56),
  ('tipoAsignacion -> MULTIPLICACION_IGUAL','tipoAsignacion',1,'p_tipoAsignacion','Sintactico.py',57),
  ('tipoAsignacion -> DIVISION_IGUAL','tipoAsignacion',1,'p_tipoAsignacion','Sintactico.py',58),
  ('tipoAsignacion -> MODULO_IGUAL','tipoAsignacion',1,'p_tipoAsignacion','Sintactico.py',59),
  ('tipoAsignacion -> EXPONENCIAL_IGUAL','tipoAsignacion',1,'p_tipoAsignacion','Sintactico.py',60),
  ('operacion -> numericos operador numericos','operacion',3,'p_operacion','Sintactico.py',66),
  ('operacion -> numericos operador numericos operador operacion','operacion',5,'p_operacion','Sintactico.py',67),
  ('operador -> MAS','operador',1,'p_operador','Sintactico.py',71),
  ('operador -> MENOS','operador',1,'p_operador','Sintactico.py',72),
  ('operador -> MULTIPLICACION','operador',1,'p_operador','Sintactico.py',73),
  ('operador -> POTENCIA','operador',1,'p_operador','Sintactico.py',74),
  ('operador -> DIV','operador',1,'p_operador','Sintactico.py',75),
  ('operador -> MODULO','operador',1,'p_operador','Sintactico.py',76),
  ('estructuraComparacion -> variablesTotales comparador variablesTotales','estructuraComparacion',3,'p_estructuraComparacion','Sintactico.py',80),
  ('comparador -> MENOR_QUE','comparador',1,'p_comparador','Sintactico.py',83),
  ('comparador -> MAYOR_QUE','comparador',1,'p_comparador','Sintactico.py',84),
  ('comparador -> MAYOR_IGUAL','comparador',1,'p_comparador','Sintactico.py',85),
  ('comparador -> DOBLE_IGUAL','comparador',1,'p_comparador','Sintactico.py',86),
  ('comparador -> MENOR_IGUAL','comparador',1,'p_comparador','Sintactico.py',87),
  ('comparador -> NO_IGUAL','comparador',1,'p_comparador','Sintactico.py',88),
  ('estructurasControl -> estructuraIf','estructurasControl',1,'p_estructurasControl','Sintactico.py',92),
  ('estructurasControl -> estructuraUntil','estructurasControl',1,'p_estructurasControl','Sintactico.py',93),
  ('estructurasControl -> estructuraCase','estructurasControl',1,'p_estructurasControl','Sintactico.py',94),
  ('estructuraIf -> IF PAR_I estructuraComparacion PAR_D cuerpo END','estructuraIf',6,'p_estructuraIf','Sintactico.py',98),
  ('estructuraIf -> IF PAR_I estructuraComparacion PAR_D cuerpo estructuraElse END','estructuraIf',7,'p_estructuraIf','Sintactico.py',99),
  ('estructuraUntil -> UNTIL PAR_I estructuraComparacion PAR_D cuerpo END','estructuraUntil',6,'p_estructuraUntil','Sintactico.py',103),
  ('estructuraElse -> ELSE cuerpo','estructuraElse',2,'p_estructuraElse','Sintactico.py',107),
  ('estructuraCase -> CASE NOMBRE_VARIABLE SALTO_LINEA estructuraWhenI END','estructuraCase',5,'p_estructuraCase','Sintactico.py',111),
  ('estructuraWhenI -> estructuraWhen estructuraElse','estructuraWhenI',2,'p_estructuraWhenI','Sintactico.py',114),
  ('estructuraWhen -> WHEN sentenciaWhen SALTO_LINEA cuerpo','estructuraWhen',4,'p_estructuraWhen','Sintactico.py',118),
  ('estructuraWhen -> estructuraWhen SALTO_LINEA WHEN sentenciaWhen SALTO_LINEA cuerpo','estructuraWhen',6,'p_estructuraWhen','Sintactico.py',119),
  ('sentenciaWhen -> estructuraComparacion','sentenciaWhen',1,'p_sentenciaWhen','Sintactico.py',123),
  ('sentenciaWhen -> intervaloW','sentenciaWhen',1,'p_sentenciaWhen','Sintactico.py',124),
  ('intervaloW -> ENTERO INTERVALO ENTERO','intervaloW',3,'p_intervaloW','Sintactico.py',128),
  ('estructuraArray -> CORCHETE_I CORCHETE_D','estructuraArray',2,'p_estructuraArray','Sintactico.py',134),
  ('estructuraArray -> ARRAY PUNTO NEW','estructuraArray',3,'p_estructuraArray','Sintactico.py',135),
  ('estructuraArray -> CORCHETE_I parametrosA CORCHETE_D','estructuraArray',3,'p_estructuraArray','Sintactico.py',136),
  ('parametrosA -> variablesTotales','parametrosA',1,'p_parametrosA','Sintactico.py',140),
  ('parametrosA -> variablesTotales COMA parametrosA','parametrosA',3,'p_parametrosA','Sintactico.py',141),
  ('funcionesArreglo -> TiposNomVariables PUNTO nombreFuncionesA','funcionesArreglo',3,'p_funcionesArreglo','Sintactico.py',145),
  ('nombreFuncionesA -> PUSH PAR_I variablesTotales PAR_D','nombreFuncionesA',4,'p_nombreFuncionesA','Sintactico.py',149),
  ('nombreFuncionesA -> DELETE PAR_I ENTERO PAR_D','nombreFuncionesA',4,'p_nombreFuncionesA','Sintactico.py',150),
  ('funcionesString -> TiposNomVariables PUNTO nombreFuncionesS','funcionesString',3,'p_funcionesString','Sintactico.py',154),
  ('funcionesString -> CADENA PUNTO nombreFuncionesS','funcionesString',3,'p_funcionesString','Sintactico.py',155),
  ('nombreFuncionesS -> INSERT PAR_I ENTERO COMA CADENA PAR_D','nombreFuncionesS',6,'p_nombreFuncionesS','Sintactico.py',159),
  ('nombreFuncionesS -> INSERT PAR_I ENTERO COMA TiposNomVariables PAR_D','nombreFuncionesS',6,'p_nombreFuncionesS','Sintactico.py',160),
  ('nombreFuncionesS -> INSERT PAR_I TiposNomVariables COMA CADENA PAR_D','nombreFuncionesS',6,'p_nombreFuncionesS','Sintactico.py',161),
  ('nombreFuncionesS -> INSERT PAR_I TiposNomVariables COMA TiposNomVariables PAR_D','nombreFuncionesS',6,'p_nombreFuncionesS','Sintactico.py',162),
  ('nombreFuncionesS -> SIZE PAR_I PAR_D','nombreFuncionesS',3,'p_nombreFuncionesS','Sintactico.py',163),
  ('nombreFuncionesS -> SIZE','nombreFuncionesS',1,'p_nombreFuncionesS','Sintactico.py',164),
  ('estructuraHash -> LLAVE_I cuerpoH LLAVE_D','estructuraHash',3,'p_estructuraHash','Sintactico.py',169),
  ('cuerpoH -> CADENA ASIGNACION valorTodos','cuerpoH',3,'p_cuerpoH','Sintactico.py',172),
  ('cuerpoH -> cuerpoH COMA CADENA ASIGNACION valorTodos','cuerpoH',5,'p_cuerpoH','Sintactico.py',173),
  ('estructuraFunciones -> DEF funcionSinAtributos END','estructuraFunciones',3,'p_estructuraFunciones','Sintactico.py',180),
  ('estructuraFunciones -> DEF funcionConAtributos END','estructuraFunciones',3,'p_estructuraFunciones','Sintactico.py',181),
  ('estructuraFunciones -> DEF funcionConDefectos END','estructuraFunciones',3,'p_estructuraFunciones','Sintactico.py',182),
  ('funcionSinAtributos -> NOMBRE_FUNCION PAR_I PAR_D cuerpo','funcionSinAtributos',4,'p_funcionSinAtributos','Sintactico.py',186),
  ('funcionConAtributos -> NOMBRE_FUNCION PAR_I parametrosFunciones PAR_D cuerpo','funcionConAtributos',5,'p_funcionConAtributos','Sintactico.py',190),
  ('parametrosFunciones -> TiposNomVariables','parametrosFunciones',1,'p_parametrosFunciones','Sintactico.py',194),
  ('parametrosFunciones -> TiposNomVariables COMA parametrosFunciones','parametrosFunciones',3,'p_parametrosFunciones','Sintactico.py',195),
  ('llamadoFunciones -> NOMBRE_FUNCION PAR_I PAR_D','llamadoFunciones',3,'p_llamadoFunciones','Sintactico.py',198),
  ('llamadoFunciones -> NOMBRE_FUNCION PAR_I parametrosFunciones PAR_D','llamadoFunciones',4,'p_llamadoFunciones','Sintactico.py',199),
  ('funcionConDefectos -> NOMBRE_FUNCION PAR_I parametrosFuncionesDefecto PAR_D cuerpo','funcionConDefectos',5,'p_funcionConDefectos','Sintactico.py',203),
  ('parametrosFuncionesDefecto -> NOMBRE_VARIABLE IGUAL valorF','parametrosFuncionesDefecto',3,'p_parametrosFuncionesDefecto','Sintactico.py',206),
  ('parametrosFuncionesDefecto -> NOMBRE_VARIABLE IGUAL valorF COMA parametrosFuncionesDefecto','parametrosFuncionesDefecto',5,'p_parametrosFuncionesDefecto','Sintactico.py',207),
  ('valorF -> ENTERO','valorF',1,'p_valorF','Sintactico.py',212),
  ('valorF -> FLOTANTE','valorF',1,'p_valorF','Sintactico.py',213),
  ('valorF -> CADENA','valorF',1,'p_valorF','Sintactico.py',214),
  ('valorF -> TRUE','valorF',1,'p_valorF','Sintactico.py',215),
  ('valorF -> FALSE','valorF',1,'p_valorF','Sintactico.py',216),
  ('estructuraSalida -> operadoresSalidas cuerpoSalida','estructuraSalida',2,'p_estructuraSalida','Sintactico.py',221),
  ('estructuraSalida -> operadoresSalidas PAR_I cuerpoSalida PAR_D','estructuraSalida',4,'p_estructuraSalida','Sintactico.py',222),
  ('operadoresSalidas -> PUTS','operadoresSalidas',1,'p_operadoresSalidas','Sintactico.py',225),
  ('operadoresSalidas -> PRINT','operadoresSalidas',1,'p_operadoresSalidas','Sintactico.py',226),
  ('cuerpoSalida -> variablesTotales','cuerpoSalida',1,'p_cuerpoSalida','Sintactico.py',230),
  ('cuerpoSalida -> CADENA MAS TiposNomVariables','cuerpoSalida',3,'p_cuerpoSalida','Sintactico.py',231),
  ('cuerpoSalida -> operacion','cuerpoSalida',1,'p_cuerpoSalida','Sintactico.py',232),
  ('estructuraEntrada -> GETS PUNTO CHOMP','estructuraEntrada',3,'p_estructuraEntrada','Sintactico.py',235),
  ('limpiarDatos -> STDOUT PUNTO FLUSH','limpiarDatos',3,'p_limpiarDatos','Sintactico.py',238),
  ('castingString -> ENTERO PUNTO TOSTRING','castingString',3,'p_castingString','Sintactico.py',243),
  ('castingString -> FLOTANTE PUNTO TOSTRING','castingString',3,'p_castingString','Sintactico.py',244),
  ('castingString -> STRING PAR_I ENTERO PAR_D','castingString',4,'p_castingString','Sintactico.py',245),
  ('castingString -> STRING PAR_I FLOTANTE PAR_D','castingString',4,'p_castingString','Sintactico.py',246),
  ('castingString -> CADENA PUNTO TOINTEGER','castingString',3,'p_castingInteger','Sintactico.py',250),
  ('castingString -> FLOTANTE PUNTO TOINTEGER','castingString',3,'p_castingInteger','Sintactico.py',251),
  ('castingString -> INTEGER PAR_I CADENA PAR_D','castingString',4,'p_castingInteger','Sintactico.py',252),
  ('castingString -> INTEGER PAR_I FLOTANTE PAR_D','castingString',4,'p_castingInteger','Sintactico.py',253),
  ('castingString -> ENTERO PUNTO TOFLOAT','castingString',3,'p_castingFloat','Sintactico.py',257),
  ('castingString -> CADENA PUNTO TOFLOAT','castingString',3,'p_castingFloat','Sintactico.py',258),
  ('castingString -> FLOAT PAR_I ENTERO PAR_D','castingString',4,'p_castingFloat','Sintactico.py',259),
  ('castingString -> FLOAT PAR_I CADENA PAR_D','castingString',4,'p_castingFloat','Sintactico.py',260),
  ('estructuraLeerArchivo -> FILE PUNTO READ PAR_I TiposNomVariables PAR_D','estructuraLeerArchivo',6,'p_estructuraLeerArchivo','Sintactico.py',265),
  ('estructuraLeerArchivo -> FILE PUNTO READ PAR_I CADENA PAR_D','estructuraLeerArchivo',6,'p_estructuraLeerArchivo','Sintactico.py',266),
  ('estructuraLeerArchivoLinea -> FILE PUNTO READLINES PAR_I TiposNomVariables PAR_D','estructuraLeerArchivoLinea',6,'p_estructuraLeerArchivoLinea','Sintactico.py',270),
  ('estructuraLeerArchivoLinea -> FILE PUNTO READLINES PAR_I CADENA PAR_D','estructuraLeerArchivoLinea',6,'p_estructuraLeerArchivoLinea','Sintactico.py',271),
  ('estructuraAbrirArchivo -> FILE PUNTO OPEN PAR_I TiposNomVariables COMA MODOAPERTURA PAR_D','estructuraAbrirArchivo',8,'p_estructuraAbrirArchivo','Sintactico.py',274),
  ('estructuraAbrirArchivo -> FILE PUNTO OPEN PAR_I CADENA COMA MODOAPERTURA PAR_D','estructuraAbrirArchivo',8,'p_estructuraAbrirArchivo','Sintactico.py',275),
  ('estructuraRecorrerArchivo -> variablesRecorrer PUNTO EACH DO PIPE NOMBRE_VARIABLE PIPE cuerpo END','estructuraRecorrerArchivo',9,'p_estructuraRecorrerArchivo','Sintactico.py',280),
  ('estructuraRecorrerArchivo -> estructuraAbrirArchivo DO PIPE NOMBRE_VARIABLE PIPE cuerpo END','estructuraRecorrerArchivo',7,'p_estructuraRecorrerArchivo','Sintactico.py',281),
  ('estructuraSplit -> TiposNomVariables PUNTO SPLIT PAR_I CADENA PAR_D','estructuraSplit',6,'p_estructuraSplit','Sintactico.py',285),
  ('variablesRecorrer -> TiposNomVariables','variablesRecorrer',1,'p_variablesRecorrer','Sintactico.py',288),
  ('variablesRecorrer -> estructuraLeerArchivoLinea','variablesRecorrer',1,'p_variablesRecorrer','Sintactico.py',289),
  ('variablesRecorrer -> estructuraSplit','variablesRecorrer',1,'p_variablesRecorrer','Sintactico.py',290),
  ('estructuraEscribirArchivo -> FILE PUNTO WRITE PAR_I TiposNomVariables COMA TiposNomVariables PAR_D','estructuraEscribirArchivo',8,'p_estructuraEscribirArchivo','Sintactico.py',294),
  ('estructuraEscribirArchivo -> FILE PUNTO WRITE PAR_I TiposNomVariables COMA CADENA PAR_D','estructuraEscribirArchivo',8,'p_estructuraEscribirArchivo','Sintactico.py',295),
  ('estructuraEscribirArchivo -> FILE PUNTO WRITE PAR_I CADENA COMA CADENA PAR_D','estructuraEscribirArchivo',8,'p_estructuraEscribirArchivo','Sintactico.py',296),
  ('estructuraEscribirArchivo -> FILE PUNTO WRITE PAR_I CADENA COMA TiposNomVariables PAR_D','estructuraEscribirArchivo',8,'p_estructuraEscribirArchivo','Sintactico.py',297),
  ('estructuraEscribirArchivo -> NOMBRE_VARIABLE PUNTO WRITE PAR_I CADENA PAR_D','estructuraEscribirArchivo',6,'p_estructuraEscribirArchivo','Sintactico.py',298),
  ('variablesTotales -> variables','variablesTotales',1,'p_variablesTotales','Sintactico.py',302),
  ('variablesTotales -> boleanos','variablesTotales',1,'p_variablesTotales','Sintactico.py',303),
  ('variables -> CADENA','variables',1,'p_variables','Sintactico.py',307),
  ('variables -> numericos','variables',1,'p_variables','Sintactico.py',308),
  ('variables -> TiposNomVariables','variables',1,'p_variables','Sintactico.py',309),
  ('TiposNomVariables -> NOMBRE_VARIABLE','TiposNomVariables',1,'p_TiposNomVariables','Sintactico.py',314),
  ('TiposNomVariables -> VARIABLE_GLOBAL','TiposNomVariables',1,'p_TiposNomVariables','Sintactico.py',315),
  ('TiposNomVariables -> VARIABLE_INSTANCIA','TiposNomVariables',1,'p_TiposNomVariables','Sintactico.py',316),
  ('TiposNomVariables -> VARIABLE_CLASE','TiposNomVariables',1,'p_TiposNomVariables','Sintactico.py',317),
  ('boleanos -> TRUE','boleanos',1,'p_boleanos','Sintactico.py',320),
  ('boleanos -> FALSE','boleanos',1,'p_boleanos','Sintactico.py',321),
  ('numericos -> ENTERO','numericos',1,'p_numericos','Sintactico.py',324),
  ('numericos -> FLOTANTE','numericos',1,'p_numericos','Sintactico.py',325),
  ('estructuraClase -> CLASS NOMBRE_CLASE','estructuraClase',2,'p_estructuraClase','Sintactico.py',328),
]
