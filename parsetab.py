
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALIAS AND ARRAY ASIGNACION BACKS BREAK CADENA CASE CHOMP CLASS CLEAR COMA CORCHETE_D CORCHETE_I DEF DEFAULT DEFINED DELETE DICCIONARIO DIV DIVISION_IGUAL DO DOBLE_IGUAL EACH ELSE ELSEIF EMPTY END ENSURE ENTERO EXPONENCIAL_IGUAL FALSE FILE FLOAT FLOTANTE FLUSH FOR GETS HASH HAS_KEY HAS_VALUE IF IGUAL IN INSERT INTEGER INTERROGACION INTERVALO KEY KEYS LENGTH LINE LLAVE_D LLAVE_I MAS MAS_IGUAL MAYOR_IGUAL MAYOR_QUE MENOR_IGUAL MENOR_QUE MENOS MODULE MODULO MODULO_IGUAL MULTIPLICACION MULTIPLICACION_IGUAL NEW NEXT NIL NOMBRE_CLASE NOMBRE_FUNCION NOMBRE_VARIABLE NOT NO_IGUAL OPEN OR PAR_D PAR_I PIPE POTENCIA PRINT PUNTO PUSH PUTS READ READLINES REDO RESCUE RESTA_IGUAL RETRY RETURN SELF SIZE SPLIT STDOUT STRING SUPER THEN TOFLOAT TOINTEGER TOSTRING TRUE UNDEF UNLEES UNTIL VAL VALUES VARIABLE_CLASE VARIABLE_GLOBAL VARIABLE_INSTANCIA VFILE WHEN WHILE WRITE YIELDinstrucciones : variablesTotales\n                   | estructuraAsignacion\n                   | estructuraComparacion\n                   | estructurasControl\n                   | estructuraArray\n                   | funcionesArreglo\n                   | funcionesString\n                   | estructuraHash\n                   | estructuraFunciones\n                   | operacion\n                   | estructuraSalida\n                   | estructuraCasting\n                   | limpiarDatos\n                   | estructuraEscribirArchivo\n                   | estructuraClase\n                   | estructuraRecorrerArchivo\n                   | metodosHash\n                cuerpo : variablesTotales\n              | estructuraAsignacion\n              | estructuraComparacion\n              | estructurasControl\n              | estructuraArray\n              | funcionesArreglo\n              | funcionesString\n              | estructuraHash\n              | estructuraFunciones\n              | llamadoFunciones\n              | operacion\n              | estructuraSalida\n              | estructuraCasting\n              | limpiarDatos\n              | estructuraEscribirArchivo\n              | estructuraRecorrerArchivo\n    variablesTotales : variables \n                        | boleanos\n    variables : CADENA\n               | numericos\n               | TiposNomVariables\n  TiposNomVariables : NOMBRE_VARIABLE\n                       | VARIABLE_GLOBAL\n                       | VARIABLE_INSTANCIA\n                       | VARIABLE_CLASE boleanos : TRUE \n                | FALSE\n    numericos : ENTERO \n                 | FLOTANTE\n    estructuraClase : CLASS NOMBRE_CLASEvalorTodos : variablesTotales\n                | estructuraHash\n                | estructuraArray\n  estructuraAsignacion : TiposNomVariables tipoAsignacion variables\n                          | TiposNomVariables IGUAL variablesTotales\n                          | TiposNomVariables IGUAL operacion\n                          | TiposNomVariables IGUAL estructuraComparacion\n                          | TiposNomVariables IGUAL estructuraArray\n                          | TiposNomVariables IGUAL estructuraHash\n                          | TiposNomVariables IGUAL llamadoFunciones\n                          | TiposNomVariables IGUAL estructuraCasting\n                          | TiposNomVariables IGUAL estructuraEntrada\n                          | TiposNomVariables IGUAL estructuraLeerArchivo\n                          | TiposNomVariables IGUAL estructuraLeerArchivoLinea\n                          | TiposNomVariables IGUAL estructuraAbrirArchivo\n                          | TiposNomVariables IGUAL estructuraSplit\n  tipoAsignacion : MAS_IGUAL\n                    | RESTA_IGUAL\n                    | MULTIPLICACION_IGUAL\n                    | DIVISION_IGUAL\n                    | MODULO_IGUAL\n                    | EXPONENCIAL_IGUAL\n                 operacion : variablesoperacion operador variablesoperacion\n                | PAR_I variablesoperacion operador variablesoperacion PAR_D\n                | variablesoperacion operador variablesoperacion operador operacion\n                | PAR_I variablesoperacion operador variablesoperacion PAR_D operador operacion\n   variablesoperacion : numericos\n                         | TiposNomVariables\n  operador : MAS\n              | MENOS\n              | MULTIPLICACION\n              | POTENCIA\n              | DIV\n              | MODULO\n  estructuraComparacion : variablesTotales comparador variablesTotales\n                           | NOT variablesTotales comparador variablesTotales\n                           | NOT variables\n                           | NOT boleanos\n                           | variablesTotales comparador variablesTotales operadoresComparacion estructuraComparacion\n                           comparador : MENOR_QUE\n                | MAYOR_QUE\n                | MAYOR_IGUAL\n                | DOBLE_IGUAL\n                | MENOR_IGUAL\n                | NO_IGUAL\n  operadoresComparacion : AND\n                           | OR\n  estructurasControl : estructuraIf\n                        | estructuraUntil\n                        | estructuraCase\n   estructuraIf : IF PAR_I estructuraComparacion PAR_D cuerpo END\n                  | IF estructuraComparacion cuerpo END\n                  | IF PAR_I estructuraComparacion PAR_D cuerpo estructuraElse END\n                  | IF estructuraComparacion cuerpo estructuraElse END\n  estructuraUntil : UNTIL PAR_I estructuraComparacion PAR_D cuerpo END\n                     | UNTIL estructuraComparacion cuerpo END\n  estructuraElse : ELSE cuerpoestructuraCase : CASE NOMBRE_VARIABLE estructuraWhenI ENDestructuraWhenI : estructuraWhen estructuraElseestructuraWhen : WHEN sentenciaWhen cuerpo\n                    | estructuraWhen WHEN sentenciaWhen cuerpo\n   sentenciaWhen : estructuraComparacion\n                    | intervaloW\n  intervaloW : ENTERO INTERVALO ENTERO estructuraArray : CORCHETE_I CORCHETE_D\n                     | ARRAY PUNTO NEW\n                     | CORCHETE_I parametrosA CORCHETE_D\n                parametrosA : variablesTotales\n                 | variablesTotales COMA parametrosA\n  funcionesArreglo : TiposNomVariables PUNTO nombreFuncionesA\n                      | estructuraArray PUNTO nombreFuncionesA\n  nombreFuncionesA : PUSH PAR_I variablesTotales PAR_D\n                      | DELETE PAR_I ENTERO PAR_D\n  funcionesString : TiposNomVariables PUNTO nombreFuncionesS\n                     | CADENA PUNTO nombreFuncionesS\n  nombreFuncionesS : INSERT PAR_I ENTERO COMA CADENA PAR_D\n                      | INSERT PAR_I ENTERO COMA TiposNomVariables PAR_D\n                      | INSERT PAR_I TiposNomVariables COMA CADENA PAR_D\n                      | INSERT PAR_I TiposNomVariables COMA TiposNomVariables PAR_D\n                      | SIZE PAR_I  PAR_D\n                      | SIZE\n  estructuraHash : LLAVE_I cuerpoH LLAVE_DcuerpoH : CADENA ASIGNACION valorTodos\n             | cuerpoH COMA CADENA ASIGNACION valorTodos\n  metodosHash : TiposNomVariables PUNTO HAS_VALUE INTERROGACION PAR_I valorTodos PAR_D\n                         | TiposNomVariables PUNTO HAS_KEY INTERROGACION PAR_I CADENA PAR_D\n                         | TiposNomVariables PUNTO EMPTY INTERROGACION\n                         | TiposNomVariables PUNTO CLEAR\n                         | TiposNomVariables PUNTO KEYS\n                         | TiposNomVariables PUNTO LENGTH\n                         | TiposNomVariables PUNTO VALUES\n                         | TiposNomVariables PUNTO KEY PAR_I valorTodos PAR_D\n                         | TiposNomVariables PUNTO DELETE PAR_I CADENA PAR_D\n                         | TiposNomVariables PUNTO DEFAULT IGUAL valorF\n\n  estructuraFunciones : DEF funcionSinAtributos END\n                         | DEF funcionConAtributos END\n                         | DEF funcionConDefectos END\n  funcionSinAtributos : NOMBRE_FUNCION PAR_I PAR_D cuerpo\n  funcionConAtributos : NOMBRE_FUNCION PAR_I parametrosFunciones PAR_D cuerpo\n  parametrosFunciones : NOMBRE_VARIABLE\n                         | NOMBRE_VARIABLE COMA parametrosFunciones\n  llamadoFunciones : NOMBRE_FUNCION PAR_I PAR_D \n                      | NOMBRE_FUNCION PAR_I parametrosA PAR_D\n  funcionConDefectos : NOMBRE_FUNCION PAR_I parametrosFuncionesDefecto PAR_D cuerpoparametrosFuncionesDefecto : NOMBRE_VARIABLE IGUAL valorF\n                                | NOMBRE_VARIABLE IGUAL valorF COMA parametrosFuncionesDefecto \n                                \n  valorF : ENTERO\n            | FLOTANTE\n            | CADENA\n            | TRUE\n            | FALSE\n  estructuraSalida : operadoresSalidas cuerpoSalida\n                      | operadoresSalidas PAR_I cuerpoSalida PAR_D\n                operadoresSalidas : PUTS\n                       | PRINT \n                cuerpoSalida : variablesTotales\n                  | CADENA MAS TiposNomVariables\n                  | operacion\n  estructuraEntrada : GETS PUNTO CHOMP\n                limpiarDatos : STDOUT PUNTO FLUSH\n                 estructuraCasting : castingString\n                        | castingInteger\n                        | castingFloat\n   castingString : ENTERO PUNTO TOSTRING\n                    | FLOTANTE PUNTO TOSTRING\n                    | STRING PAR_I ENTERO PAR_D\n                    | STRING PAR_I FLOTANTE PAR_D\n   castingInteger : CADENA PUNTO TOINTEGER\n                    | FLOTANTE PUNTO TOINTEGER\n                    | INTEGER PAR_I CADENA PAR_D\n                    | INTEGER PAR_I FLOTANTE PAR_D\n   castingFloat : ENTERO PUNTO TOFLOAT\n                    | CADENA PUNTO TOFLOAT\n                    | FLOAT PAR_I ENTERO PAR_D\n                    | FLOAT PAR_I CADENA PAR_D\n  estructuraLeerArchivo : FILE PUNTO READ PAR_I TiposNomVariables PAR_D\n                             | FILE PUNTO READ PAR_I CADENA PAR_D\n    estructuraLeerArchivoLinea : FILE PUNTO READLINES PAR_I TiposNomVariables PAR_D\n                                  | FILE PUNTO READLINES PAR_I CADENA PAR_D\n    estructuraAbrirArchivo : FILE PUNTO OPEN PAR_I TiposNomVariables COMA CADENA PAR_D\n                              | FILE PUNTO OPEN PAR_I CADENA COMA CADENA PAR_D\n  estructuraRecorrerArchivo : variablesRecorrer PUNTO EACH DO PIPE NOMBRE_VARIABLE PIPE cuerpo END\n                                 | TiposNomVariables PUNTO EACH DO PIPE NOMBRE_VARIABLE PIPE cuerpo END\n                                 | estructuraAbrirArchivo DO PIPE NOMBRE_VARIABLE PIPE cuerpo END\n    estructuraSplit : TiposNomVariables PUNTO SPLIT PAR_I CADENA PAR_D\n                       | estructuraLeerArchivo PUNTO SPLIT PAR_I CADENA PAR_DvariablesRecorrer : estructuraLeerArchivoLinea\n                         | estructuraSplit\n    estructuraEscribirArchivo : FILE PUNTO WRITE PAR_I TiposNomVariables COMA TiposNomVariables PAR_D\n                                 | FILE PUNTO WRITE PAR_I TiposNomVariables COMA CADENA PAR_D\n                                 | FILE PUNTO WRITE PAR_I CADENA COMA CADENA PAR_D\n                                 | FILE PUNTO WRITE PAR_I CADENA COMA TiposNomVariables PAR_D\n                                 | TiposNomVariables PUNTO WRITE PAR_I CADENA PAR_D\n    '
    
_lr_action_items = {'NOT':([0,19,20,45,47,48,49,50,51,52,53,71,82,83,84,85,86,87,88,120,121,123,124,131,222,233,234,235,256,263,277,280,282,286,287,288,289,297,320,323,324,343,380,381,397,],[26,-34,-35,-39,-43,-44,-40,-41,-42,26,26,26,-84,-85,-36,-37,-38,-45,-46,26,26,26,26,-82,26,26,-93,-94,-83,26,26,26,26,26,26,-109,-110,-86,26,26,26,26,-111,26,26,]),'CORCHETE_I':([0,19,20,45,47,48,49,50,51,71,82,83,84,85,86,87,88,121,124,131,181,248,256,263,277,280,282,287,288,289,297,305,320,321,323,324,343,380,381,397,],[30,-34,-35,-39,-43,-44,-40,-41,-42,30,-84,-85,-36,-37,-38,-45,-46,30,30,-82,30,30,-83,30,30,30,30,30,-109,-110,-86,30,30,30,30,30,30,-111,30,30,]),'ARRAY':([0,19,20,45,47,48,49,50,51,71,82,83,84,85,86,87,88,121,124,131,181,248,256,263,277,280,282,287,288,289,297,305,320,321,323,324,343,380,381,397,],[31,-34,-35,-39,-43,-44,-40,-41,-42,31,-84,-85,-36,-37,-38,-45,-46,31,31,-82,31,31,-83,31,31,31,31,31,-109,-110,-86,31,31,31,31,31,31,-111,31,31,]),'CADENA':([0,19,20,26,30,33,37,45,47,48,49,50,51,52,53,55,56,62,63,64,65,66,67,68,70,71,73,74,75,76,77,78,82,83,84,85,86,87,88,111,120,121,123,124,129,130,131,172,174,180,181,222,233,234,235,236,239,243,248,249,250,251,254,256,263,272,273,274,275,277,280,282,286,287,288,289,297,305,306,320,321,323,324,326,343,356,357,367,368,369,370,380,381,397,],[32,-34,-35,84,84,95,113,-39,-43,-44,-40,-41,-42,84,84,-161,-162,84,-87,-88,-89,-90,-91,-92,84,152,-64,-65,-66,-67,-68,-69,-84,-85,-36,-37,-38,-45,-46,113,84,32,84,32,229,232,-82,84,84,258,84,84,84,-93,-94,84,84,303,84,308,312,315,319,-83,32,331,333,335,337,32,32,32,84,32,-109,-110,-86,84,352,32,84,32,32,312,32,384,387,392,393,395,396,-111,32,32,]),'LLAVE_I':([0,19,20,45,47,48,49,50,51,71,82,83,84,85,86,87,88,121,124,131,181,248,256,263,277,280,282,287,288,289,297,305,320,321,323,324,343,380,381,397,],[33,-34,-35,-39,-43,-44,-40,-41,-42,33,-84,-85,-36,-37,-38,-45,-46,33,33,-82,33,33,-83,33,33,33,33,33,-109,-110,-86,33,33,33,33,33,33,-111,33,33,]),'DEF':([0,19,20,45,47,48,49,50,51,82,83,84,85,86,87,88,121,124,131,256,263,277,280,282,287,288,289,297,320,323,324,343,380,381,397,],[34,-34,-35,-39,-43,-44,-40,-41,-42,-84,-85,-36,-37,-38,-45,-46,34,34,-82,-83,34,34,34,34,34,-109,-110,-86,34,34,34,34,-111,34,34,]),'PAR_I':([0,19,20,37,45,47,48,49,50,51,52,53,55,56,59,60,61,71,82,83,84,85,86,87,88,99,101,102,103,104,105,106,111,121,124,131,133,134,149,155,164,165,167,168,169,170,194,195,196,197,245,246,256,263,267,277,280,282,287,288,289,297,320,323,324,343,366,380,381,397,],[36,-34,-35,111,-39,-43,-44,-40,-41,-42,120,123,-161,-162,128,129,130,36,-84,-85,-36,-37,-38,-45,-46,185,-76,-77,-78,-79,-80,-81,36,36,36,-82,236,237,239,243,248,249,251,252,253,254,272,273,274,275,305,306,-83,36,36,36,36,36,36,-109,-110,-86,36,36,36,36,36,-111,36,36,]),'STDOUT':([0,19,20,45,47,48,49,50,51,82,83,84,85,86,87,88,121,124,131,256,263,277,280,282,287,288,289,297,320,323,324,343,380,381,397,],[41,-34,-35,-39,-43,-44,-40,-41,-42,-84,-85,-36,-37,-38,-45,-46,41,41,-82,-83,41,41,41,41,41,-109,-110,-86,41,41,41,41,-111,41,41,]),'FILE':([0,19,20,45,47,48,49,50,51,71,82,83,84,85,86,87,88,121,124,131,256,263,277,280,282,287,288,289,297,320,323,324,343,380,381,397,],[42,-34,-35,-39,-43,-44,-40,-41,-42,151,-84,-85,-36,-37,-38,-45,-46,42,42,-82,-83,42,42,42,42,42,-109,-110,-86,42,42,42,42,-111,42,42,]),'CLASS':([0,],[43,]),'TRUE':([0,19,20,26,30,37,45,47,48,49,50,51,52,53,55,56,62,63,64,65,66,67,68,71,82,83,84,85,86,87,88,111,120,121,123,124,131,172,174,181,222,233,234,235,236,239,248,250,256,263,277,280,282,286,287,288,289,297,305,320,321,323,324,326,343,380,381,397,],[47,-34,-35,47,47,47,-39,-43,-44,-40,-41,-42,47,47,-161,-162,47,-87,-88,-89,-90,-91,-92,47,-84,-85,-36,-37,-38,-45,-46,47,47,47,47,47,-82,47,47,47,47,47,-93,-94,47,47,47,313,-83,47,47,47,47,47,47,-109,-110,-86,47,47,47,47,47,313,47,-111,47,47,]),'FALSE':([0,19,20,26,30,37,45,47,48,49,50,51,52,53,55,56,62,63,64,65,66,67,68,71,82,83,84,85,86,87,88,111,120,121,123,124,131,172,174,181,222,233,234,235,236,239,248,250,256,263,277,280,282,286,287,288,289,297,305,320,321,323,324,326,343,380,381,397,],[48,-34,-35,48,48,48,-39,-43,-44,-40,-41,-42,48,48,-161,-162,48,-87,-88,-89,-90,-91,-92,48,-84,-85,-36,-37,-38,-45,-46,48,48,48,48,48,-82,48,48,48,48,48,-93,-94,48,48,48,314,-83,48,48,48,48,48,48,-109,-110,-86,48,48,48,48,48,314,48,-111,48,48,]),'NOMBRE_VARIABLE':([0,19,20,26,30,36,37,45,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,70,71,73,74,75,76,77,78,82,83,84,85,86,87,88,100,101,102,103,104,105,106,111,120,121,123,124,131,171,172,174,181,185,187,192,222,233,234,235,236,239,248,252,256,263,267,270,272,273,274,275,277,280,282,286,287,288,289,297,304,305,320,321,323,324,325,338,343,356,357,366,367,368,380,381,389,397,],[45,-34,-35,45,45,45,45,-39,-43,-44,-40,-41,-42,45,45,125,-161,-162,45,-87,-88,-89,-90,-91,-92,45,45,-64,-65,-66,-67,-68,-69,-84,-85,-36,-37,-38,-45,-46,45,-76,-77,-78,-79,-80,-81,45,45,45,45,45,-82,255,45,45,45,266,45,45,45,45,-93,-94,45,45,45,45,-83,45,45,45,45,45,45,45,45,45,45,45,45,-109,-110,-86,350,45,45,45,45,45,363,375,45,45,45,45,45,45,-111,45,404,45,]),'VARIABLE_GLOBAL':([0,19,20,26,30,36,37,45,47,48,49,50,51,52,53,55,56,62,63,64,65,66,67,68,70,71,73,74,75,76,77,78,82,83,84,85,86,87,88,100,101,102,103,104,105,106,111,120,121,123,124,131,172,174,181,187,192,222,233,234,235,236,239,248,252,256,263,267,270,272,273,274,275,277,280,282,286,287,288,289,297,305,320,321,323,324,343,356,357,366,367,368,380,381,397,],[49,-34,-35,49,49,49,49,-39,-43,-44,-40,-41,-42,49,49,-161,-162,49,-87,-88,-89,-90,-91,-92,49,49,-64,-65,-66,-67,-68,-69,-84,-85,-36,-37,-38,-45,-46,49,-76,-77,-78,-79,-80,-81,49,49,49,49,49,-82,49,49,49,49,49,49,49,-93,-94,49,49,49,49,-83,49,49,49,49,49,49,49,49,49,49,49,49,-109,-110,-86,49,49,49,49,49,49,49,49,49,49,49,-111,49,49,]),'VARIABLE_INSTANCIA':([0,19,20,26,30,36,37,45,47,48,49,50,51,52,53,55,56,62,63,64,65,66,67,68,70,71,73,74,75,76,77,78,82,83,84,85,86,87,88,100,101,102,103,104,105,106,111,120,121,123,124,131,172,174,181,187,192,222,233,234,235,236,239,248,252,256,263,267,270,272,273,274,275,277,280,282,286,287,288,289,297,305,320,321,323,324,343,356,357,366,367,368,380,381,397,],[50,-34,-35,50,50,50,50,-39,-43,-44,-40,-41,-42,50,50,-161,-162,50,-87,-88,-89,-90,-91,-92,50,50,-64,-65,-66,-67,-68,-69,-84,-85,-36,-37,-38,-45,-46,50,-76,-77,-78,-79,-80,-81,50,50,50,50,50,-82,50,50,50,50,50,50,50,-93,-94,50,50,50,50,-83,50,50,50,50,50,50,50,50,50,50,50,50,-109,-110,-86,50,50,50,50,50,50,50,50,50,50,50,-111,50,50,]),'VARIABLE_CLASE':([0,19,20,26,30,36,37,45,47,48,49,50,51,52,53,55,56,62,63,64,65,66,67,68,70,71,73,74,75,76,77,78,82,83,84,85,86,87,88,100,101,102,103,104,105,106,111,120,121,123,124,131,172,174,181,187,192,222,233,234,235,236,239,248,252,256,263,267,270,272,273,274,275,277,280,282,286,287,288,289,297,305,320,321,323,324,343,356,357,366,367,368,380,381,397,],[51,-34,-35,51,51,51,51,-39,-43,-44,-40,-41,-42,51,51,-161,-162,51,-87,-88,-89,-90,-91,-92,51,51,-64,-65,-66,-67,-68,-69,-84,-85,-36,-37,-38,-45,-46,51,-76,-77,-78,-79,-80,-81,51,51,51,51,51,-82,51,51,51,51,51,51,51,-93,-94,51,51,51,51,-83,51,51,51,51,51,51,51,51,51,51,51,51,-109,-110,-86,51,51,51,51,51,51,51,51,51,51,51,-111,51,51,]),'IF':([0,19,20,45,47,48,49,50,51,82,83,84,85,86,87,88,121,124,131,256,263,277,280,282,287,288,289,297,320,323,324,343,380,381,397,],[52,-34,-35,-39,-43,-44,-40,-41,-42,-84,-85,-36,-37,-38,-45,-46,52,52,-82,-83,52,52,52,52,52,-109,-110,-86,52,52,52,52,-111,52,52,]),'UNTIL':([0,19,20,45,47,48,49,50,51,82,83,84,85,86,87,88,121,124,131,256,263,277,280,282,287,288,289,297,320,323,324,343,380,381,397,],[53,-34,-35,-39,-43,-44,-40,-41,-42,-84,-85,-36,-37,-38,-45,-46,53,53,-82,-83,53,53,53,53,53,-109,-110,-86,53,53,53,53,-111,53,53,]),'CASE':([0,19,20,45,47,48,49,50,51,82,83,84,85,86,87,88,121,124,131,256,263,277,280,282,287,288,289,297,320,323,324,343,380,381,397,],[54,-34,-35,-39,-43,-44,-40,-41,-42,-84,-85,-36,-37,-38,-45,-46,54,54,-82,-83,54,54,54,54,54,-109,-110,-86,54,54,54,54,-111,54,54,]),'PUTS':([0,19,20,45,47,48,49,50,51,82,83,84,85,86,87,88,121,124,131,256,263,277,280,282,287,288,289,297,320,323,324,343,380,381,397,],[55,-34,-35,-39,-43,-44,-40,-41,-42,-84,-85,-36,-37,-38,-45,-46,55,55,-82,-83,55,55,55,55,55,-109,-110,-86,55,55,55,55,-111,55,55,]),'PRINT':([0,19,20,45,47,48,49,50,51,82,83,84,85,86,87,88,121,124,131,256,263,277,280,282,287,288,289,297,320,323,324,343,380,381,397,],[56,-34,-35,-39,-43,-44,-40,-41,-42,-84,-85,-36,-37,-38,-45,-46,56,56,-82,-83,56,56,56,56,56,-109,-110,-86,56,56,56,56,-111,56,56,]),'ENTERO':([0,19,20,26,30,36,37,45,47,48,49,50,51,52,53,55,56,62,63,64,65,66,67,68,70,71,73,74,75,76,77,78,82,83,84,85,86,87,88,100,101,102,103,104,105,106,111,120,121,123,124,128,130,131,172,174,181,187,222,233,234,235,236,237,239,248,249,250,252,256,263,267,270,277,280,282,286,287,288,289,297,305,320,321,323,324,326,343,345,366,380,381,397,],[57,-34,-35,87,87,87,87,-39,-43,-44,-40,-41,-42,87,87,-161,-162,87,-87,-88,-89,-90,-91,-92,87,57,-64,-65,-66,-67,-68,-69,-84,-85,-36,-37,-38,-45,-46,87,-76,-77,-78,-79,-80,-81,87,87,57,87,57,227,231,-82,87,87,87,87,290,87,-93,-94,87,299,87,87,299,310,316,-83,57,87,87,57,57,57,290,57,-109,-110,-86,87,57,87,57,57,310,57,380,87,-111,57,57,]),'FLOTANTE':([0,19,20,26,30,36,37,45,47,48,49,50,51,52,53,55,56,62,63,64,65,66,67,68,70,71,73,74,75,76,77,78,82,83,84,85,86,87,88,100,101,102,103,104,105,106,111,120,121,123,124,128,129,131,172,174,181,187,222,233,234,235,236,239,248,250,256,263,267,270,277,280,282,286,287,288,289,297,305,320,321,323,324,326,343,366,380,381,397,],[58,-34,-35,88,88,88,88,-39,-43,-44,-40,-41,-42,88,88,-161,-162,88,-87,-88,-89,-90,-91,-92,88,58,-64,-65,-66,-67,-68,-69,-84,-85,-36,-37,-38,-45,-46,88,-76,-77,-78,-79,-80,-81,88,88,58,88,58,228,230,-82,88,88,88,88,88,88,-93,-94,88,88,88,311,-83,58,88,88,58,58,58,88,58,-109,-110,-86,88,58,88,58,58,311,58,88,-111,58,58,]),'STRING':([0,19,20,45,47,48,49,50,51,71,82,83,84,85,86,87,88,121,124,131,256,263,277,280,282,287,288,289,297,320,323,324,343,380,381,397,],[59,-34,-35,-39,-43,-44,-40,-41,-42,59,-84,-85,-36,-37,-38,-45,-46,59,59,-82,-83,59,59,59,59,59,-109,-110,-86,59,59,59,59,-111,59,59,]),'INTEGER':([0,19,20,45,47,48,49,50,51,71,82,83,84,85,86,87,88,121,124,131,256,263,277,280,282,287,288,289,297,320,323,324,343,380,381,397,],[60,-34,-35,-39,-43,-44,-40,-41,-42,60,-84,-85,-36,-37,-38,-45,-46,60,60,-82,-83,60,60,60,60,60,-109,-110,-86,60,60,60,60,-111,60,60,]),'FLOAT':([0,19,20,45,47,48,49,50,51,71,82,83,84,85,86,87,88,121,124,131,256,263,277,280,282,287,288,289,297,320,323,324,343,380,381,397,],[61,-34,-35,-39,-43,-44,-40,-41,-42,61,-84,-85,-36,-37,-38,-45,-46,61,61,-82,-83,61,61,61,61,61,-109,-110,-86,61,61,61,61,-111,61,61,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,27,28,29,32,38,39,40,45,46,47,48,49,50,51,57,58,82,83,84,85,86,87,88,89,108,109,110,112,113,114,115,118,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,152,153,154,160,161,162,163,169,173,175,176,177,178,179,182,183,184,186,193,223,224,225,226,247,256,269,271,278,283,284,291,292,293,294,295,296,297,300,302,309,310,311,312,313,314,318,327,328,340,346,347,348,349,353,354,355,358,371,372,373,374,376,378,382,383,388,390,398,400,401,402,403,406,407,408,409,410,411,413,414,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-34,-35,-38,-95,-96,-97,-36,-168,-169,-170,-39,-37,-43,-44,-40,-41,-42,-45,-46,-84,-85,-36,-37,-38,-45,-46,-112,-74,-75,-159,-163,-36,-38,-165,-47,-82,-118,-51,-38,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-36,-117,-121,-135,-136,-137,-138,-128,-114,-113,-122,-175,-180,-129,-142,-143,-144,-70,-167,-171,-179,-172,-176,-134,-83,-160,-164,-99,-103,-105,-173,-174,-177,-178,-181,-182,-86,-149,-166,-141,-154,-155,-156,-157,-158,-127,-72,-71,-101,-119,-120,-150,-200,-139,-140,-192,-193,-185,-186,-183,-184,-98,-102,-132,-133,-191,-73,-100,-123,-124,-126,-125,-196,-197,-198,-199,-187,-188,-190,-189,]),'MENOR_QUE':([2,19,20,21,32,45,46,47,48,49,50,51,57,58,81,82,83,84,85,86,87,88,122,136,137,152,202,217,290,],[63,-34,-35,-38,-36,-39,-37,-43,-44,-40,-41,-42,-45,-46,63,-34,-35,-36,-37,-38,-45,-46,63,-38,63,-36,63,-38,-45,]),'MAYOR_QUE':([2,19,20,21,32,45,46,47,48,49,50,51,57,58,81,82,83,84,85,86,87,88,122,136,137,152,202,217,290,],[64,-34,-35,-38,-36,-39,-37,-43,-44,-40,-41,-42,-45,-46,64,-34,-35,-36,-37,-38,-45,-46,64,-38,64,-36,64,-38,-45,]),'MAYOR_IGUAL':([2,19,20,21,32,45,46,47,48,49,50,51,57,58,81,82,83,84,85,86,87,88,122,136,137,152,202,217,290,],[65,-34,-35,-38,-36,-39,-37,-43,-44,-40,-41,-42,-45,-46,65,-34,-35,-36,-37,-38,-45,-46,65,-38,65,-36,65,-38,-45,]),'DOBLE_IGUAL':([2,19,20,21,32,45,46,47,48,49,50,51,57,58,81,82,83,84,85,86,87,88,122,136,137,152,202,217,290,],[66,-34,-35,-38,-36,-39,-37,-43,-44,-40,-41,-42,-45,-46,66,-34,-35,-36,-37,-38,-45,-46,66,-38,66,-36,66,-38,-45,]),'MENOR_IGUAL':([2,19,20,21,32,45,46,47,48,49,50,51,57,58,81,82,83,84,85,86,87,88,122,136,137,152,202,217,290,],[67,-34,-35,-38,-36,-39,-37,-43,-44,-40,-41,-42,-45,-46,67,-34,-35,-36,-37,-38,-45,-46,67,-38,67,-36,67,-38,-45,]),'NO_IGUAL':([2,19,20,21,32,45,46,47,48,49,50,51,57,58,81,82,83,84,85,86,87,88,122,136,137,152,202,217,290,],[68,-34,-35,-38,-36,-39,-37,-43,-44,-40,-41,-42,-45,-46,68,-34,-35,-36,-37,-38,-45,-46,68,-38,68,-36,68,-38,-45,]),'PUNTO':([6,21,22,23,25,31,32,41,42,44,45,49,50,51,57,58,89,136,145,150,151,152,173,175,205,217,355,358,371,372,373,374,],[69,72,79,-194,-195,92,93,116,117,119,-39,-40,-41,-42,126,127,-112,238,79,240,241,242,-114,-113,69,281,-192,-193,-185,-186,-183,-184,]),'COMA':([19,20,45,47,48,49,50,51,84,85,86,87,88,89,91,94,173,175,179,259,260,261,262,266,310,311,312,313,314,316,317,330,331,332,333,360,363,365,],[-34,-35,-39,-43,-44,-40,-41,-42,-36,-37,-38,-45,-46,-112,174,180,-114,-113,-129,-130,-48,-49,-50,325,-154,-155,-156,-157,-158,356,357,367,368,369,370,-131,325,389,]),'CORCHETE_D':([19,20,30,45,47,48,49,50,51,84,85,86,87,88,90,91,257,],[-34,-35,89,-39,-43,-44,-40,-41,-42,-36,-37,-38,-45,-46,173,-115,-116,]),'END':([19,20,27,28,29,32,38,39,40,45,46,47,48,49,50,51,57,58,82,83,84,85,86,87,88,89,96,97,98,108,109,110,112,113,114,115,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,152,153,154,169,173,175,176,177,178,179,182,183,184,186,193,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,223,224,225,226,256,269,271,278,279,283,284,285,291,292,293,294,295,296,297,300,302,318,322,327,328,339,340,341,342,346,347,348,349,355,358,359,361,362,371,372,373,374,376,377,378,388,390,398,399,400,401,402,403,406,407,408,409,410,411,412,413,414,],[-34,-35,-95,-96,-97,-36,-168,-169,-170,-39,-37,-43,-44,-40,-41,-42,-45,-46,-84,-85,-36,-37,-38,-45,-46,-112,182,183,184,-74,-75,-159,-163,-36,-38,-165,-82,-118,-51,-38,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-36,-117,-121,-128,-114,-113,-122,-175,-180,-129,-142,-143,-144,-70,-167,-20,278,-18,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-38,283,284,-171,-179,-172,-176,-83,-160,-164,-99,340,-103,-105,-106,-173,-174,-177,-178,-181,-182,-86,-149,-166,-127,-145,-72,-71,376,-101,-104,378,-119,-120,-150,-200,-192,-193,388,-146,-151,-185,-186,-183,-184,-98,398,-102,-191,-73,-100,413,-123,-124,-126,-125,-196,-197,-198,-199,-187,-188,414,-190,-189,]),'ELSE':([19,20,27,28,29,32,38,39,40,45,46,47,48,49,50,51,57,58,82,83,84,85,86,87,88,89,108,109,110,112,113,114,115,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,152,153,154,169,173,175,176,177,178,179,182,183,184,186,193,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,221,223,224,225,226,256,269,271,278,283,284,291,292,293,294,295,296,297,300,302,318,327,328,339,340,344,346,347,348,349,355,358,371,372,373,374,376,378,379,388,390,398,400,401,402,403,406,407,408,409,410,411,413,414,],[-34,-35,-95,-96,-97,-36,-168,-169,-170,-39,-37,-43,-44,-40,-41,-42,-45,-46,-84,-85,-36,-37,-38,-45,-46,-112,-74,-75,-159,-163,-36,-38,-165,-82,-118,-51,-38,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-36,-117,-121,-128,-114,-113,-122,-175,-180,-129,-142,-143,-144,-70,-167,-20,280,-18,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-38,280,-171,-179,-172,-176,-83,-160,-164,-99,-103,-105,-173,-174,-177,-178,-181,-182,-86,-149,-166,-127,-72,-71,280,-101,-107,-119,-120,-150,-200,-192,-193,-185,-186,-183,-184,-98,-102,-108,-191,-73,-100,-123,-124,-126,-125,-196,-197,-198,-199,-187,-188,-190,-189,]),'WHEN':([19,20,27,28,29,32,38,39,40,45,46,47,48,49,50,51,57,58,82,83,84,85,86,87,88,89,108,109,110,112,113,114,115,125,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,152,153,154,169,173,175,176,177,178,179,182,183,184,186,193,200,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,221,223,224,225,226,256,269,271,278,283,284,291,292,293,294,295,296,297,300,302,318,327,328,340,344,346,347,348,349,355,358,371,372,373,374,376,378,379,388,390,398,400,401,402,403,406,407,408,409,410,411,413,414,],[-34,-35,-95,-96,-97,-36,-168,-169,-170,-39,-37,-43,-44,-40,-41,-42,-45,-46,-84,-85,-36,-37,-38,-45,-46,-112,-74,-75,-159,-163,-36,-38,-165,222,-82,-118,-51,-38,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-36,-117,-121,-128,-114,-113,-122,-175,-180,-129,-142,-143,-144,-70,-167,-20,-18,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-38,286,-171,-179,-172,-176,-83,-160,-164,-99,-103,-105,-173,-174,-177,-178,-181,-182,-86,-149,-166,-127,-72,-71,-101,-107,-119,-120,-150,-200,-192,-193,-185,-186,-183,-184,-98,-102,-108,-191,-73,-100,-123,-124,-126,-125,-196,-197,-198,-199,-187,-188,-190,-189,]),'AND':([19,20,45,47,48,49,50,51,84,85,86,87,88,131,],[-34,-35,-39,-43,-44,-40,-41,-42,-36,-37,-38,-45,-46,234,]),'OR':([19,20,45,47,48,49,50,51,84,85,86,87,88,131,],[-34,-35,-39,-43,-44,-40,-41,-42,-36,-37,-38,-45,-46,235,]),'NOMBRE_FUNCION':([19,20,34,45,47,48,49,50,51,71,82,83,84,85,86,87,88,121,124,131,256,263,277,280,282,287,288,289,297,320,323,324,343,380,381,397,],[-34,-35,99,-39,-43,-44,-40,-41,-42,149,-84,-85,-36,-37,-38,-45,-46,149,149,-82,-83,149,149,149,149,149,-109,-110,-86,149,149,149,149,-111,149,149,]),'PAR_D':([19,20,45,47,48,49,50,51,82,83,84,85,86,87,88,89,91,108,109,112,113,115,131,173,175,179,185,186,188,190,191,199,218,227,228,229,230,231,232,239,253,256,257,260,261,262,264,265,266,268,271,297,298,299,301,303,307,308,310,311,312,313,314,315,319,327,328,329,334,335,336,337,351,352,363,364,365,384,385,386,387,390,391,392,393,394,395,396,405,],[-34,-35,-39,-43,-44,-40,-41,-42,-84,-85,-36,-37,-38,-45,-46,-112,-115,-74,-75,-163,-36,-165,-82,-114,-113,-129,263,-70,269,-38,-37,277,282,291,292,293,294,295,296,300,318,-83,-116,-48,-49,-50,323,324,-147,328,-164,-86,346,347,348,349,353,354,-154,-155,-156,-157,-158,355,358,-72,-71,328,371,372,373,374,382,383,-147,-148,-152,400,401,402,403,-73,406,407,408,409,410,411,-153,]),'LLAVE_D':([19,20,45,47,48,49,50,51,84,85,86,87,88,89,94,173,175,179,259,260,261,262,360,],[-34,-35,-39,-43,-44,-40,-41,-42,-36,-37,-38,-45,-46,-112,179,-114,-113,-129,-130,-48,-49,-50,-131,]),'IGUAL':([21,45,49,50,51,166,217,266,404,],[71,-39,-40,-41,-42,250,71,326,326,]),'MAS':([21,35,45,46,49,50,51,57,58,87,88,107,108,109,113,114,136,186,189,190,191,217,328,329,],[-75,101,-39,-74,-40,-41,-42,-45,-46,-45,-46,101,-74,-75,192,-75,-75,101,101,-75,-74,-75,101,101,]),'MENOS':([21,35,45,46,49,50,51,57,58,87,88,107,108,109,114,136,186,189,190,191,217,328,329,],[-75,102,-39,-74,-40,-41,-42,-45,-46,-45,-46,102,-74,-75,-75,-75,102,102,-75,-74,-75,102,102,]),'MULTIPLICACION':([21,35,45,46,49,50,51,57,58,87,88,107,108,109,114,136,186,189,190,191,217,328,329,],[-75,103,-39,-74,-40,-41,-42,-45,-46,-45,-46,103,-74,-75,-75,-75,103,103,-75,-74,-75,103,103,]),'POTENCIA':([21,35,45,46,49,50,51,57,58,87,88,107,108,109,114,136,186,189,190,191,217,328,329,],[-75,104,-39,-74,-40,-41,-42,-45,-46,-45,-46,104,-74,-75,-75,-75,104,104,-75,-74,-75,104,104,]),'DIV':([21,35,45,46,49,50,51,57,58,87,88,107,108,109,114,136,186,189,190,191,217,328,329,],[-75,105,-39,-74,-40,-41,-42,-45,-46,-45,-46,105,-74,-75,-75,-75,105,105,-75,-74,-75,105,105,]),'MODULO':([21,35,45,46,49,50,51,57,58,87,88,107,108,109,114,136,186,189,190,191,217,328,329,],[-75,106,-39,-74,-40,-41,-42,-45,-46,-45,-46,106,-74,-75,-75,-75,106,106,-75,-74,-75,106,106,]),'MAS_IGUAL':([21,45,49,50,51,217,],[73,-39,-40,-41,-42,73,]),'RESTA_IGUAL':([21,45,49,50,51,217,],[74,-39,-40,-41,-42,74,]),'MULTIPLICACION_IGUAL':([21,45,49,50,51,217,],[75,-39,-40,-41,-42,75,]),'DIVISION_IGUAL':([21,45,49,50,51,217,],[76,-39,-40,-41,-42,76,]),'MODULO_IGUAL':([21,45,49,50,51,217,],[77,-39,-40,-41,-42,77,]),'EXPONENCIAL_IGUAL':([21,45,49,50,51,217,],[78,-39,-40,-41,-42,78,]),'DO':([24,156,198,410,411,],[80,244,276,-187,-188,]),'NOMBRE_CLASE':([43,],[118,]),'PUSH':([69,72,281,],[133,133,133,]),'DELETE':([69,72,281,],[134,165,134,]),'GETS':([71,],[150,]),'WRITE':([72,117,281,],[155,194,155,]),'EACH':([72,119,281,],[156,198,156,]),'HAS_VALUE':([72,],[157,]),'HAS_KEY':([72,],[158,]),'EMPTY':([72,],[159,]),'CLEAR':([72,],[160,]),'KEYS':([72,],[161,]),'LENGTH':([72,],[162,]),'VALUES':([72,],[163,]),'KEY':([72,],[164,]),'DEFAULT':([72,],[166,]),'SPLIT':([72,79,238,281,],[167,170,167,167,]),'INSERT':([72,93,281,],[168,168,168,]),'SIZE':([72,93,281,],[169,169,169,]),'PIPE':([80,244,255,276,350,375,],[171,304,320,338,381,397,]),'NEW':([92,],[175,]),'TOINTEGER':([93,127,242,],[177,226,177,]),'TOFLOAT':([93,126,242,],[178,224,178,]),'ASIGNACION':([95,258,],[181,321,]),'FLUSH':([116,],[193,]),'OPEN':([117,241,],[195,195,]),'READLINES':([117,241,],[196,196,]),'READ':([117,241,],[197,197,]),'TOSTRING':([126,127,],[223,225,]),'INTERROGACION':([157,158,159,],[245,246,247,]),'CHOMP':([240,],[302,]),'INTERVALO':([290,],[345,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,],[1,]),'variablesTotales':([0,26,30,37,52,53,62,71,111,120,121,123,124,172,174,181,222,233,236,239,248,263,277,280,282,286,287,305,320,321,323,324,343,381,397,],[2,81,91,112,122,122,131,137,112,122,202,122,202,256,91,260,122,122,298,91,260,202,202,202,202,122,202,260,202,260,202,202,202,202,202,]),'estructuraAsignacion':([0,121,124,263,277,280,282,287,320,323,324,343,381,397,],[3,203,203,203,203,203,203,203,203,203,203,203,203,203,]),'estructuraComparacion':([0,52,53,71,120,121,123,124,222,233,263,277,280,282,286,287,320,323,324,343,381,397,],[4,121,124,139,199,200,218,200,288,297,200,200,200,200,288,200,200,200,200,200,200,200,]),'estructurasControl':([0,121,124,263,277,280,282,287,320,323,324,343,381,397,],[5,204,204,204,204,204,204,204,204,204,204,204,204,204,]),'estructuraArray':([0,71,121,124,181,248,263,277,280,282,287,305,320,321,323,324,343,381,397,],[6,140,205,205,262,262,205,205,205,205,205,262,205,262,205,205,205,205,205,]),'funcionesArreglo':([0,121,124,263,277,280,282,287,320,323,324,343,381,397,],[7,206,206,206,206,206,206,206,206,206,206,206,206,206,]),'funcionesString':([0,121,124,263,277,280,282,287,320,323,324,343,381,397,],[8,207,207,207,207,207,207,207,207,207,207,207,207,207,]),'estructuraHash':([0,71,121,124,181,248,263,277,280,282,287,305,320,321,323,324,343,381,397,],[9,141,208,208,261,261,208,208,208,208,208,261,208,261,208,208,208,208,208,]),'estructuraFunciones':([0,121,124,263,277,280,282,287,320,323,324,343,381,397,],[10,209,209,209,209,209,209,209,209,209,209,209,209,209,]),'operacion':([0,37,71,111,121,124,263,267,277,280,282,287,320,323,324,343,366,381,397,],[11,115,138,115,211,211,211,327,211,211,211,211,211,211,211,211,390,211,211,]),'estructuraSalida':([0,121,124,263,277,280,282,287,320,323,324,343,381,397,],[12,212,212,212,212,212,212,212,212,212,212,212,212,212,]),'estructuraCasting':([0,71,121,124,263,277,280,282,287,320,323,324,343,381,397,],[13,143,213,213,213,213,213,213,213,213,213,213,213,213,213,]),'limpiarDatos':([0,121,124,263,277,280,282,287,320,323,324,343,381,397,],[14,214,214,214,214,214,214,214,214,214,214,214,214,214,]),'estructuraEscribirArchivo':([0,121,124,263,277,280,282,287,320,323,324,343,381,397,],[15,215,215,215,215,215,215,215,215,215,215,215,215,215,]),'estructuraClase':([0,],[16,]),'estructuraRecorrerArchivo':([0,121,124,263,277,280,282,287,320,323,324,343,381,397,],[17,216,216,216,216,216,216,216,216,216,216,216,216,216,]),'metodosHash':([0,],[18,]),'variables':([0,26,30,37,52,53,62,70,71,111,120,121,123,124,172,174,181,222,233,236,239,248,263,277,280,282,286,287,305,320,321,323,324,343,381,397,],[19,82,19,19,19,19,19,135,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'boleanos':([0,26,30,37,52,53,62,71,111,120,121,123,124,172,174,181,222,233,236,239,248,263,277,280,282,286,287,305,320,321,323,324,343,381,397,],[20,83,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'TiposNomVariables':([0,26,30,36,37,52,53,62,70,71,100,111,120,121,123,124,172,174,181,187,192,222,233,236,239,248,252,263,267,270,272,273,274,275,277,280,282,286,287,305,320,321,323,324,343,356,357,366,367,368,381,397,],[21,86,86,109,114,86,86,86,86,136,109,190,86,217,86,217,86,86,86,109,271,86,86,86,86,86,317,217,109,109,330,332,334,336,217,217,217,86,217,86,217,86,217,217,217,385,386,109,391,394,217,217,]),'estructuraLeerArchivo':([0,71,121,124,263,277,280,282,287,320,323,324,343,381,397,],[22,145,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'estructuraLeerArchivoLinea':([0,71,121,124,263,277,280,282,287,320,323,324,343,381,397,],[23,146,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'estructuraAbrirArchivo':([0,71,121,124,263,277,280,282,287,320,323,324,343,381,397,],[24,147,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'estructuraSplit':([0,71,121,124,263,277,280,282,287,320,323,324,343,381,397,],[25,148,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'estructuraIf':([0,121,124,263,277,280,282,287,320,323,324,343,381,397,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'estructuraUntil':([0,121,124,263,277,280,282,287,320,323,324,343,381,397,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'estructuraCase':([0,121,124,263,277,280,282,287,320,323,324,343,381,397,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'variablesoperacion':([0,36,37,71,100,111,121,124,187,263,267,270,277,280,282,287,320,323,324,343,366,381,397,],[35,107,35,35,186,189,35,35,268,35,35,329,35,35,35,35,35,35,35,35,35,35,35,]),'operadoresSalidas':([0,121,124,263,277,280,282,287,320,323,324,343,381,397,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'castingString':([0,71,121,124,263,277,280,282,287,320,323,324,343,381,397,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'castingInteger':([0,71,121,124,263,277,280,282,287,320,323,324,343,381,397,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'castingFloat':([0,71,121,124,263,277,280,282,287,320,323,324,343,381,397,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'variablesRecorrer':([0,121,124,263,277,280,282,287,320,323,324,343,381,397,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'numericos':([0,26,30,36,37,52,53,62,70,71,100,111,120,121,123,124,172,174,181,187,222,233,236,239,248,263,267,270,277,280,282,286,287,305,320,321,323,324,343,366,381,397,],[46,85,85,108,46,85,85,85,85,46,108,191,85,46,85,46,85,85,85,108,85,85,85,85,85,46,108,108,46,46,46,85,46,85,46,85,46,46,46,108,46,46,]),'comparador':([2,81,122,137,202,],[62,172,62,62,62,]),'tipoAsignacion':([21,217,],[70,70,]),'parametrosA':([30,174,239,],[90,257,301,]),'cuerpoH':([33,],[94,]),'funcionSinAtributos':([34,],[96,]),'funcionConAtributos':([34,],[97,]),'funcionConDefectos':([34,],[98,]),'operador':([35,107,186,189,328,329,],[100,187,267,270,366,267,]),'cuerpoSalida':([37,111,],[110,188,]),'nombreFuncionesA':([69,72,281,],[132,153,153,]),'llamadoFunciones':([71,121,124,263,277,280,282,287,320,323,324,343,381,397,],[142,210,210,210,210,210,210,210,210,210,210,210,210,210,]),'estructuraEntrada':([71,],[144,]),'nombreFuncionesS':([72,93,281,],[154,176,154,]),'cuerpo':([121,124,263,277,280,282,287,320,323,324,343,381,397,],[201,219,322,339,341,342,344,359,361,362,379,399,412,]),'estructuraWhenI':([125,],[220,]),'estructuraWhen':([125,],[221,]),'operadoresComparacion':([131,],[233,]),'valorTodos':([181,248,305,321,],[259,307,351,360,]),'parametrosFunciones':([185,325,],[264,364,]),'parametrosFuncionesDefecto':([185,389,],[265,405,]),'estructuraElse':([201,221,339,],[279,285,377,]),'sentenciaWhen':([222,286,],[287,343,]),'intervaloW':([222,286,],[289,289,]),'valorF':([250,326,],[309,365,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> variablesTotales','instrucciones',1,'p_instrucciones','Sintactico.py',7),
  ('instrucciones -> estructuraAsignacion','instrucciones',1,'p_instrucciones','Sintactico.py',8),
  ('instrucciones -> estructuraComparacion','instrucciones',1,'p_instrucciones','Sintactico.py',9),
  ('instrucciones -> estructurasControl','instrucciones',1,'p_instrucciones','Sintactico.py',10),
  ('instrucciones -> estructuraArray','instrucciones',1,'p_instrucciones','Sintactico.py',11),
  ('instrucciones -> funcionesArreglo','instrucciones',1,'p_instrucciones','Sintactico.py',12),
  ('instrucciones -> funcionesString','instrucciones',1,'p_instrucciones','Sintactico.py',13),
  ('instrucciones -> estructuraHash','instrucciones',1,'p_instrucciones','Sintactico.py',14),
  ('instrucciones -> estructuraFunciones','instrucciones',1,'p_instrucciones','Sintactico.py',15),
  ('instrucciones -> operacion','instrucciones',1,'p_instrucciones','Sintactico.py',16),
  ('instrucciones -> estructuraSalida','instrucciones',1,'p_instrucciones','Sintactico.py',17),
  ('instrucciones -> estructuraCasting','instrucciones',1,'p_instrucciones','Sintactico.py',18),
  ('instrucciones -> limpiarDatos','instrucciones',1,'p_instrucciones','Sintactico.py',19),
  ('instrucciones -> estructuraEscribirArchivo','instrucciones',1,'p_instrucciones','Sintactico.py',20),
  ('instrucciones -> estructuraClase','instrucciones',1,'p_instrucciones','Sintactico.py',21),
  ('instrucciones -> estructuraRecorrerArchivo','instrucciones',1,'p_instrucciones','Sintactico.py',22),
  ('instrucciones -> metodosHash','instrucciones',1,'p_instrucciones','Sintactico.py',23),
  ('cuerpo -> variablesTotales','cuerpo',1,'p_cuerpo','Sintactico.py',27),
  ('cuerpo -> estructuraAsignacion','cuerpo',1,'p_cuerpo','Sintactico.py',28),
  ('cuerpo -> estructuraComparacion','cuerpo',1,'p_cuerpo','Sintactico.py',29),
  ('cuerpo -> estructurasControl','cuerpo',1,'p_cuerpo','Sintactico.py',30),
  ('cuerpo -> estructuraArray','cuerpo',1,'p_cuerpo','Sintactico.py',31),
  ('cuerpo -> funcionesArreglo','cuerpo',1,'p_cuerpo','Sintactico.py',32),
  ('cuerpo -> funcionesString','cuerpo',1,'p_cuerpo','Sintactico.py',33),
  ('cuerpo -> estructuraHash','cuerpo',1,'p_cuerpo','Sintactico.py',34),
  ('cuerpo -> estructuraFunciones','cuerpo',1,'p_cuerpo','Sintactico.py',35),
  ('cuerpo -> llamadoFunciones','cuerpo',1,'p_cuerpo','Sintactico.py',36),
  ('cuerpo -> operacion','cuerpo',1,'p_cuerpo','Sintactico.py',37),
  ('cuerpo -> estructuraSalida','cuerpo',1,'p_cuerpo','Sintactico.py',38),
  ('cuerpo -> estructuraCasting','cuerpo',1,'p_cuerpo','Sintactico.py',39),
  ('cuerpo -> limpiarDatos','cuerpo',1,'p_cuerpo','Sintactico.py',40),
  ('cuerpo -> estructuraEscribirArchivo','cuerpo',1,'p_cuerpo','Sintactico.py',41),
  ('cuerpo -> estructuraRecorrerArchivo','cuerpo',1,'p_cuerpo','Sintactico.py',42),
  ('variablesTotales -> variables','variablesTotales',1,'p_variablesTotales','Sintactico.py',47),
  ('variablesTotales -> boleanos','variablesTotales',1,'p_variablesTotales','Sintactico.py',48),
  ('variables -> CADENA','variables',1,'p_variables','Sintactico.py',52),
  ('variables -> numericos','variables',1,'p_variables','Sintactico.py',53),
  ('variables -> TiposNomVariables','variables',1,'p_variables','Sintactico.py',54),
  ('TiposNomVariables -> NOMBRE_VARIABLE','TiposNomVariables',1,'p_TiposNomVariables','Sintactico.py',59),
  ('TiposNomVariables -> VARIABLE_GLOBAL','TiposNomVariables',1,'p_TiposNomVariables','Sintactico.py',60),
  ('TiposNomVariables -> VARIABLE_INSTANCIA','TiposNomVariables',1,'p_TiposNomVariables','Sintactico.py',61),
  ('TiposNomVariables -> VARIABLE_CLASE','TiposNomVariables',1,'p_TiposNomVariables','Sintactico.py',62),
  ('boleanos -> TRUE','boleanos',1,'p_boleanos','Sintactico.py',65),
  ('boleanos -> FALSE','boleanos',1,'p_boleanos','Sintactico.py',66),
  ('numericos -> ENTERO','numericos',1,'p_numericos','Sintactico.py',70),
  ('numericos -> FLOTANTE','numericos',1,'p_numericos','Sintactico.py',71),
  ('estructuraClase -> CLASS NOMBRE_CLASE','estructuraClase',2,'p_estructuraClase','Sintactico.py',75),
  ('valorTodos -> variablesTotales','valorTodos',1,'p_valorTodos','Sintactico.py',79),
  ('valorTodos -> estructuraHash','valorTodos',1,'p_valorTodos','Sintactico.py',80),
  ('valorTodos -> estructuraArray','valorTodos',1,'p_valorTodos','Sintactico.py',81),
  ('estructuraAsignacion -> TiposNomVariables tipoAsignacion variables','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',86),
  ('estructuraAsignacion -> TiposNomVariables IGUAL variablesTotales','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',87),
  ('estructuraAsignacion -> TiposNomVariables IGUAL operacion','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',88),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraComparacion','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',89),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraArray','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',90),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraHash','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',91),
  ('estructuraAsignacion -> TiposNomVariables IGUAL llamadoFunciones','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',92),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraCasting','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',93),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraEntrada','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',94),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraLeerArchivo','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',95),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraLeerArchivoLinea','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',96),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraAbrirArchivo','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',97),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraSplit','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',98),
  ('tipoAsignacion -> MAS_IGUAL','tipoAsignacion',1,'p_tipoAsignacion','Sintactico.py',103),
  ('tipoAsignacion -> RESTA_IGUAL','tipoAsignacion',1,'p_tipoAsignacion','Sintactico.py',104),
  ('tipoAsignacion -> MULTIPLICACION_IGUAL','tipoAsignacion',1,'p_tipoAsignacion','Sintactico.py',105),
  ('tipoAsignacion -> DIVISION_IGUAL','tipoAsignacion',1,'p_tipoAsignacion','Sintactico.py',106),
  ('tipoAsignacion -> MODULO_IGUAL','tipoAsignacion',1,'p_tipoAsignacion','Sintactico.py',107),
  ('tipoAsignacion -> EXPONENCIAL_IGUAL','tipoAsignacion',1,'p_tipoAsignacion','Sintactico.py',108),
  ('operacion -> variablesoperacion operador variablesoperacion','operacion',3,'p_operacion','Sintactico.py',114),
  ('operacion -> PAR_I variablesoperacion operador variablesoperacion PAR_D','operacion',5,'p_operacion','Sintactico.py',115),
  ('operacion -> variablesoperacion operador variablesoperacion operador operacion','operacion',5,'p_operacion','Sintactico.py',116),
  ('operacion -> PAR_I variablesoperacion operador variablesoperacion PAR_D operador operacion','operacion',7,'p_operacion','Sintactico.py',117),
  ('variablesoperacion -> numericos','variablesoperacion',1,'p_variablesoperacion','Sintactico.py',122),
  ('variablesoperacion -> TiposNomVariables','variablesoperacion',1,'p_variablesoperacion','Sintactico.py',123),
  ('operador -> MAS','operador',1,'p_operador','Sintactico.py',127),
  ('operador -> MENOS','operador',1,'p_operador','Sintactico.py',128),
  ('operador -> MULTIPLICACION','operador',1,'p_operador','Sintactico.py',129),
  ('operador -> POTENCIA','operador',1,'p_operador','Sintactico.py',130),
  ('operador -> DIV','operador',1,'p_operador','Sintactico.py',131),
  ('operador -> MODULO','operador',1,'p_operador','Sintactico.py',132),
  ('estructuraComparacion -> variablesTotales comparador variablesTotales','estructuraComparacion',3,'p_estructuraComparacion','Sintactico.py',136),
  ('estructuraComparacion -> NOT variablesTotales comparador variablesTotales','estructuraComparacion',4,'p_estructuraComparacion','Sintactico.py',137),
  ('estructuraComparacion -> NOT variables','estructuraComparacion',2,'p_estructuraComparacion','Sintactico.py',138),
  ('estructuraComparacion -> NOT boleanos','estructuraComparacion',2,'p_estructuraComparacion','Sintactico.py',139),
  ('estructuraComparacion -> variablesTotales comparador variablesTotales operadoresComparacion estructuraComparacion','estructuraComparacion',5,'p_estructuraComparacion','Sintactico.py',140),
  ('comparador -> MENOR_QUE','comparador',1,'p_comparador','Sintactico.py',145),
  ('comparador -> MAYOR_QUE','comparador',1,'p_comparador','Sintactico.py',146),
  ('comparador -> MAYOR_IGUAL','comparador',1,'p_comparador','Sintactico.py',147),
  ('comparador -> DOBLE_IGUAL','comparador',1,'p_comparador','Sintactico.py',148),
  ('comparador -> MENOR_IGUAL','comparador',1,'p_comparador','Sintactico.py',149),
  ('comparador -> NO_IGUAL','comparador',1,'p_comparador','Sintactico.py',150),
  ('operadoresComparacion -> AND','operadoresComparacion',1,'p_operadoresComparacion','Sintactico.py',154),
  ('operadoresComparacion -> OR','operadoresComparacion',1,'p_operadoresComparacion','Sintactico.py',155),
  ('estructurasControl -> estructuraIf','estructurasControl',1,'p_estructurasControl','Sintactico.py',160),
  ('estructurasControl -> estructuraUntil','estructurasControl',1,'p_estructurasControl','Sintactico.py',161),
  ('estructurasControl -> estructuraCase','estructurasControl',1,'p_estructurasControl','Sintactico.py',162),
  ('estructuraIf -> IF PAR_I estructuraComparacion PAR_D cuerpo END','estructuraIf',6,'p_estructuraIf','Sintactico.py',167),
  ('estructuraIf -> IF estructuraComparacion cuerpo END','estructuraIf',4,'p_estructuraIf','Sintactico.py',168),
  ('estructuraIf -> IF PAR_I estructuraComparacion PAR_D cuerpo estructuraElse END','estructuraIf',7,'p_estructuraIf','Sintactico.py',169),
  ('estructuraIf -> IF estructuraComparacion cuerpo estructuraElse END','estructuraIf',5,'p_estructuraIf','Sintactico.py',170),
  ('estructuraUntil -> UNTIL PAR_I estructuraComparacion PAR_D cuerpo END','estructuraUntil',6,'p_estructuraUntil','Sintactico.py',174),
  ('estructuraUntil -> UNTIL estructuraComparacion cuerpo END','estructuraUntil',4,'p_estructuraUntil','Sintactico.py',175),
  ('estructuraElse -> ELSE cuerpo','estructuraElse',2,'p_estructuraElse','Sintactico.py',180),
  ('estructuraCase -> CASE NOMBRE_VARIABLE estructuraWhenI END','estructuraCase',4,'p_estructuraCase','Sintactico.py',184),
  ('estructuraWhenI -> estructuraWhen estructuraElse','estructuraWhenI',2,'p_estructuraWhenI','Sintactico.py',188),
  ('estructuraWhen -> WHEN sentenciaWhen cuerpo','estructuraWhen',3,'p_estructuraWhen','Sintactico.py',192),
  ('estructuraWhen -> estructuraWhen WHEN sentenciaWhen cuerpo','estructuraWhen',4,'p_estructuraWhen','Sintactico.py',193),
  ('sentenciaWhen -> estructuraComparacion','sentenciaWhen',1,'p_sentenciaWhen','Sintactico.py',198),
  ('sentenciaWhen -> intervaloW','sentenciaWhen',1,'p_sentenciaWhen','Sintactico.py',199),
  ('intervaloW -> ENTERO INTERVALO ENTERO','intervaloW',3,'p_intervaloW','Sintactico.py',204),
  ('estructuraArray -> CORCHETE_I CORCHETE_D','estructuraArray',2,'p_estructuraArray','Sintactico.py',213),
  ('estructuraArray -> ARRAY PUNTO NEW','estructuraArray',3,'p_estructuraArray','Sintactico.py',214),
  ('estructuraArray -> CORCHETE_I parametrosA CORCHETE_D','estructuraArray',3,'p_estructuraArray','Sintactico.py',215),
  ('parametrosA -> variablesTotales','parametrosA',1,'p_parametrosA','Sintactico.py',220),
  ('parametrosA -> variablesTotales COMA parametrosA','parametrosA',3,'p_parametrosA','Sintactico.py',221),
  ('funcionesArreglo -> TiposNomVariables PUNTO nombreFuncionesA','funcionesArreglo',3,'p_funcionesArreglo','Sintactico.py',226),
  ('funcionesArreglo -> estructuraArray PUNTO nombreFuncionesA','funcionesArreglo',3,'p_funcionesArreglo','Sintactico.py',227),
  ('nombreFuncionesA -> PUSH PAR_I variablesTotales PAR_D','nombreFuncionesA',4,'p_nombreFuncionesA','Sintactico.py',232),
  ('nombreFuncionesA -> DELETE PAR_I ENTERO PAR_D','nombreFuncionesA',4,'p_nombreFuncionesA','Sintactico.py',233),
  ('funcionesString -> TiposNomVariables PUNTO nombreFuncionesS','funcionesString',3,'p_funcionesString','Sintactico.py',237),
  ('funcionesString -> CADENA PUNTO nombreFuncionesS','funcionesString',3,'p_funcionesString','Sintactico.py',238),
  ('nombreFuncionesS -> INSERT PAR_I ENTERO COMA CADENA PAR_D','nombreFuncionesS',6,'p_nombreFuncionesS','Sintactico.py',243),
  ('nombreFuncionesS -> INSERT PAR_I ENTERO COMA TiposNomVariables PAR_D','nombreFuncionesS',6,'p_nombreFuncionesS','Sintactico.py',244),
  ('nombreFuncionesS -> INSERT PAR_I TiposNomVariables COMA CADENA PAR_D','nombreFuncionesS',6,'p_nombreFuncionesS','Sintactico.py',245),
  ('nombreFuncionesS -> INSERT PAR_I TiposNomVariables COMA TiposNomVariables PAR_D','nombreFuncionesS',6,'p_nombreFuncionesS','Sintactico.py',246),
  ('nombreFuncionesS -> SIZE PAR_I PAR_D','nombreFuncionesS',3,'p_nombreFuncionesS','Sintactico.py',247),
  ('nombreFuncionesS -> SIZE','nombreFuncionesS',1,'p_nombreFuncionesS','Sintactico.py',248),
  ('estructuraHash -> LLAVE_I cuerpoH LLAVE_D','estructuraHash',3,'p_estructuraHash','Sintactico.py',253),
  ('cuerpoH -> CADENA ASIGNACION valorTodos','cuerpoH',3,'p_cuerpoH','Sintactico.py',257),
  ('cuerpoH -> cuerpoH COMA CADENA ASIGNACION valorTodos','cuerpoH',5,'p_cuerpoH','Sintactico.py',258),
  ('metodosHash -> TiposNomVariables PUNTO HAS_VALUE INTERROGACION PAR_I valorTodos PAR_D','metodosHash',7,'p_metodosHash','Sintactico.py',265),
  ('metodosHash -> TiposNomVariables PUNTO HAS_KEY INTERROGACION PAR_I CADENA PAR_D','metodosHash',7,'p_metodosHash','Sintactico.py',266),
  ('metodosHash -> TiposNomVariables PUNTO EMPTY INTERROGACION','metodosHash',4,'p_metodosHash','Sintactico.py',267),
  ('metodosHash -> TiposNomVariables PUNTO CLEAR','metodosHash',3,'p_metodosHash','Sintactico.py',268),
  ('metodosHash -> TiposNomVariables PUNTO KEYS','metodosHash',3,'p_metodosHash','Sintactico.py',269),
  ('metodosHash -> TiposNomVariables PUNTO LENGTH','metodosHash',3,'p_metodosHash','Sintactico.py',270),
  ('metodosHash -> TiposNomVariables PUNTO VALUES','metodosHash',3,'p_metodosHash','Sintactico.py',271),
  ('metodosHash -> TiposNomVariables PUNTO KEY PAR_I valorTodos PAR_D','metodosHash',6,'p_metodosHash','Sintactico.py',272),
  ('metodosHash -> TiposNomVariables PUNTO DELETE PAR_I CADENA PAR_D','metodosHash',6,'p_metodosHash','Sintactico.py',273),
  ('metodosHash -> TiposNomVariables PUNTO DEFAULT IGUAL valorF','metodosHash',5,'p_metodosHash','Sintactico.py',274),
  ('estructuraFunciones -> DEF funcionSinAtributos END','estructuraFunciones',3,'p_estructuraFunciones','Sintactico.py',281),
  ('estructuraFunciones -> DEF funcionConAtributos END','estructuraFunciones',3,'p_estructuraFunciones','Sintactico.py',282),
  ('estructuraFunciones -> DEF funcionConDefectos END','estructuraFunciones',3,'p_estructuraFunciones','Sintactico.py',283),
  ('funcionSinAtributos -> NOMBRE_FUNCION PAR_I PAR_D cuerpo','funcionSinAtributos',4,'p_funcionSinAtributos','Sintactico.py',288),
  ('funcionConAtributos -> NOMBRE_FUNCION PAR_I parametrosFunciones PAR_D cuerpo','funcionConAtributos',5,'p_funcionConAtributos','Sintactico.py',293),
  ('parametrosFunciones -> NOMBRE_VARIABLE','parametrosFunciones',1,'p_parametrosFunciones','Sintactico.py',298),
  ('parametrosFunciones -> NOMBRE_VARIABLE COMA parametrosFunciones','parametrosFunciones',3,'p_parametrosFunciones','Sintactico.py',299),
  ('llamadoFunciones -> NOMBRE_FUNCION PAR_I PAR_D','llamadoFunciones',3,'p_llamadoFunciones','Sintactico.py',304),
  ('llamadoFunciones -> NOMBRE_FUNCION PAR_I parametrosA PAR_D','llamadoFunciones',4,'p_llamadoFunciones','Sintactico.py',305),
  ('funcionConDefectos -> NOMBRE_FUNCION PAR_I parametrosFuncionesDefecto PAR_D cuerpo','funcionConDefectos',5,'p_funcionConDefectos','Sintactico.py',311),
  ('parametrosFuncionesDefecto -> NOMBRE_VARIABLE IGUAL valorF','parametrosFuncionesDefecto',3,'p_parametrosFuncionesDefecto','Sintactico.py',315),
  ('parametrosFuncionesDefecto -> NOMBRE_VARIABLE IGUAL valorF COMA parametrosFuncionesDefecto','parametrosFuncionesDefecto',5,'p_parametrosFuncionesDefecto','Sintactico.py',316),
  ('valorF -> ENTERO','valorF',1,'p_valorF','Sintactico.py',321),
  ('valorF -> FLOTANTE','valorF',1,'p_valorF','Sintactico.py',322),
  ('valorF -> CADENA','valorF',1,'p_valorF','Sintactico.py',323),
  ('valorF -> TRUE','valorF',1,'p_valorF','Sintactico.py',324),
  ('valorF -> FALSE','valorF',1,'p_valorF','Sintactico.py',325),
  ('estructuraSalida -> operadoresSalidas cuerpoSalida','estructuraSalida',2,'p_estructuraSalida','Sintactico.py',330),
  ('estructuraSalida -> operadoresSalidas PAR_I cuerpoSalida PAR_D','estructuraSalida',4,'p_estructuraSalida','Sintactico.py',331),
  ('operadoresSalidas -> PUTS','operadoresSalidas',1,'p_operadoresSalidas','Sintactico.py',336),
  ('operadoresSalidas -> PRINT','operadoresSalidas',1,'p_operadoresSalidas','Sintactico.py',337),
  ('cuerpoSalida -> variablesTotales','cuerpoSalida',1,'p_cuerpoSalida','Sintactico.py',341),
  ('cuerpoSalida -> CADENA MAS TiposNomVariables','cuerpoSalida',3,'p_cuerpoSalida','Sintactico.py',342),
  ('cuerpoSalida -> operacion','cuerpoSalida',1,'p_cuerpoSalida','Sintactico.py',343),
  ('estructuraEntrada -> GETS PUNTO CHOMP','estructuraEntrada',3,'p_estructuraEntrada','Sintactico.py',347),
  ('limpiarDatos -> STDOUT PUNTO FLUSH','limpiarDatos',3,'p_limpiarDatos','Sintactico.py',351),
  ('estructuraCasting -> castingString','estructuraCasting',1,'p_estructuraCasting','Sintactico.py',356),
  ('estructuraCasting -> castingInteger','estructuraCasting',1,'p_estructuraCasting','Sintactico.py',357),
  ('estructuraCasting -> castingFloat','estructuraCasting',1,'p_estructuraCasting','Sintactico.py',358),
  ('castingString -> ENTERO PUNTO TOSTRING','castingString',3,'p_castingString','Sintactico.py',363),
  ('castingString -> FLOTANTE PUNTO TOSTRING','castingString',3,'p_castingString','Sintactico.py',364),
  ('castingString -> STRING PAR_I ENTERO PAR_D','castingString',4,'p_castingString','Sintactico.py',365),
  ('castingString -> STRING PAR_I FLOTANTE PAR_D','castingString',4,'p_castingString','Sintactico.py',366),
  ('castingInteger -> CADENA PUNTO TOINTEGER','castingInteger',3,'p_castingInteger','Sintactico.py',371),
  ('castingInteger -> FLOTANTE PUNTO TOINTEGER','castingInteger',3,'p_castingInteger','Sintactico.py',372),
  ('castingInteger -> INTEGER PAR_I CADENA PAR_D','castingInteger',4,'p_castingInteger','Sintactico.py',373),
  ('castingInteger -> INTEGER PAR_I FLOTANTE PAR_D','castingInteger',4,'p_castingInteger','Sintactico.py',374),
  ('castingFloat -> ENTERO PUNTO TOFLOAT','castingFloat',3,'p_castingFloat','Sintactico.py',379),
  ('castingFloat -> CADENA PUNTO TOFLOAT','castingFloat',3,'p_castingFloat','Sintactico.py',380),
  ('castingFloat -> FLOAT PAR_I ENTERO PAR_D','castingFloat',4,'p_castingFloat','Sintactico.py',381),
  ('castingFloat -> FLOAT PAR_I CADENA PAR_D','castingFloat',4,'p_castingFloat','Sintactico.py',382),
  ('estructuraLeerArchivo -> FILE PUNTO READ PAR_I TiposNomVariables PAR_D','estructuraLeerArchivo',6,'p_estructuraLeerArchivo','Sintactico.py',392),
  ('estructuraLeerArchivo -> FILE PUNTO READ PAR_I CADENA PAR_D','estructuraLeerArchivo',6,'p_estructuraLeerArchivo','Sintactico.py',393),
  ('estructuraLeerArchivoLinea -> FILE PUNTO READLINES PAR_I TiposNomVariables PAR_D','estructuraLeerArchivoLinea',6,'p_estructuraLeerArchivoLinea','Sintactico.py',398),
  ('estructuraLeerArchivoLinea -> FILE PUNTO READLINES PAR_I CADENA PAR_D','estructuraLeerArchivoLinea',6,'p_estructuraLeerArchivoLinea','Sintactico.py',399),
  ('estructuraAbrirArchivo -> FILE PUNTO OPEN PAR_I TiposNomVariables COMA CADENA PAR_D','estructuraAbrirArchivo',8,'p_estructuraAbrirArchivo','Sintactico.py',403),
  ('estructuraAbrirArchivo -> FILE PUNTO OPEN PAR_I CADENA COMA CADENA PAR_D','estructuraAbrirArchivo',8,'p_estructuraAbrirArchivo','Sintactico.py',404),
  ('estructuraRecorrerArchivo -> variablesRecorrer PUNTO EACH DO PIPE NOMBRE_VARIABLE PIPE cuerpo END','estructuraRecorrerArchivo',9,'p_estructuraRecorrerArchivo','Sintactico.py',410),
  ('estructuraRecorrerArchivo -> TiposNomVariables PUNTO EACH DO PIPE NOMBRE_VARIABLE PIPE cuerpo END','estructuraRecorrerArchivo',9,'p_estructuraRecorrerArchivo','Sintactico.py',411),
  ('estructuraRecorrerArchivo -> estructuraAbrirArchivo DO PIPE NOMBRE_VARIABLE PIPE cuerpo END','estructuraRecorrerArchivo',7,'p_estructuraRecorrerArchivo','Sintactico.py',412),
  ('estructuraSplit -> TiposNomVariables PUNTO SPLIT PAR_I CADENA PAR_D','estructuraSplit',6,'p_estructuraSplit','Sintactico.py',417),
  ('estructuraSplit -> estructuraLeerArchivo PUNTO SPLIT PAR_I CADENA PAR_D','estructuraSplit',6,'p_estructuraSplit','Sintactico.py',418),
  ('variablesRecorrer -> estructuraLeerArchivoLinea','variablesRecorrer',1,'p_variablesRecorrer','Sintactico.py',421),
  ('variablesRecorrer -> estructuraSplit','variablesRecorrer',1,'p_variablesRecorrer','Sintactico.py',422),
  ('estructuraEscribirArchivo -> FILE PUNTO WRITE PAR_I TiposNomVariables COMA TiposNomVariables PAR_D','estructuraEscribirArchivo',8,'p_estructuraEscribirArchivo','Sintactico.py',426),
  ('estructuraEscribirArchivo -> FILE PUNTO WRITE PAR_I TiposNomVariables COMA CADENA PAR_D','estructuraEscribirArchivo',8,'p_estructuraEscribirArchivo','Sintactico.py',427),
  ('estructuraEscribirArchivo -> FILE PUNTO WRITE PAR_I CADENA COMA CADENA PAR_D','estructuraEscribirArchivo',8,'p_estructuraEscribirArchivo','Sintactico.py',428),
  ('estructuraEscribirArchivo -> FILE PUNTO WRITE PAR_I CADENA COMA TiposNomVariables PAR_D','estructuraEscribirArchivo',8,'p_estructuraEscribirArchivo','Sintactico.py',429),
  ('estructuraEscribirArchivo -> TiposNomVariables PUNTO WRITE PAR_I CADENA PAR_D','estructuraEscribirArchivo',6,'p_estructuraEscribirArchivo','Sintactico.py',430),
]
