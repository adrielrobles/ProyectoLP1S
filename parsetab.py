
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALIAS AND ARRAY ASIGNACION BACKS BREAK CADENA CASE CHOMP CLASS COMA CORCHETE_D CORCHETE_I DEF DEFINED DELETE DICCIONARIO DIV DIVISION_IGUAL DO DOBLE_IGUAL EACH ELSE ELSEIF END ENSURE ENTERO EXPONENCIAL_IGUAL FALSE FILE FLOAT FLOTANTE FLUSH FOR GETS IF IGUAL IN INSERT INTEGER INTERVALO LINE LLAVE_D LLAVE_I MAS MAS_IGUAL MAYOR_IGUAL MAYOR_QUE MENOR_IGUAL MENOR_QUE MENOS MODOAPERTURA MODULE MODULO MODULO_IGUAL MULTIPLICACION MULTIPLICACION_IGUAL NEW NEXT NIL NOMBRE_CLASE NOMBRE_FUNCION NOMBRE_VARIABLE NOT NO_IGUAL OPEN OR PAR_D PAR_I PIPE POTENCIA PRINT PUNTO PUSH PUTS READ READLINES REDO RESCUE RESTA_IGUAL RETRY RETURN SELF SIZE SPLIT STDOUT STRING SUPER THEN TOFLOAT TOINTEGER TOSTRING TRUE UNDEF UNLEES UNTIL VAL VARIABLE_CLASE VARIABLE_GLOBAL VARIABLE_INSTANCIA VFILE WHEN WHILE WRITE YIELDinstrucciones : variablesTotales\n                   | estructuraAsignacion\n                   | estructuraComparacion\n                   | estructurasControl\n                   | estructuraArray\n                   | funcionesArreglo\n                   | funcionesString\n                   | estructuraHash\n                   | estructuraFunciones\n                   | operacion\n                   | estructuraCasting\n                   | estructuraSalida\n                   | estructuraEntrada\n                   | limpiarDatos\n                   | estructuraEscribirArchivo\n                cuerpo : variablesTotales\n              | estructuraAsignacion\n              | estructuraComparacion\n              | estructurasControl\n              | estructuraArray\n              | funcionesArreglo\n              | funcionesString\n              | estructuraHash\n              | estructuraFunciones\n              | llamadoFunciones\n              | operacion\n              | estructuraCasting\n              | estructuraSalida\n              | estructuraEntrada\n              | limpiarDatos\n              | estructuraEscribirArchivo\n    variablesTotales : variables \n                        | boleanos\n    variables : CADENA\n               | numericos\n               | TiposNomVariables\n  TiposNomVariables : NOMBRE_VARIABLE\n                       | VARIABLE_GLOBAL\n                       | VARIABLE_INSTANCIA\n                       | VARIABLE_CLASE boleanos : TRUE \n                | FALSE\n    numericos : ENTERO \n                 | FLOTANTE\n    estructuraClase : CLASS NOMBRE_CLASEvalorTodos : variablesTotales\n                | estructuraHash\n                | estructuraArray\n  estructuraAsignacion : TiposNomVariables tipoAsignacion variables\n                          | TiposNomVariables IGUAL variablesTotales\n                          | TiposNomVariables IGUAL operacion\n                          | TiposNomVariables IGUAL estructuraComparacion\n                          | TiposNomVariables IGUAL estructuraArray\n                          | TiposNomVariables IGUAL estructuraHash\n                          | TiposNomVariables IGUAL llamadoFunciones\n                          | TiposNomVariables IGUAL estructuraCasting\n                          | TiposNomVariables IGUAL estructuraEntrada\n                          | TiposNomVariables IGUAL estructuraAbrirArchivo\n                          | TiposNomVariables IGUAL estructuraLeerArchivo\n  tipoAsignacion : MAS_IGUAL\n                    | RESTA_IGUAL\n                    | MULTIPLICACION_IGUAL\n                    | DIVISION_IGUAL\n                    | MODULO_IGUAL\n                    | EXPONENCIAL_IGUAL\n                 operacion : variablesoperacion operador variablesoperacion\n                | PAR_I variablesoperacion operador variablesoperacion PAR_D\n                | variablesoperacion operador variablesoperacion operador operacion\n                | PAR_I variablesoperacion operador variablesoperacion PAR_D operador operacion\n   variablesoperacion : numericos\n                         | TiposNomVariables\n  operador : MAS\n              | MENOS\n              | MULTIPLICACION\n              | POTENCIA\n              | DIV\n              | MODULO\n  estructuraComparacion : variablesTotales comparador variablesTotales\n                           | NOT variablesTotales comparador variablesTotales\n                           | NOT variables\n                           | NOT boleanos\n                           | variablesTotales comparador variablesTotales operadoresComparacion estructuraComparacion\n                           comparador : MENOR_QUE\n                | MAYOR_QUE\n                | MAYOR_IGUAL\n                | DOBLE_IGUAL\n                | MENOR_IGUAL\n                | NO_IGUAL\n  operadoresComparacion : AND\n                           | OR\n  estructurasControl : estructuraIf\n                        | estructuraUntil\n                        | estructuraCase\n   estructuraIf : IF PAR_I estructuraComparacion PAR_D cuerpo END\n                  | IF estructuraComparacion cuerpo END\n                  | IF PAR_I estructuraComparacion PAR_D cuerpo estructuraElse END\n                  | IF estructuraComparacion cuerpo estructuraElse END\n  estructuraUntil : UNTIL PAR_I estructuraComparacion PAR_D cuerpo END\n                     | UNTIL estructuraComparacion cuerpo END\n  estructuraElse : ELSE cuerpoestructuraCase : CASE NOMBRE_VARIABLE estructuraWhenI ENDestructuraWhenI : estructuraWhen estructuraElseestructuraWhen : WHEN sentenciaWhen cuerpo\n                    | estructuraWhen WHEN sentenciaWhen cuerpo\n   sentenciaWhen : estructuraComparacion\n                    | intervaloW\n  intervaloW : ENTERO INTERVALO ENTERO estructuraArray : CORCHETE_I CORCHETE_D\n                     | ARRAY PUNTO NEW\n                     | CORCHETE_I parametrosA CORCHETE_D\n                parametrosA : variablesTotales\n                 | variablesTotales COMA parametrosA\n  funcionesArreglo : TiposNomVariables PUNTO nombreFuncionesA\n                      | estructuraArray PUNTO nombreFuncionesA\n  nombreFuncionesA : PUSH PAR_I variablesTotales PAR_D\n                      | DELETE PAR_I ENTERO PAR_D\n  funcionesString : TiposNomVariables PUNTO nombreFuncionesS\n                     | CADENA PUNTO nombreFuncionesS\n  nombreFuncionesS : INSERT PAR_I ENTERO COMA CADENA PAR_D\n                      | INSERT PAR_I ENTERO COMA TiposNomVariables PAR_D\n                      | INSERT PAR_I TiposNomVariables COMA CADENA PAR_D\n                      | INSERT PAR_I TiposNomVariables COMA TiposNomVariables PAR_D\n                      | SIZE PAR_I  PAR_D\n                      | SIZE\n  estructuraHash : LLAVE_I cuerpoH LLAVE_DcuerpoH : CADENA ASIGNACION valorTodos\n             | cuerpoH COMA CADENA ASIGNACION valorTodos\n  estructuraFunciones : DEF funcionSinAtributos END\n                         | DEF funcionConAtributos END\n                         | DEF funcionConDefectos END\n  funcionSinAtributos : NOMBRE_FUNCION PAR_I PAR_D cuerpo\n  funcionConAtributos : NOMBRE_FUNCION PAR_I parametrosFunciones PAR_D cuerpo\n  parametrosFunciones : NOMBRE_VARIABLE\n                         | NOMBRE_VARIABLE COMA parametrosFunciones\n  llamadoFunciones : NOMBRE_FUNCION PAR_I PAR_D \n                      | NOMBRE_FUNCION PAR_I parametrosA PAR_D\n  funcionConDefectos : NOMBRE_FUNCION PAR_I parametrosFuncionesDefecto PAR_D cuerpoparametrosFuncionesDefecto : NOMBRE_VARIABLE IGUAL valorF\n                                | NOMBRE_VARIABLE IGUAL valorF COMA parametrosFuncionesDefecto \n                                \n  valorF : ENTERO\n            | FLOTANTE\n            | CADENA\n            | TRUE\n            | FALSE\n  estructuraSalida : operadoresSalidas cuerpoSalida\n                      | operadoresSalidas PAR_I cuerpoSalida PAR_D\n                operadoresSalidas : PUTS\n                       | PRINT \n                cuerpoSalida : variablesTotales\n                  | CADENA MAS TiposNomVariables\n                  | operacion\n  estructuraEntrada : GETS PUNTO CHOMP\n                limpiarDatos : STDOUT PUNTO FLUSH\n                 estructuraCasting : castingString\n                        | castingInteger\n                        | castingFloat\n   castingString : ENTERO PUNTO TOSTRING\n                    | FLOTANTE PUNTO TOSTRING\n                    | STRING PAR_I ENTERO PAR_D\n                    | STRING PAR_I FLOTANTE PAR_D\n   castingInteger : CADENA PUNTO TOINTEGER\n                    | FLOTANTE PUNTO TOINTEGER\n                    | INTEGER PAR_I CADENA PAR_D\n                    | INTEGER PAR_I FLOTANTE PAR_D\n   castingFloat : ENTERO PUNTO TOFLOAT\n                    | CADENA PUNTO TOFLOAT\n                    | FLOAT PAR_I ENTERO PAR_D\n                    | FLOAT PAR_I CADENA PAR_D\n  estructuraLeerArchivo : FILE PUNTO READ PAR_I TiposNomVariables PAR_D\n                              | FILE PUNTO READ PAR_I CADENA PAR_D\n    estructuraLeerArchivoLinea : FILE PUNTO READLINES PAR_I TiposNomVariables PAR_D\n                                  | FILE PUNTO READLINES PAR_I CADENA PAR_D\n    estructuraAbrirArchivo : FILE PUNTO OPEN PAR_I TiposNomVariables COMA MODOAPERTURA PAR_D\n                              | FILE PUNTO OPEN PAR_I CADENA COMA MODOAPERTURA PAR_D\n    estructuraRecorrerArchivo : variablesRecorrer PUNTO EACH DO PIPE NOMBRE_VARIABLE PIPE cuerpo END\n                                 | estructuraAbrirArchivo DO PIPE NOMBRE_VARIABLE PIPE cuerpo END\n    estructuraSplit : TiposNomVariables PUNTO SPLIT PAR_I CADENA PAR_DvariablesRecorrer : TiposNomVariables\n                         | estructuraLeerArchivoLinea\n                         | estructuraSplit\n    estructuraEscribirArchivo : FILE PUNTO WRITE PAR_I TiposNomVariables COMA TiposNomVariables PAR_D\n                                 | FILE PUNTO WRITE PAR_I TiposNomVariables COMA CADENA PAR_D\n                                 | FILE PUNTO WRITE PAR_I CADENA COMA CADENA PAR_D\n                                 | FILE PUNTO WRITE PAR_I CADENA COMA TiposNomVariables PAR_D\n                                 | NOMBRE_VARIABLE PUNTO WRITE PAR_I CADENA PAR_D\n    '
    
_lr_action_items = {'NOT':([0,17,18,40,41,42,43,44,45,46,64,73,74,75,76,77,78,79,80,112,113,115,116,123,192,203,204,205,213,220,231,234,235,239,240,241,242,250,262,263,276,305,],[20,-32,-33,-41,-42,-38,-39,-40,20,20,20,-80,-81,-34,-35,-36,-43,-44,-37,20,20,20,20,-78,20,20,-89,-90,-79,20,20,20,20,20,20,-105,-106,-82,20,20,20,-107,]),'CORCHETE_I':([0,17,18,40,41,42,43,44,64,73,74,75,76,77,78,79,80,113,116,123,154,213,220,231,234,235,240,241,242,250,260,262,263,276,305,],[24,-32,-33,-41,-42,-38,-39,-40,24,-80,-81,-34,-35,-36,-43,-44,-37,24,24,-78,24,-79,24,24,24,24,24,-105,-106,-82,24,24,24,24,-107,]),'ARRAY':([0,17,18,40,41,42,43,44,64,73,74,75,76,77,78,79,80,113,116,123,154,213,220,231,234,235,240,241,242,250,260,262,263,276,305,],[25,-32,-33,-41,-42,-38,-39,-40,25,-80,-81,-34,-35,-36,-43,-44,-37,25,25,-78,25,-79,25,25,25,25,25,-105,-106,-82,25,25,25,25,-107,]),'CADENA':([0,17,18,20,24,27,34,40,41,42,43,44,45,46,53,54,55,56,57,58,59,60,61,63,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,103,112,113,115,116,121,122,123,145,147,153,154,192,203,204,205,206,208,213,220,229,230,231,234,235,239,240,241,242,250,260,262,263,265,276,282,283,284,285,298,299,305,],[26,-32,-33,75,75,87,105,-41,-42,-38,-39,-40,75,75,-147,-148,75,-83,-84,-85,-86,-87,-88,75,140,-60,-61,-62,-63,-64,-65,-80,-81,-34,-35,-36,-43,-44,-37,105,75,26,75,26,199,202,-78,75,75,215,75,75,75,-89,-90,75,75,-79,26,270,271,26,26,26,75,26,-105,-106,-82,75,26,26,294,26,307,309,310,313,317,318,-107,]),'LLAVE_I':([0,17,18,40,41,42,43,44,64,73,74,75,76,77,78,79,80,113,116,123,154,213,220,231,234,235,240,241,242,250,260,262,263,276,305,],[27,-32,-33,-41,-42,-38,-39,-40,27,-80,-81,-34,-35,-36,-43,-44,-37,27,27,-78,27,-79,27,27,27,27,27,-105,-106,-82,27,27,27,27,-107,]),'DEF':([0,17,18,40,41,42,43,44,73,74,75,76,77,78,79,80,113,116,123,213,220,231,234,235,240,241,242,250,262,263,276,305,],[28,-32,-33,-41,-42,-38,-39,-40,-80,-81,-34,-35,-36,-43,-44,-37,28,28,-78,-79,28,28,28,28,28,-105,-106,-82,28,28,28,-107,]),'PAR_I':([0,17,18,34,40,41,42,43,44,45,46,50,51,52,53,54,64,73,74,75,76,77,78,79,80,91,93,94,95,96,97,98,103,113,116,123,125,126,138,143,144,168,169,213,220,224,231,234,235,240,241,242,250,255,256,262,263,276,297,305,],[30,-32,-33,103,-41,-42,-38,-39,-40,112,115,120,121,122,-147,-148,30,-80,-81,-34,-35,-36,-43,-44,-37,158,-72,-73,-74,-75,-76,-77,30,30,30,-78,206,207,208,211,212,229,230,-79,30,30,30,30,30,30,-105,-106,-82,282,283,30,30,30,30,-107,]),'GETS':([0,17,18,40,41,42,43,44,64,73,74,75,76,77,78,79,80,113,116,123,213,220,231,234,235,240,241,242,250,262,263,276,305,],[35,-32,-33,-41,-42,-38,-39,-40,35,-80,-81,-34,-35,-36,-43,-44,-37,35,35,-78,-79,35,35,35,35,35,-105,-106,-82,35,35,35,-107,]),'STDOUT':([0,17,18,40,41,42,43,44,73,74,75,76,77,78,79,80,113,116,123,213,220,231,234,235,240,241,242,250,262,263,276,305,],[36,-32,-33,-41,-42,-38,-39,-40,-80,-81,-34,-35,-36,-43,-44,-37,36,36,-78,-79,36,36,36,36,36,-105,-106,-82,36,36,36,-107,]),'FILE':([0,17,18,40,41,42,43,44,64,73,74,75,76,77,78,79,80,113,116,123,213,220,231,234,235,240,241,242,250,262,263,276,305,],[37,-32,-33,-41,-42,-38,-39,-40,139,-80,-81,-34,-35,-36,-43,-44,-37,37,37,-78,-79,37,37,37,37,37,-105,-106,-82,37,37,37,-107,]),'NOMBRE_VARIABLE':([0,17,18,20,24,30,34,40,41,42,43,44,45,46,47,53,54,55,56,57,58,59,60,61,63,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,92,93,94,95,96,97,98,103,112,113,115,116,123,145,147,154,158,160,165,192,203,204,205,206,208,211,213,220,224,227,229,231,234,235,239,240,241,242,250,260,262,263,264,276,282,283,284,285,297,298,299,305,314,],[38,-32,-33,80,80,80,80,-41,-42,-38,-39,-40,80,80,117,-147,-148,80,-83,-84,-85,-86,-87,-88,80,80,-60,-61,-62,-63,-64,-65,-80,-81,-34,-35,-36,-43,-44,-37,80,-72,-73,-74,-75,-76,-77,80,80,38,80,38,-78,80,80,80,223,80,80,80,80,-89,-90,80,80,80,-79,38,80,80,80,38,38,38,80,38,-105,-106,-82,80,38,38,289,38,80,80,80,80,80,80,80,-107,329,]),'TRUE':([0,17,18,20,24,34,40,41,42,43,44,45,46,53,54,55,56,57,58,59,60,61,64,73,74,75,76,77,78,79,80,103,112,113,115,116,123,145,147,154,192,203,204,205,206,208,213,220,231,234,235,239,240,241,242,250,260,262,263,265,276,305,],[40,-32,-33,40,40,40,-41,-42,-38,-39,-40,40,40,-147,-148,40,-83,-84,-85,-86,-87,-88,40,-80,-81,-34,-35,-36,-43,-44,-37,40,40,40,40,40,-78,40,40,40,40,40,-89,-90,40,40,-79,40,40,40,40,40,40,-105,-106,-82,40,40,40,295,40,-107,]),'FALSE':([0,17,18,20,24,34,40,41,42,43,44,45,46,53,54,55,56,57,58,59,60,61,64,73,74,75,76,77,78,79,80,103,112,113,115,116,123,145,147,154,192,203,204,205,206,208,213,220,231,234,235,239,240,241,242,250,260,262,263,265,276,305,],[41,-32,-33,41,41,41,-41,-42,-38,-39,-40,41,41,-147,-148,41,-83,-84,-85,-86,-87,-88,41,-80,-81,-34,-35,-36,-43,-44,-37,41,41,41,41,41,-78,41,41,41,41,41,-89,-90,41,41,-79,41,41,41,41,41,41,-105,-106,-82,41,41,41,296,41,-107,]),'VARIABLE_GLOBAL':([0,17,18,20,24,30,34,40,41,42,43,44,45,46,53,54,55,56,57,58,59,60,61,63,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,92,93,94,95,96,97,98,103,112,113,115,116,123,145,147,154,160,165,192,203,204,205,206,208,211,213,220,224,227,229,231,234,235,239,240,241,242,250,260,262,263,276,282,283,284,285,297,298,299,305,],[42,-32,-33,42,42,42,42,-41,-42,-38,-39,-40,42,42,-147,-148,42,-83,-84,-85,-86,-87,-88,42,42,-60,-61,-62,-63,-64,-65,-80,-81,-34,-35,-36,-43,-44,-37,42,-72,-73,-74,-75,-76,-77,42,42,42,42,42,-78,42,42,42,42,42,42,42,-89,-90,42,42,42,-79,42,42,42,42,42,42,42,42,42,-105,-106,-82,42,42,42,42,42,42,42,42,42,42,42,-107,]),'VARIABLE_INSTANCIA':([0,17,18,20,24,30,34,40,41,42,43,44,45,46,53,54,55,56,57,58,59,60,61,63,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,92,93,94,95,96,97,98,103,112,113,115,116,123,145,147,154,160,165,192,203,204,205,206,208,211,213,220,224,227,229,231,234,235,239,240,241,242,250,260,262,263,276,282,283,284,285,297,298,299,305,],[43,-32,-33,43,43,43,43,-41,-42,-38,-39,-40,43,43,-147,-148,43,-83,-84,-85,-86,-87,-88,43,43,-60,-61,-62,-63,-64,-65,-80,-81,-34,-35,-36,-43,-44,-37,43,-72,-73,-74,-75,-76,-77,43,43,43,43,43,-78,43,43,43,43,43,43,43,-89,-90,43,43,43,-79,43,43,43,43,43,43,43,43,43,-105,-106,-82,43,43,43,43,43,43,43,43,43,43,43,-107,]),'VARIABLE_CLASE':([0,17,18,20,24,30,34,40,41,42,43,44,45,46,53,54,55,56,57,58,59,60,61,63,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,92,93,94,95,96,97,98,103,112,113,115,116,123,145,147,154,160,165,192,203,204,205,206,208,211,213,220,224,227,229,231,234,235,239,240,241,242,250,260,262,263,276,282,283,284,285,297,298,299,305,],[44,-32,-33,44,44,44,44,-41,-42,-38,-39,-40,44,44,-147,-148,44,-83,-84,-85,-86,-87,-88,44,44,-60,-61,-62,-63,-64,-65,-80,-81,-34,-35,-36,-43,-44,-37,44,-72,-73,-74,-75,-76,-77,44,44,44,44,44,-78,44,44,44,44,44,44,44,-89,-90,44,44,44,-79,44,44,44,44,44,44,44,44,44,-105,-106,-82,44,44,44,44,44,44,44,44,44,44,44,-107,]),'IF':([0,17,18,40,41,42,43,44,73,74,75,76,77,78,79,80,113,116,123,213,220,231,234,235,240,241,242,250,262,263,276,305,],[45,-32,-33,-41,-42,-38,-39,-40,-80,-81,-34,-35,-36,-43,-44,-37,45,45,-78,-79,45,45,45,45,45,-105,-106,-82,45,45,45,-107,]),'UNTIL':([0,17,18,40,41,42,43,44,73,74,75,76,77,78,79,80,113,116,123,213,220,231,234,235,240,241,242,250,262,263,276,305,],[46,-32,-33,-41,-42,-38,-39,-40,-80,-81,-34,-35,-36,-43,-44,-37,46,46,-78,-79,46,46,46,46,46,-105,-106,-82,46,46,46,-107,]),'CASE':([0,17,18,40,41,42,43,44,73,74,75,76,77,78,79,80,113,116,123,213,220,231,234,235,240,241,242,250,262,263,276,305,],[47,-32,-33,-41,-42,-38,-39,-40,-80,-81,-34,-35,-36,-43,-44,-37,47,47,-78,-79,47,47,47,47,47,-105,-106,-82,47,47,47,-107,]),'ENTERO':([0,17,18,20,24,30,34,40,41,42,43,44,45,46,53,54,55,56,57,58,59,60,61,63,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,92,93,94,95,96,97,98,103,112,113,115,116,120,122,123,145,147,154,160,192,203,204,205,206,207,208,211,213,220,224,227,231,234,235,239,240,241,242,250,260,262,263,265,276,278,297,305,],[48,-32,-33,78,78,78,78,-41,-42,-38,-39,-40,78,78,-147,-148,78,-83,-84,-85,-86,-87,-88,78,48,-60,-61,-62,-63,-64,-65,-80,-81,-34,-35,-36,-43,-44,-37,78,-72,-73,-74,-75,-76,-77,78,78,48,78,48,197,201,-78,78,78,78,78,243,78,-89,-90,78,252,78,257,-79,48,78,78,48,48,48,243,48,-105,-106,-82,78,48,48,292,48,305,78,-107,]),'FLOTANTE':([0,17,18,20,24,30,34,40,41,42,43,44,45,46,53,54,55,56,57,58,59,60,61,63,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,92,93,94,95,96,97,98,103,112,113,115,116,120,121,123,145,147,154,160,192,203,204,205,206,208,213,220,224,227,231,234,235,239,240,241,242,250,260,262,263,265,276,297,305,],[49,-32,-33,79,79,79,79,-41,-42,-38,-39,-40,79,79,-147,-148,79,-83,-84,-85,-86,-87,-88,79,49,-60,-61,-62,-63,-64,-65,-80,-81,-34,-35,-36,-43,-44,-37,79,-72,-73,-74,-75,-76,-77,79,79,49,79,49,198,200,-78,79,79,79,79,79,79,-89,-90,79,79,-79,49,79,79,49,49,49,79,49,-105,-106,-82,79,49,49,293,49,79,-107,]),'STRING':([0,17,18,40,41,42,43,44,64,73,74,75,76,77,78,79,80,113,116,123,213,220,231,234,235,240,241,242,250,262,263,276,305,],[50,-32,-33,-41,-42,-38,-39,-40,50,-80,-81,-34,-35,-36,-43,-44,-37,50,50,-78,-79,50,50,50,50,50,-105,-106,-82,50,50,50,-107,]),'INTEGER':([0,17,18,40,41,42,43,44,64,73,74,75,76,77,78,79,80,113,116,123,213,220,231,234,235,240,241,242,250,262,263,276,305,],[51,-32,-33,-41,-42,-38,-39,-40,51,-80,-81,-34,-35,-36,-43,-44,-37,51,51,-78,-79,51,51,51,51,51,-105,-106,-82,51,51,51,-107,]),'FLOAT':([0,17,18,40,41,42,43,44,64,73,74,75,76,77,78,79,80,113,116,123,213,220,231,234,235,240,241,242,250,262,263,276,305,],[52,-32,-33,-41,-42,-38,-39,-40,52,-80,-81,-34,-35,-36,-43,-44,-37,52,52,-78,-79,52,52,52,52,52,-105,-106,-82,52,52,52,-107,]),'PUTS':([0,17,18,40,41,42,43,44,73,74,75,76,77,78,79,80,113,116,123,213,220,231,234,235,240,241,242,250,262,263,276,305,],[53,-32,-33,-41,-42,-38,-39,-40,-80,-81,-34,-35,-36,-43,-44,-37,53,53,-78,-79,53,53,53,53,53,-105,-106,-82,53,53,53,-107,]),'PRINT':([0,17,18,40,41,42,43,44,73,74,75,76,77,78,79,80,113,116,123,213,220,231,234,235,240,241,242,250,262,263,276,305,],[54,-32,-33,-41,-42,-38,-39,-40,-80,-81,-34,-35,-36,-43,-44,-37,54,54,-78,-79,54,54,54,54,54,-105,-106,-82,54,54,54,-107,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,26,31,32,33,38,39,40,41,42,43,44,48,49,73,74,75,76,77,78,79,80,81,100,101,102,104,105,106,107,123,124,127,128,129,130,131,132,133,134,135,136,137,140,141,142,144,146,148,149,150,151,152,155,156,157,159,166,167,193,194,195,196,213,226,228,232,236,237,244,245,246,247,248,249,250,253,259,266,267,273,279,280,281,300,301,303,315,320,323,324,325,326,327,328,331,332,333,334,337,338,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-32,-33,-36,-91,-92,-93,-34,-154,-155,-156,-37,-35,-41,-42,-38,-39,-40,-43,-44,-80,-81,-34,-35,-36,-43,-44,-37,-108,-70,-71,-145,-149,-34,-36,-151,-78,-114,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-34,-113,-117,-124,-110,-109,-118,-161,-166,-125,-128,-129,-130,-66,-152,-153,-157,-165,-158,-162,-79,-146,-150,-95,-99,-101,-159,-160,-163,-164,-167,-168,-82,-135,-123,-68,-67,-97,-115,-116,-136,-185,-94,-98,-69,-96,-169,-170,-119,-120,-122,-121,-181,-182,-183,-184,-173,-174,]),'MENOR_QUE':([2,17,18,19,26,38,39,40,41,42,43,44,48,49,72,73,74,75,76,77,78,79,80,106,114,128,140,173,243,],[56,-32,-33,-36,-34,-37,-35,-41,-42,-38,-39,-40,-43,-44,56,-32,-33,-34,-35,-36,-43,-44,-37,-36,56,56,-34,56,-43,]),'MAYOR_QUE':([2,17,18,19,26,38,39,40,41,42,43,44,48,49,72,73,74,75,76,77,78,79,80,106,114,128,140,173,243,],[57,-32,-33,-36,-34,-37,-35,-41,-42,-38,-39,-40,-43,-44,57,-32,-33,-34,-35,-36,-43,-44,-37,-36,57,57,-34,57,-43,]),'MAYOR_IGUAL':([2,17,18,19,26,38,39,40,41,42,43,44,48,49,72,73,74,75,76,77,78,79,80,106,114,128,140,173,243,],[58,-32,-33,-36,-34,-37,-35,-41,-42,-38,-39,-40,-43,-44,58,-32,-33,-34,-35,-36,-43,-44,-37,-36,58,58,-34,58,-43,]),'DOBLE_IGUAL':([2,17,18,19,26,38,39,40,41,42,43,44,48,49,72,73,74,75,76,77,78,79,80,106,114,128,140,173,243,],[59,-32,-33,-36,-34,-37,-35,-41,-42,-38,-39,-40,-43,-44,59,-32,-33,-34,-35,-36,-43,-44,-37,-36,59,59,-34,59,-43,]),'MENOR_IGUAL':([2,17,18,19,26,38,39,40,41,42,43,44,48,49,72,73,74,75,76,77,78,79,80,106,114,128,140,173,243,],[60,-32,-33,-36,-34,-37,-35,-41,-42,-38,-39,-40,-43,-44,60,-32,-33,-34,-35,-36,-43,-44,-37,-36,60,60,-34,60,-43,]),'NO_IGUAL':([2,17,18,19,26,38,39,40,41,42,43,44,48,49,72,73,74,75,76,77,78,79,80,106,114,128,140,173,243,],[61,-32,-33,-36,-34,-37,-35,-41,-42,-38,-39,-40,-43,-44,61,-32,-33,-34,-35,-36,-43,-44,-37,-36,61,61,-34,61,-43,]),'PUNTO':([6,19,25,26,35,36,37,38,42,43,44,48,49,81,139,140,146,148,176,],[62,65,84,85,108,109,110,111,-38,-39,-40,118,119,-108,209,210,-110,-109,62,]),'COMA':([17,18,40,41,42,43,44,75,76,77,78,79,80,81,83,86,146,148,152,216,217,218,219,223,257,258,269,270,286,289,291,292,293,294,295,296,306,307,],[-32,-33,-41,-42,-38,-39,-40,-34,-35,-36,-43,-44,-37,-108,147,153,-110,-109,-125,-126,-46,-47,-48,264,284,285,298,299,-127,264,314,-140,-141,-142,-143,-144,321,322,]),'CORCHETE_D':([17,18,24,40,41,42,43,44,75,76,77,78,79,80,82,83,214,],[-32,-33,81,-41,-42,-38,-39,-40,-34,-35,-36,-43,-44,-37,146,-111,-112,]),'END':([17,18,19,21,22,23,26,31,32,33,38,39,40,41,42,43,44,48,49,73,74,75,76,77,78,79,80,81,88,89,90,100,101,102,104,105,106,107,123,124,127,128,129,130,131,132,133,134,135,136,137,140,141,142,144,146,148,149,150,151,152,155,156,157,159,166,167,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,193,194,195,196,213,226,228,232,233,236,237,238,244,245,246,247,248,249,250,253,259,261,266,267,272,273,274,275,279,280,281,287,288,300,301,302,303,315,320,323,324,325,326,327,328,331,332,333,334,337,338,],[-32,-33,-36,-91,-92,-93,-34,-154,-155,-156,-37,-35,-41,-42,-38,-39,-40,-43,-44,-80,-81,-34,-35,-36,-43,-44,-37,-108,155,156,157,-70,-71,-145,-149,-34,-36,-151,-78,-114,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-34,-113,-117,-124,-110,-109,-118,-161,-166,-125,-128,-129,-130,-66,-152,-153,-18,232,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,236,237,-157,-165,-158,-162,-79,-146,-150,-95,273,-99,-101,-102,-159,-160,-163,-164,-167,-168,-82,-135,-123,-131,-68,-67,301,-97,-100,303,-115,-116,-136,-132,-137,-185,-94,320,-98,-69,-96,-169,-170,-119,-120,-122,-121,-181,-182,-183,-184,-173,-174,]),'ELSE':([17,18,19,21,22,23,26,31,32,33,38,39,40,41,42,43,44,48,49,73,74,75,76,77,78,79,80,81,100,101,102,104,105,106,107,123,124,127,128,129,130,131,132,133,134,135,136,137,140,141,142,144,146,148,149,150,151,152,155,156,157,159,166,167,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,191,193,194,195,196,213,226,228,232,236,237,244,245,246,247,248,249,250,253,259,266,267,272,273,277,279,280,281,300,301,303,304,315,320,323,324,325,326,327,328,331,332,333,334,337,338,],[-32,-33,-36,-91,-92,-93,-34,-154,-155,-156,-37,-35,-41,-42,-38,-39,-40,-43,-44,-80,-81,-34,-35,-36,-43,-44,-37,-108,-70,-71,-145,-149,-34,-36,-151,-78,-114,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-34,-113,-117,-124,-110,-109,-118,-161,-166,-125,-128,-129,-130,-66,-152,-153,-18,234,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,234,-157,-165,-158,-162,-79,-146,-150,-95,-99,-101,-159,-160,-163,-164,-167,-168,-82,-135,-123,-68,-67,234,-97,-103,-115,-116,-136,-185,-94,-98,-104,-69,-96,-169,-170,-119,-120,-122,-121,-181,-182,-183,-184,-173,-174,]),'WHEN':([17,18,19,21,22,23,26,31,32,33,38,39,40,41,42,43,44,48,49,73,74,75,76,77,78,79,80,81,100,101,102,104,105,106,107,117,123,124,127,128,129,130,131,132,133,134,135,136,137,140,141,142,144,146,148,149,150,151,152,155,156,157,159,166,167,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,191,193,194,195,196,213,226,228,232,236,237,244,245,246,247,248,249,250,253,259,266,267,273,277,279,280,281,300,301,303,304,315,320,323,324,325,326,327,328,331,332,333,334,337,338,],[-32,-33,-36,-91,-92,-93,-34,-154,-155,-156,-37,-35,-41,-42,-38,-39,-40,-43,-44,-80,-81,-34,-35,-36,-43,-44,-37,-108,-70,-71,-145,-149,-34,-36,-151,192,-78,-114,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-34,-113,-117,-124,-110,-109,-118,-161,-166,-125,-128,-129,-130,-66,-152,-153,-18,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,239,-157,-165,-158,-162,-79,-146,-150,-95,-99,-101,-159,-160,-163,-164,-167,-168,-82,-135,-123,-68,-67,-97,-103,-115,-116,-136,-185,-94,-98,-104,-69,-96,-169,-170,-119,-120,-122,-121,-181,-182,-183,-184,-173,-174,]),'AND':([17,18,40,41,42,43,44,75,76,77,78,79,80,123,],[-32,-33,-41,-42,-38,-39,-40,-34,-35,-36,-43,-44,-37,204,]),'OR':([17,18,40,41,42,43,44,75,76,77,78,79,80,123,],[-32,-33,-41,-42,-38,-39,-40,-34,-35,-36,-43,-44,-37,205,]),'NOMBRE_FUNCION':([17,18,28,40,41,42,43,44,64,73,74,75,76,77,78,79,80,113,116,123,213,220,231,234,235,240,241,242,250,262,263,276,305,],[-32,-33,91,-41,-42,-38,-39,-40,138,-80,-81,-34,-35,-36,-43,-44,-37,138,138,-78,-79,138,138,138,138,138,-105,-106,-82,138,138,138,-107,]),'PAR_D':([17,18,40,41,42,43,44,73,74,75,76,77,78,79,80,83,100,101,104,105,107,123,158,159,161,163,164,170,188,197,198,199,200,201,202,208,212,213,214,221,222,223,225,228,250,251,252,254,266,267,268,271,289,290,291,292,293,294,295,296,308,309,310,311,312,313,315,316,317,318,319,330,335,336,],[-32,-33,-41,-42,-38,-39,-40,-80,-81,-34,-35,-36,-43,-44,-37,-111,-70,-71,-149,-34,-151,-78,220,-66,226,-36,-35,231,235,244,245,246,247,248,249,253,259,-79,-112,262,263,-133,267,-150,-82,279,280,281,-68,-67,267,300,-133,-134,-138,-140,-141,-142,-143,-144,323,324,325,326,327,328,-69,331,332,333,334,-139,337,338,]),'LLAVE_D':([17,18,40,41,42,43,44,75,76,77,78,79,80,81,86,146,148,152,216,217,218,219,286,],[-32,-33,-41,-42,-38,-39,-40,-34,-35,-36,-43,-44,-37,-108,152,-110,-109,-125,-126,-46,-47,-48,-127,]),'IGUAL':([19,38,42,43,44,223,329,],[64,-37,-38,-39,-40,265,265,]),'MAS':([19,29,38,39,42,43,44,48,49,78,79,80,99,100,101,105,106,159,162,163,164,267,268,],[-71,93,-37,-70,-38,-39,-40,-43,-44,-43,-44,-37,93,-70,-71,165,-71,93,93,-71,-70,93,93,]),'MENOS':([19,29,38,39,42,43,44,48,49,78,79,80,99,100,101,106,159,162,163,164,267,268,],[-71,94,-37,-70,-38,-39,-40,-43,-44,-43,-44,-37,94,-70,-71,-71,94,94,-71,-70,94,94,]),'MULTIPLICACION':([19,29,38,39,42,43,44,48,49,78,79,80,99,100,101,106,159,162,163,164,267,268,],[-71,95,-37,-70,-38,-39,-40,-43,-44,-43,-44,-37,95,-70,-71,-71,95,95,-71,-70,95,95,]),'POTENCIA':([19,29,38,39,42,43,44,48,49,78,79,80,99,100,101,106,159,162,163,164,267,268,],[-71,96,-37,-70,-38,-39,-40,-43,-44,-43,-44,-37,96,-70,-71,-71,96,96,-71,-70,96,96,]),'DIV':([19,29,38,39,42,43,44,48,49,78,79,80,99,100,101,106,159,162,163,164,267,268,],[-71,97,-37,-70,-38,-39,-40,-43,-44,-43,-44,-37,97,-70,-71,-71,97,97,-71,-70,97,97,]),'MODULO':([19,29,38,39,42,43,44,48,49,78,79,80,99,100,101,106,159,162,163,164,267,268,],[-71,98,-37,-70,-38,-39,-40,-43,-44,-43,-44,-37,98,-70,-71,-71,98,98,-71,-70,98,98,]),'MAS_IGUAL':([19,38,42,43,44,],[66,-37,-38,-39,-40,]),'RESTA_IGUAL':([19,38,42,43,44,],[67,-37,-38,-39,-40,]),'MULTIPLICACION_IGUAL':([19,38,42,43,44,],[68,-37,-38,-39,-40,]),'DIVISION_IGUAL':([19,38,42,43,44,],[69,-37,-38,-39,-40,]),'MODULO_IGUAL':([19,38,42,43,44,],[70,-37,-38,-39,-40,]),'EXPONENCIAL_IGUAL':([19,38,42,43,44,],[71,-37,-38,-39,-40,]),'PUSH':([62,65,],[125,125,]),'DELETE':([62,65,],[126,126,]),'INSERT':([65,85,],[143,143,]),'SIZE':([65,85,],[144,144,]),'NEW':([84,],[148,]),'TOINTEGER':([85,119,210,],[150,196,150,]),'TOFLOAT':([85,118,210,],[151,194,151,]),'ASIGNACION':([87,215,],[154,260,]),'CHOMP':([108,],[166,]),'FLUSH':([109,],[167,]),'WRITE':([110,111,],[168,169,]),'TOSTRING':([118,119,],[193,195,]),'OPEN':([209,],[255,]),'READ':([209,],[256,]),'INTERVALO':([243,],[278,]),'MODOAPERTURA':([321,322,],[335,336,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,],[1,]),'variablesTotales':([0,20,24,34,45,46,55,64,103,112,113,115,116,145,147,154,192,203,206,208,220,231,234,235,239,240,260,262,263,276,],[2,72,83,104,114,114,123,128,104,114,173,114,173,213,83,217,114,114,251,83,173,173,173,173,114,173,217,173,173,173,]),'estructuraAsignacion':([0,113,116,220,231,234,235,240,262,263,276,],[3,174,174,174,174,174,174,174,174,174,174,]),'estructuraComparacion':([0,45,46,64,112,113,115,116,192,203,220,231,234,235,239,240,262,263,276,],[4,113,116,130,170,171,188,171,241,250,171,171,171,171,241,171,171,171,171,]),'estructurasControl':([0,113,116,220,231,234,235,240,262,263,276,],[5,175,175,175,175,175,175,175,175,175,175,]),'estructuraArray':([0,64,113,116,154,220,231,234,235,240,260,262,263,276,],[6,131,176,176,219,176,176,176,176,176,219,176,176,176,]),'funcionesArreglo':([0,113,116,220,231,234,235,240,262,263,276,],[7,177,177,177,177,177,177,177,177,177,177,]),'funcionesString':([0,113,116,220,231,234,235,240,262,263,276,],[8,178,178,178,178,178,178,178,178,178,178,]),'estructuraHash':([0,64,113,116,154,220,231,234,235,240,260,262,263,276,],[9,132,179,179,218,179,179,179,179,179,218,179,179,179,]),'estructuraFunciones':([0,113,116,220,231,234,235,240,262,263,276,],[10,180,180,180,180,180,180,180,180,180,180,]),'operacion':([0,34,64,103,113,116,220,224,231,234,235,240,262,263,276,297,],[11,107,129,107,182,182,182,266,182,182,182,182,182,182,182,315,]),'estructuraCasting':([0,64,113,116,220,231,234,235,240,262,263,276,],[12,134,183,183,183,183,183,183,183,183,183,183,]),'estructuraSalida':([0,113,116,220,231,234,235,240,262,263,276,],[13,184,184,184,184,184,184,184,184,184,184,]),'estructuraEntrada':([0,64,113,116,220,231,234,235,240,262,263,276,],[14,135,185,185,185,185,185,185,185,185,185,185,]),'limpiarDatos':([0,113,116,220,231,234,235,240,262,263,276,],[15,186,186,186,186,186,186,186,186,186,186,]),'estructuraEscribirArchivo':([0,113,116,220,231,234,235,240,262,263,276,],[16,187,187,187,187,187,187,187,187,187,187,]),'variables':([0,20,24,34,45,46,55,63,64,103,112,113,115,116,145,147,154,192,203,206,208,220,231,234,235,239,240,260,262,263,276,],[17,73,17,17,17,17,17,127,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'boleanos':([0,20,24,34,45,46,55,64,103,112,113,115,116,145,147,154,192,203,206,208,220,231,234,235,239,240,260,262,263,276,],[18,74,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'TiposNomVariables':([0,20,24,30,34,45,46,55,63,64,92,103,112,113,115,116,145,147,154,160,165,192,203,206,208,211,220,224,227,229,231,234,235,239,240,260,262,263,276,282,283,284,285,297,298,299,],[19,77,77,101,106,77,77,77,77,106,101,163,77,19,77,19,77,77,77,101,228,77,77,77,77,258,19,101,101,269,19,19,19,77,19,77,19,19,19,306,308,311,312,101,316,319,]),'estructuraIf':([0,113,116,220,231,234,235,240,262,263,276,],[21,21,21,21,21,21,21,21,21,21,21,]),'estructuraUntil':([0,113,116,220,231,234,235,240,262,263,276,],[22,22,22,22,22,22,22,22,22,22,22,]),'estructuraCase':([0,113,116,220,231,234,235,240,262,263,276,],[23,23,23,23,23,23,23,23,23,23,23,]),'variablesoperacion':([0,30,34,64,92,103,113,116,160,220,224,227,231,234,235,240,262,263,276,297,],[29,99,29,29,159,162,29,29,225,29,29,268,29,29,29,29,29,29,29,29,]),'castingString':([0,64,113,116,220,231,234,235,240,262,263,276,],[31,31,31,31,31,31,31,31,31,31,31,31,]),'castingInteger':([0,64,113,116,220,231,234,235,240,262,263,276,],[32,32,32,32,32,32,32,32,32,32,32,32,]),'castingFloat':([0,64,113,116,220,231,234,235,240,262,263,276,],[33,33,33,33,33,33,33,33,33,33,33,33,]),'operadoresSalidas':([0,113,116,220,231,234,235,240,262,263,276,],[34,34,34,34,34,34,34,34,34,34,34,]),'numericos':([0,20,24,30,34,45,46,55,63,64,92,103,112,113,115,116,145,147,154,160,192,203,206,208,220,224,227,231,234,235,239,240,260,262,263,276,297,],[39,76,76,100,39,76,76,76,76,39,100,164,76,39,76,39,76,76,76,100,76,76,76,76,39,100,100,39,39,39,76,39,76,39,39,39,100,]),'comparador':([2,72,114,128,173,],[55,145,55,55,55,]),'tipoAsignacion':([19,],[63,]),'parametrosA':([24,147,208,],[82,214,254,]),'cuerpoH':([27,],[86,]),'funcionSinAtributos':([28,],[88,]),'funcionConAtributos':([28,],[89,]),'funcionConDefectos':([28,],[90,]),'operador':([29,99,159,162,267,268,],[92,160,224,227,297,224,]),'cuerpoSalida':([34,103,],[102,161,]),'nombreFuncionesA':([62,65,],[124,141,]),'llamadoFunciones':([64,113,116,220,231,234,235,240,262,263,276,],[133,181,181,181,181,181,181,181,181,181,181,]),'estructuraAbrirArchivo':([64,],[136,]),'estructuraLeerArchivo':([64,],[137,]),'nombreFuncionesS':([65,85,],[142,149,]),'cuerpo':([113,116,220,231,234,235,240,262,263,276,],[172,189,261,272,274,275,277,287,288,304,]),'estructuraWhenI':([117,],[190,]),'estructuraWhen':([117,],[191,]),'operadoresComparacion':([123,],[203,]),'valorTodos':([154,260,],[216,286,]),'parametrosFunciones':([158,264,],[221,290,]),'parametrosFuncionesDefecto':([158,314,],[222,330,]),'estructuraElse':([172,191,272,],[233,238,302,]),'sentenciaWhen':([192,239,],[240,276,]),'intervaloW':([192,239,],[242,242,]),'valorF':([265,],[291,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> variablesTotales','instrucciones',1,'p_instrucciones','Sintactico.py',7),
  ('instrucciones -> estructuraAsignacion','instrucciones',1,'p_instrucciones','Sintactico.py',8),
  ('instrucciones -> estructuraComparacion','instrucciones',1,'p_instrucciones','Sintactico.py',9),
  ('instrucciones -> estructurasControl','instrucciones',1,'p_instrucciones','Sintactico.py',10),
  ('instrucciones -> estructuraArray','instrucciones',1,'p_instrucciones','Sintactico.py',11),
  ('instrucciones -> funcionesArreglo','instrucciones',1,'p_instrucciones','Sintactico.py',12),
  ('instrucciones -> funcionesString','instrucciones',1,'p_instrucciones','Sintactico.py',13),
  ('instrucciones -> estructuraHash','instrucciones',1,'p_instrucciones','Sintactico.py',14),
  ('instrucciones -> estructuraFunciones','instrucciones',1,'p_instrucciones','Sintactico.py',15),
  ('instrucciones -> operacion','instrucciones',1,'p_instrucciones','Sintactico.py',16),
  ('instrucciones -> estructuraCasting','instrucciones',1,'p_instrucciones','Sintactico.py',17),
  ('instrucciones -> estructuraSalida','instrucciones',1,'p_instrucciones','Sintactico.py',18),
  ('instrucciones -> estructuraEntrada','instrucciones',1,'p_instrucciones','Sintactico.py',19),
  ('instrucciones -> limpiarDatos','instrucciones',1,'p_instrucciones','Sintactico.py',20),
  ('instrucciones -> estructuraEscribirArchivo','instrucciones',1,'p_instrucciones','Sintactico.py',21),
  ('cuerpo -> variablesTotales','cuerpo',1,'p_cuerpo','Sintactico.py',24),
  ('cuerpo -> estructuraAsignacion','cuerpo',1,'p_cuerpo','Sintactico.py',25),
  ('cuerpo -> estructuraComparacion','cuerpo',1,'p_cuerpo','Sintactico.py',26),
  ('cuerpo -> estructurasControl','cuerpo',1,'p_cuerpo','Sintactico.py',27),
  ('cuerpo -> estructuraArray','cuerpo',1,'p_cuerpo','Sintactico.py',28),
  ('cuerpo -> funcionesArreglo','cuerpo',1,'p_cuerpo','Sintactico.py',29),
  ('cuerpo -> funcionesString','cuerpo',1,'p_cuerpo','Sintactico.py',30),
  ('cuerpo -> estructuraHash','cuerpo',1,'p_cuerpo','Sintactico.py',31),
  ('cuerpo -> estructuraFunciones','cuerpo',1,'p_cuerpo','Sintactico.py',32),
  ('cuerpo -> llamadoFunciones','cuerpo',1,'p_cuerpo','Sintactico.py',33),
  ('cuerpo -> operacion','cuerpo',1,'p_cuerpo','Sintactico.py',34),
  ('cuerpo -> estructuraCasting','cuerpo',1,'p_cuerpo','Sintactico.py',35),
  ('cuerpo -> estructuraSalida','cuerpo',1,'p_cuerpo','Sintactico.py',36),
  ('cuerpo -> estructuraEntrada','cuerpo',1,'p_cuerpo','Sintactico.py',37),
  ('cuerpo -> limpiarDatos','cuerpo',1,'p_cuerpo','Sintactico.py',38),
  ('cuerpo -> estructuraEscribirArchivo','cuerpo',1,'p_cuerpo','Sintactico.py',39),
  ('variablesTotales -> variables','variablesTotales',1,'p_variablesTotales','Sintactico.py',44),
  ('variablesTotales -> boleanos','variablesTotales',1,'p_variablesTotales','Sintactico.py',45),
  ('variables -> CADENA','variables',1,'p_variables','Sintactico.py',49),
  ('variables -> numericos','variables',1,'p_variables','Sintactico.py',50),
  ('variables -> TiposNomVariables','variables',1,'p_variables','Sintactico.py',51),
  ('TiposNomVariables -> NOMBRE_VARIABLE','TiposNomVariables',1,'p_TiposNomVariables','Sintactico.py',56),
  ('TiposNomVariables -> VARIABLE_GLOBAL','TiposNomVariables',1,'p_TiposNomVariables','Sintactico.py',57),
  ('TiposNomVariables -> VARIABLE_INSTANCIA','TiposNomVariables',1,'p_TiposNomVariables','Sintactico.py',58),
  ('TiposNomVariables -> VARIABLE_CLASE','TiposNomVariables',1,'p_TiposNomVariables','Sintactico.py',59),
  ('boleanos -> TRUE','boleanos',1,'p_boleanos','Sintactico.py',62),
  ('boleanos -> FALSE','boleanos',1,'p_boleanos','Sintactico.py',63),
  ('numericos -> ENTERO','numericos',1,'p_numericos','Sintactico.py',67),
  ('numericos -> FLOTANTE','numericos',1,'p_numericos','Sintactico.py',68),
  ('estructuraClase -> CLASS NOMBRE_CLASE','estructuraClase',2,'p_estructuraClase','Sintactico.py',72),
  ('valorTodos -> variablesTotales','valorTodos',1,'p_valorTodos','Sintactico.py',75),
  ('valorTodos -> estructuraHash','valorTodos',1,'p_valorTodos','Sintactico.py',76),
  ('valorTodos -> estructuraArray','valorTodos',1,'p_valorTodos','Sintactico.py',77),
  ('estructuraAsignacion -> TiposNomVariables tipoAsignacion variables','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',82),
  ('estructuraAsignacion -> TiposNomVariables IGUAL variablesTotales','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',83),
  ('estructuraAsignacion -> TiposNomVariables IGUAL operacion','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',84),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraComparacion','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',85),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraArray','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',86),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraHash','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',87),
  ('estructuraAsignacion -> TiposNomVariables IGUAL llamadoFunciones','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',88),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraCasting','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',89),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraEntrada','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',90),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraAbrirArchivo','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',91),
  ('estructuraAsignacion -> TiposNomVariables IGUAL estructuraLeerArchivo','estructuraAsignacion',3,'p_estructuraAsignacion','Sintactico.py',92),
  ('tipoAsignacion -> MAS_IGUAL','tipoAsignacion',1,'p_tipoAsignacion','Sintactico.py',96),
  ('tipoAsignacion -> RESTA_IGUAL','tipoAsignacion',1,'p_tipoAsignacion','Sintactico.py',97),
  ('tipoAsignacion -> MULTIPLICACION_IGUAL','tipoAsignacion',1,'p_tipoAsignacion','Sintactico.py',98),
  ('tipoAsignacion -> DIVISION_IGUAL','tipoAsignacion',1,'p_tipoAsignacion','Sintactico.py',99),
  ('tipoAsignacion -> MODULO_IGUAL','tipoAsignacion',1,'p_tipoAsignacion','Sintactico.py',100),
  ('tipoAsignacion -> EXPONENCIAL_IGUAL','tipoAsignacion',1,'p_tipoAsignacion','Sintactico.py',101),
  ('operacion -> variablesoperacion operador variablesoperacion','operacion',3,'p_operacion','Sintactico.py',107),
  ('operacion -> PAR_I variablesoperacion operador variablesoperacion PAR_D','operacion',5,'p_operacion','Sintactico.py',108),
  ('operacion -> variablesoperacion operador variablesoperacion operador operacion','operacion',5,'p_operacion','Sintactico.py',109),
  ('operacion -> PAR_I variablesoperacion operador variablesoperacion PAR_D operador operacion','operacion',7,'p_operacion','Sintactico.py',110),
  ('variablesoperacion -> numericos','variablesoperacion',1,'p_variablesoperacion','Sintactico.py',114),
  ('variablesoperacion -> TiposNomVariables','variablesoperacion',1,'p_variablesoperacion','Sintactico.py',115),
  ('operador -> MAS','operador',1,'p_operador','Sintactico.py',119),
  ('operador -> MENOS','operador',1,'p_operador','Sintactico.py',120),
  ('operador -> MULTIPLICACION','operador',1,'p_operador','Sintactico.py',121),
  ('operador -> POTENCIA','operador',1,'p_operador','Sintactico.py',122),
  ('operador -> DIV','operador',1,'p_operador','Sintactico.py',123),
  ('operador -> MODULO','operador',1,'p_operador','Sintactico.py',124),
  ('estructuraComparacion -> variablesTotales comparador variablesTotales','estructuraComparacion',3,'p_estructuraComparacion','Sintactico.py',128),
  ('estructuraComparacion -> NOT variablesTotales comparador variablesTotales','estructuraComparacion',4,'p_estructuraComparacion','Sintactico.py',129),
  ('estructuraComparacion -> NOT variables','estructuraComparacion',2,'p_estructuraComparacion','Sintactico.py',130),
  ('estructuraComparacion -> NOT boleanos','estructuraComparacion',2,'p_estructuraComparacion','Sintactico.py',131),
  ('estructuraComparacion -> variablesTotales comparador variablesTotales operadoresComparacion estructuraComparacion','estructuraComparacion',5,'p_estructuraComparacion','Sintactico.py',132),
  ('comparador -> MENOR_QUE','comparador',1,'p_comparador','Sintactico.py',136),
  ('comparador -> MAYOR_QUE','comparador',1,'p_comparador','Sintactico.py',137),
  ('comparador -> MAYOR_IGUAL','comparador',1,'p_comparador','Sintactico.py',138),
  ('comparador -> DOBLE_IGUAL','comparador',1,'p_comparador','Sintactico.py',139),
  ('comparador -> MENOR_IGUAL','comparador',1,'p_comparador','Sintactico.py',140),
  ('comparador -> NO_IGUAL','comparador',1,'p_comparador','Sintactico.py',141),
  ('operadoresComparacion -> AND','operadoresComparacion',1,'p_operadoresComparacion','Sintactico.py',145),
  ('operadoresComparacion -> OR','operadoresComparacion',1,'p_operadoresComparacion','Sintactico.py',146),
  ('estructurasControl -> estructuraIf','estructurasControl',1,'p_estructurasControl','Sintactico.py',151),
  ('estructurasControl -> estructuraUntil','estructurasControl',1,'p_estructurasControl','Sintactico.py',152),
  ('estructurasControl -> estructuraCase','estructurasControl',1,'p_estructurasControl','Sintactico.py',153),
  ('estructuraIf -> IF PAR_I estructuraComparacion PAR_D cuerpo END','estructuraIf',6,'p_estructuraIf','Sintactico.py',157),
  ('estructuraIf -> IF estructuraComparacion cuerpo END','estructuraIf',4,'p_estructuraIf','Sintactico.py',158),
  ('estructuraIf -> IF PAR_I estructuraComparacion PAR_D cuerpo estructuraElse END','estructuraIf',7,'p_estructuraIf','Sintactico.py',159),
  ('estructuraIf -> IF estructuraComparacion cuerpo estructuraElse END','estructuraIf',5,'p_estructuraIf','Sintactico.py',160),
  ('estructuraUntil -> UNTIL PAR_I estructuraComparacion PAR_D cuerpo END','estructuraUntil',6,'p_estructuraUntil','Sintactico.py',164),
  ('estructuraUntil -> UNTIL estructuraComparacion cuerpo END','estructuraUntil',4,'p_estructuraUntil','Sintactico.py',165),
  ('estructuraElse -> ELSE cuerpo','estructuraElse',2,'p_estructuraElse','Sintactico.py',169),
  ('estructuraCase -> CASE NOMBRE_VARIABLE estructuraWhenI END','estructuraCase',4,'p_estructuraCase','Sintactico.py',172),
  ('estructuraWhenI -> estructuraWhen estructuraElse','estructuraWhenI',2,'p_estructuraWhenI','Sintactico.py',175),
  ('estructuraWhen -> WHEN sentenciaWhen cuerpo','estructuraWhen',3,'p_estructuraWhen','Sintactico.py',178),
  ('estructuraWhen -> estructuraWhen WHEN sentenciaWhen cuerpo','estructuraWhen',4,'p_estructuraWhen','Sintactico.py',179),
  ('sentenciaWhen -> estructuraComparacion','sentenciaWhen',1,'p_sentenciaWhen','Sintactico.py',183),
  ('sentenciaWhen -> intervaloW','sentenciaWhen',1,'p_sentenciaWhen','Sintactico.py',184),
  ('intervaloW -> ENTERO INTERVALO ENTERO','intervaloW',3,'p_intervaloW','Sintactico.py',188),
  ('estructuraArray -> CORCHETE_I CORCHETE_D','estructuraArray',2,'p_estructuraArray','Sintactico.py',196),
  ('estructuraArray -> ARRAY PUNTO NEW','estructuraArray',3,'p_estructuraArray','Sintactico.py',197),
  ('estructuraArray -> CORCHETE_I parametrosA CORCHETE_D','estructuraArray',3,'p_estructuraArray','Sintactico.py',198),
  ('parametrosA -> variablesTotales','parametrosA',1,'p_parametrosA','Sintactico.py',202),
  ('parametrosA -> variablesTotales COMA parametrosA','parametrosA',3,'p_parametrosA','Sintactico.py',203),
  ('funcionesArreglo -> TiposNomVariables PUNTO nombreFuncionesA','funcionesArreglo',3,'p_funcionesArreglo','Sintactico.py',207),
  ('funcionesArreglo -> estructuraArray PUNTO nombreFuncionesA','funcionesArreglo',3,'p_funcionesArreglo','Sintactico.py',208),
  ('nombreFuncionesA -> PUSH PAR_I variablesTotales PAR_D','nombreFuncionesA',4,'p_nombreFuncionesA','Sintactico.py',212),
  ('nombreFuncionesA -> DELETE PAR_I ENTERO PAR_D','nombreFuncionesA',4,'p_nombreFuncionesA','Sintactico.py',213),
  ('funcionesString -> TiposNomVariables PUNTO nombreFuncionesS','funcionesString',3,'p_funcionesString','Sintactico.py',217),
  ('funcionesString -> CADENA PUNTO nombreFuncionesS','funcionesString',3,'p_funcionesString','Sintactico.py',218),
  ('nombreFuncionesS -> INSERT PAR_I ENTERO COMA CADENA PAR_D','nombreFuncionesS',6,'p_nombreFuncionesS','Sintactico.py',222),
  ('nombreFuncionesS -> INSERT PAR_I ENTERO COMA TiposNomVariables PAR_D','nombreFuncionesS',6,'p_nombreFuncionesS','Sintactico.py',223),
  ('nombreFuncionesS -> INSERT PAR_I TiposNomVariables COMA CADENA PAR_D','nombreFuncionesS',6,'p_nombreFuncionesS','Sintactico.py',224),
  ('nombreFuncionesS -> INSERT PAR_I TiposNomVariables COMA TiposNomVariables PAR_D','nombreFuncionesS',6,'p_nombreFuncionesS','Sintactico.py',225),
  ('nombreFuncionesS -> SIZE PAR_I PAR_D','nombreFuncionesS',3,'p_nombreFuncionesS','Sintactico.py',226),
  ('nombreFuncionesS -> SIZE','nombreFuncionesS',1,'p_nombreFuncionesS','Sintactico.py',227),
  ('estructuraHash -> LLAVE_I cuerpoH LLAVE_D','estructuraHash',3,'p_estructuraHash','Sintactico.py',232),
  ('cuerpoH -> CADENA ASIGNACION valorTodos','cuerpoH',3,'p_cuerpoH','Sintactico.py',235),
  ('cuerpoH -> cuerpoH COMA CADENA ASIGNACION valorTodos','cuerpoH',5,'p_cuerpoH','Sintactico.py',236),
  ('estructuraFunciones -> DEF funcionSinAtributos END','estructuraFunciones',3,'p_estructuraFunciones','Sintactico.py',241),
  ('estructuraFunciones -> DEF funcionConAtributos END','estructuraFunciones',3,'p_estructuraFunciones','Sintactico.py',242),
  ('estructuraFunciones -> DEF funcionConDefectos END','estructuraFunciones',3,'p_estructuraFunciones','Sintactico.py',243),
  ('funcionSinAtributos -> NOMBRE_FUNCION PAR_I PAR_D cuerpo','funcionSinAtributos',4,'p_funcionSinAtributos','Sintactico.py',247),
  ('funcionConAtributos -> NOMBRE_FUNCION PAR_I parametrosFunciones PAR_D cuerpo','funcionConAtributos',5,'p_funcionConAtributos','Sintactico.py',251),
  ('parametrosFunciones -> NOMBRE_VARIABLE','parametrosFunciones',1,'p_parametrosFunciones','Sintactico.py',255),
  ('parametrosFunciones -> NOMBRE_VARIABLE COMA parametrosFunciones','parametrosFunciones',3,'p_parametrosFunciones','Sintactico.py',256),
  ('llamadoFunciones -> NOMBRE_FUNCION PAR_I PAR_D','llamadoFunciones',3,'p_llamadoFunciones','Sintactico.py',260),
  ('llamadoFunciones -> NOMBRE_FUNCION PAR_I parametrosA PAR_D','llamadoFunciones',4,'p_llamadoFunciones','Sintactico.py',261),
  ('funcionConDefectos -> NOMBRE_FUNCION PAR_I parametrosFuncionesDefecto PAR_D cuerpo','funcionConDefectos',5,'p_funcionConDefectos','Sintactico.py',265),
  ('parametrosFuncionesDefecto -> NOMBRE_VARIABLE IGUAL valorF','parametrosFuncionesDefecto',3,'p_parametrosFuncionesDefecto','Sintactico.py',268),
  ('parametrosFuncionesDefecto -> NOMBRE_VARIABLE IGUAL valorF COMA parametrosFuncionesDefecto','parametrosFuncionesDefecto',5,'p_parametrosFuncionesDefecto','Sintactico.py',269),
  ('valorF -> ENTERO','valorF',1,'p_valorF','Sintactico.py',274),
  ('valorF -> FLOTANTE','valorF',1,'p_valorF','Sintactico.py',275),
  ('valorF -> CADENA','valorF',1,'p_valorF','Sintactico.py',276),
  ('valorF -> TRUE','valorF',1,'p_valorF','Sintactico.py',277),
  ('valorF -> FALSE','valorF',1,'p_valorF','Sintactico.py',278),
  ('estructuraSalida -> operadoresSalidas cuerpoSalida','estructuraSalida',2,'p_estructuraSalida','Sintactico.py',283),
  ('estructuraSalida -> operadoresSalidas PAR_I cuerpoSalida PAR_D','estructuraSalida',4,'p_estructuraSalida','Sintactico.py',284),
  ('operadoresSalidas -> PUTS','operadoresSalidas',1,'p_operadoresSalidas','Sintactico.py',287),
  ('operadoresSalidas -> PRINT','operadoresSalidas',1,'p_operadoresSalidas','Sintactico.py',288),
  ('cuerpoSalida -> variablesTotales','cuerpoSalida',1,'p_cuerpoSalida','Sintactico.py',292),
  ('cuerpoSalida -> CADENA MAS TiposNomVariables','cuerpoSalida',3,'p_cuerpoSalida','Sintactico.py',293),
  ('cuerpoSalida -> operacion','cuerpoSalida',1,'p_cuerpoSalida','Sintactico.py',294),
  ('estructuraEntrada -> GETS PUNTO CHOMP','estructuraEntrada',3,'p_estructuraEntrada','Sintactico.py',297),
  ('limpiarDatos -> STDOUT PUNTO FLUSH','limpiarDatos',3,'p_limpiarDatos','Sintactico.py',300),
  ('estructuraCasting -> castingString','estructuraCasting',1,'p_estructuraCasting','Sintactico.py',304),
  ('estructuraCasting -> castingInteger','estructuraCasting',1,'p_estructuraCasting','Sintactico.py',305),
  ('estructuraCasting -> castingFloat','estructuraCasting',1,'p_estructuraCasting','Sintactico.py',306),
  ('castingString -> ENTERO PUNTO TOSTRING','castingString',3,'p_castingString','Sintactico.py',310),
  ('castingString -> FLOTANTE PUNTO TOSTRING','castingString',3,'p_castingString','Sintactico.py',311),
  ('castingString -> STRING PAR_I ENTERO PAR_D','castingString',4,'p_castingString','Sintactico.py',312),
  ('castingString -> STRING PAR_I FLOTANTE PAR_D','castingString',4,'p_castingString','Sintactico.py',313),
  ('castingInteger -> CADENA PUNTO TOINTEGER','castingInteger',3,'p_castingInteger','Sintactico.py',317),
  ('castingInteger -> FLOTANTE PUNTO TOINTEGER','castingInteger',3,'p_castingInteger','Sintactico.py',318),
  ('castingInteger -> INTEGER PAR_I CADENA PAR_D','castingInteger',4,'p_castingInteger','Sintactico.py',319),
  ('castingInteger -> INTEGER PAR_I FLOTANTE PAR_D','castingInteger',4,'p_castingInteger','Sintactico.py',320),
  ('castingFloat -> ENTERO PUNTO TOFLOAT','castingFloat',3,'p_castingFloat','Sintactico.py',324),
  ('castingFloat -> CADENA PUNTO TOFLOAT','castingFloat',3,'p_castingFloat','Sintactico.py',325),
  ('castingFloat -> FLOAT PAR_I ENTERO PAR_D','castingFloat',4,'p_castingFloat','Sintactico.py',326),
  ('castingFloat -> FLOAT PAR_I CADENA PAR_D','castingFloat',4,'p_castingFloat','Sintactico.py',327),
  ('estructuraLeerArchivo -> FILE PUNTO READ PAR_I TiposNomVariables PAR_D','estructuraLeerArchivo',6,'p_estructuraLeerArchivo','Sintactico.py',334),
  ('estructuraLeerArchivo -> FILE PUNTO READ PAR_I CADENA PAR_D','estructuraLeerArchivo',6,'p_estructuraLeerArchivo','Sintactico.py',335),
  ('estructuraLeerArchivoLinea -> FILE PUNTO READLINES PAR_I TiposNomVariables PAR_D','estructuraLeerArchivoLinea',6,'p_estructuraLeerArchivoLinea','Sintactico.py',339),
  ('estructuraLeerArchivoLinea -> FILE PUNTO READLINES PAR_I CADENA PAR_D','estructuraLeerArchivoLinea',6,'p_estructuraLeerArchivoLinea','Sintactico.py',340),
  ('estructuraAbrirArchivo -> FILE PUNTO OPEN PAR_I TiposNomVariables COMA MODOAPERTURA PAR_D','estructuraAbrirArchivo',8,'p_estructuraAbrirArchivo','Sintactico.py',343),
  ('estructuraAbrirArchivo -> FILE PUNTO OPEN PAR_I CADENA COMA MODOAPERTURA PAR_D','estructuraAbrirArchivo',8,'p_estructuraAbrirArchivo','Sintactico.py',344),
  ('estructuraRecorrerArchivo -> variablesRecorrer PUNTO EACH DO PIPE NOMBRE_VARIABLE PIPE cuerpo END','estructuraRecorrerArchivo',9,'p_estructuraRecorrerArchivo','Sintactico.py',349),
  ('estructuraRecorrerArchivo -> estructuraAbrirArchivo DO PIPE NOMBRE_VARIABLE PIPE cuerpo END','estructuraRecorrerArchivo',7,'p_estructuraRecorrerArchivo','Sintactico.py',350),
  ('estructuraSplit -> TiposNomVariables PUNTO SPLIT PAR_I CADENA PAR_D','estructuraSplit',6,'p_estructuraSplit','Sintactico.py',354),
  ('variablesRecorrer -> TiposNomVariables','variablesRecorrer',1,'p_variablesRecorrer','Sintactico.py',357),
  ('variablesRecorrer -> estructuraLeerArchivoLinea','variablesRecorrer',1,'p_variablesRecorrer','Sintactico.py',358),
  ('variablesRecorrer -> estructuraSplit','variablesRecorrer',1,'p_variablesRecorrer','Sintactico.py',359),
  ('estructuraEscribirArchivo -> FILE PUNTO WRITE PAR_I TiposNomVariables COMA TiposNomVariables PAR_D','estructuraEscribirArchivo',8,'p_estructuraEscribirArchivo','Sintactico.py',363),
  ('estructuraEscribirArchivo -> FILE PUNTO WRITE PAR_I TiposNomVariables COMA CADENA PAR_D','estructuraEscribirArchivo',8,'p_estructuraEscribirArchivo','Sintactico.py',364),
  ('estructuraEscribirArchivo -> FILE PUNTO WRITE PAR_I CADENA COMA CADENA PAR_D','estructuraEscribirArchivo',8,'p_estructuraEscribirArchivo','Sintactico.py',365),
  ('estructuraEscribirArchivo -> FILE PUNTO WRITE PAR_I CADENA COMA TiposNomVariables PAR_D','estructuraEscribirArchivo',8,'p_estructuraEscribirArchivo','Sintactico.py',366),
  ('estructuraEscribirArchivo -> NOMBRE_VARIABLE PUNTO WRITE PAR_I CADENA PAR_D','estructuraEscribirArchivo',6,'p_estructuraEscribirArchivo','Sintactico.py',367),
]
